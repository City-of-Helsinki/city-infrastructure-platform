# Generated by Django 3.2.13 on 2022-06-13 09:42

import django.db.models.deletion
import enumfields.fields
import mptt.fields
from django.db import migrations, models

import traffic_control.enums
import traffic_control.models.barrier
import traffic_control.models.road_marking
import traffic_control.models.signpost
import traffic_control.models.traffic_light
import traffic_control.models.traffic_sign


class Migration(migrations.Migration):

    dependencies = [
        ('traffic_control', '0050_remove_responsible_entity_person'),
    ]

    operations = [
        migrations.AlterField(
            model_name='additionalsigncontentplan',
            name='device_type',
            field=models.ForeignKey(help_text='Type of the device from Helsinki Design Manual.', limit_choices_to=models.Q(models.Q(('target_model', None), ('target_model', traffic_control.enums.DeviceTypeTargetModel['ADDITIONAL_SIGN']), _connector='OR')), null=True, on_delete=django.db.models.deletion.PROTECT, to='traffic_control.trafficcontroldevicetype', verbose_name='Device type'),
        ),
        migrations.AlterField(
            model_name='additionalsigncontentplan',
            name='order',
            field=models.SmallIntegerField(default=1, help_text='The order of the sign in relation to the signs at the same point. Order from top to bottom, from left to right starting at 1.', verbose_name='Order'),
        ),
        migrations.AlterField(
            model_name='additionalsigncontentplan',
            name='parent',
            field=models.ForeignKey(help_text='Additional Sign which this content belongs to.', on_delete=django.db.models.deletion.CASCADE, related_name='content', to='traffic_control.additionalsignplan', verbose_name='Parent Additional Sign Plan'),
        ),
        migrations.AlterField(
            model_name='additionalsigncontentplan',
            name='source_id',
            field=models.CharField(blank=True, default=None, help_text='ID of the device in the source where this device was imported from.', max_length=64, null=True, verbose_name='Source id'),
        ),
        migrations.AlterField(
            model_name='additionalsigncontentplan',
            name='source_name',
            field=models.CharField(blank=True, default=None, help_text='Name of the source for where this device was imported from.', max_length=254, null=True, verbose_name='Source name'),
        ),
        migrations.AlterField(
            model_name='additionalsigncontentreal',
            name='device_type',
            field=models.ForeignKey(help_text='Type of the device from Helsinki Design Manual.', limit_choices_to=models.Q(models.Q(('target_model', None), ('target_model', traffic_control.enums.DeviceTypeTargetModel['ADDITIONAL_SIGN']), _connector='OR')), null=True, on_delete=django.db.models.deletion.PROTECT, to='traffic_control.trafficcontroldevicetype', verbose_name='Device type'),
        ),
        migrations.AlterField(
            model_name='additionalsigncontentreal',
            name='order',
            field=models.SmallIntegerField(default=1, help_text='The order of the sign in relation to the signs at the same point. Order from top to bottom, from left to right starting at 1.', verbose_name='Order'),
        ),
        migrations.AlterField(
            model_name='additionalsigncontentreal',
            name='parent',
            field=models.ForeignKey(help_text='Additional Sign which this content belongs to.', on_delete=django.db.models.deletion.CASCADE, related_name='content', to='traffic_control.additionalsignreal', verbose_name='Parent Additional Sign Real'),
        ),
        migrations.AlterField(
            model_name='additionalsigncontentreal',
            name='source_id',
            field=models.CharField(blank=True, default=None, help_text='ID of the device in the source where this device was imported from.', max_length=64, null=True, verbose_name='Source id'),
        ),
        migrations.AlterField(
            model_name='additionalsigncontentreal',
            name='source_name',
            field=models.CharField(blank=True, default=None, help_text='Name of the source for where this device was imported from.', max_length=254, null=True, verbose_name='Source name'),
        ),
        migrations.AlterField(
            model_name='additionalsignplan',
            name='direction',
            field=models.IntegerField(default=0, help_text="Direction of the sign in degrees. If 'road name' is entered the direction is in relation to the road. Otherwise cardinal direction is used. e.g. 0 = North, 45 = North East, 90 = East, 180 = South.", verbose_name='Direction'),
        ),
        migrations.AlterField(
            model_name='additionalsignplan',
            name='height',
            field=models.IntegerField(blank=True, help_text='The height of the sign from the ground, measured from the top in centimeters.', null=True, verbose_name='Height'),
        ),
        migrations.AlterField(
            model_name='additionalsignplan',
            name='lane_number',
            field=enumfields.fields.EnumField(blank=True, default='11', enum=traffic_control.enums.LaneNumber, help_text='Describes which lane of the road this sign affects.', max_length=10, verbose_name='Lane number'),
        ),
        migrations.AlterField(
            model_name='additionalsignplan',
            name='lane_type',
            field=enumfields.fields.EnumField(blank=True, default=1, enum=traffic_control.enums.LaneType, help_text='The type of lane which this sign affects.', max_length=10, verbose_name='Lane type'),
        ),
        migrations.AlterField(
            model_name='additionalsignplan',
            name='lifecycle',
            field=enumfields.fields.EnumIntegerField(default=3, enum=traffic_control.enums.Lifecycle, help_text='Lifecycle of the device, which describes the activity status of the device.', verbose_name='Lifecycle'),
        ),
        migrations.AlterField(
            model_name='additionalsignplan',
            name='location_specifier',
            field=enumfields.fields.EnumIntegerField(blank=True, default=1, enum=traffic_control.models.traffic_sign.LocationSpecifier, help_text='Specifies where the sign is in relation to the road.', null=True, verbose_name='Location specifier'),
        ),
        migrations.AlterField(
            model_name='additionalsignplan',
            name='mount_plan',
            field=models.ForeignKey(blank=True, help_text='Mount that this sign is mounted on.', null=True, on_delete=django.db.models.deletion.PROTECT, to='traffic_control.mountplan', verbose_name='Mount Plan'),
        ),
        migrations.AlterField(
            model_name='additionalsignplan',
            name='mount_type',
            field=models.ForeignKey(blank=True, help_text='Type of the mount this sign is attached to.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='traffic_control.mounttype', verbose_name='Mount type'),
        ),
        migrations.AlterField(
            model_name='additionalsignplan',
            name='owner',
            field=models.ForeignKey(help_text='Owner who orders and is responsible for the maintenance of the device.', on_delete=django.db.models.deletion.PROTECT, to='traffic_control.owner', verbose_name='Owner'),
        ),
        migrations.AlterField(
            model_name='additionalsignplan',
            name='parent',
            field=models.ForeignKey(blank=True, help_text='The traffic sign to which this additional sign is associated.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='additional_signs', to='traffic_control.trafficsignplan', verbose_name='Parent Traffic Sign Plan'),
        ),
        migrations.AlterField(
            model_name='additionalsignplan',
            name='plan',
            field=models.ForeignKey(blank=True, help_text='Plan which this Additional Sign Plan is a part of.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='additional_sign_plans', to='traffic_control.plan', verbose_name='Plan'),
        ),
        migrations.AlterField(
            model_name='additionalsignplan',
            name='responsible_entity',
            field=models.ForeignKey(blank=True, help_text='Organization or project that this device is assigned to.', null=True, on_delete=django.db.models.deletion.PROTECT, to='traffic_control.responsibleentity', verbose_name='Responsible entity'),
        ),
        migrations.AlterField(
            model_name='additionalsignplan',
            name='road_name',
            field=models.CharField(blank=True, help_text='Name of the road this sign is installed at.', max_length=254, null=True, verbose_name='Road name'),
        ),
        migrations.AlterField(
            model_name='additionalsignplan',
            name='seasonal_validity_period_end',
            field=models.DateField(blank=True, help_text='Date after which this sign becomes seasonally inactive.', null=True, verbose_name='Seasonal validity period end'),
        ),
        migrations.AlterField(
            model_name='additionalsignplan',
            name='seasonal_validity_period_start',
            field=models.DateField(blank=True, help_text='Date on which this sign becomes seasonally active.', null=True, verbose_name='Seasonal validity period start'),
        ),
        migrations.AlterField(
            model_name='additionalsignplan',
            name='source_id',
            field=models.CharField(blank=True, default=None, help_text='ID of the device in the source where this device was imported from.', max_length=64, null=True, verbose_name='Source id'),
        ),
        migrations.AlterField(
            model_name='additionalsignplan',
            name='source_name',
            field=models.CharField(blank=True, default=None, help_text='Name of the source for where this device was imported from.', max_length=254, null=True, verbose_name='Source name'),
        ),
        migrations.AlterField(
            model_name='additionalsignplan',
            name='validity_period_end',
            field=models.DateField(blank=True, help_text='Date after which this sign becomes inactive.', null=True, verbose_name='Validity period end'),
        ),
        migrations.AlterField(
            model_name='additionalsignplan',
            name='validity_period_start',
            field=models.DateField(blank=True, help_text='Date on which this sign becomes active.', null=True, verbose_name='Validity period start'),
        ),
        migrations.AlterField(
            model_name='additionalsignreal',
            name='additional_sign_plan',
            field=models.ForeignKey(blank=True, help_text='The plan for this Additional Sign.', null=True, on_delete=django.db.models.deletion.PROTECT, to='traffic_control.additionalsignplan', verbose_name='Additional Sign Plan'),
        ),
        migrations.AlterField(
            model_name='additionalsignreal',
            name='attachment_url',
            field=models.URLField(blank=True, help_text='URL to a file attachment related to this sign.', max_length=500, null=True, verbose_name='Attachment url'),
        ),
        migrations.AlterField(
            model_name='additionalsignreal',
            name='condition',
            field=enumfields.fields.EnumIntegerField(blank=True, default=5, enum=traffic_control.enums.Condition, help_text='Describes the condition of this device.', null=True, verbose_name='Condition'),
        ),
        migrations.AlterField(
            model_name='additionalsignreal',
            name='coverage_area',
            field=models.ForeignKey(blank=True, help_text='Coverage area that this sign belongs to.', null=True, on_delete=django.db.models.deletion.PROTECT, to='traffic_control.coveragearea', verbose_name='Coverage area'),
        ),
        migrations.AlterField(
            model_name='additionalsignreal',
            name='direction',
            field=models.IntegerField(default=0, help_text="Direction of the sign in degrees. If 'road name' is entered the direction is in relation to the road. Otherwise cardinal direction is used. e.g. 0 = North, 45 = North East, 90 = East, 180 = South.", verbose_name='Direction'),
        ),
        migrations.AlterField(
            model_name='additionalsignreal',
            name='height',
            field=models.IntegerField(blank=True, help_text='The height of the sign from the ground, measured from the top in centimeters.', null=True, verbose_name='Height'),
        ),
        migrations.AlterField(
            model_name='additionalsignreal',
            name='installation_date',
            field=models.DateField(blank=True, help_text='Date on which this device was installed on.', null=True, verbose_name='Installation date'),
        ),
        migrations.AlterField(
            model_name='additionalsignreal',
            name='installation_details',
            field=models.CharField(blank=True, help_text='Additional details about the installation.', max_length=254, null=True, verbose_name='Installation details'),
        ),
        migrations.AlterField(
            model_name='additionalsignreal',
            name='installation_id',
            field=models.CharField(blank=True, help_text='The id number of the installation record.', max_length=254, null=True, verbose_name='Installation id'),
        ),
        migrations.AlterField(
            model_name='additionalsignreal',
            name='installation_status',
            field=enumfields.fields.EnumField(blank=True, default='IN_USE', enum=traffic_control.enums.InstallationStatus, help_text='Describes this devices installation status.', max_length=10, null=True, verbose_name='Installation status'),
        ),
        migrations.AlterField(
            model_name='additionalsignreal',
            name='installed_by',
            field=models.CharField(blank=True, help_text='Name of the organization who installed this sign.', max_length=254, verbose_name='Installed by'),
        ),
        migrations.AlterField(
            model_name='additionalsignreal',
            name='lane_number',
            field=enumfields.fields.EnumField(blank=True, default='11', enum=traffic_control.enums.LaneNumber, help_text='Describes which lane of the road this sign affects.', max_length=10, verbose_name='Lane number'),
        ),
        migrations.AlterField(
            model_name='additionalsignreal',
            name='lane_type',
            field=enumfields.fields.EnumField(blank=True, default=1, enum=traffic_control.enums.LaneType, help_text='The type of lane which this sign affects.', max_length=10, verbose_name='Lane type'),
        ),
        migrations.AlterField(
            model_name='additionalsignreal',
            name='legacy_code',
            field=models.CharField(blank=True, help_text='The sign type code of the sign in the old Finnish road traffic law.', max_length=32, null=True, verbose_name='Legacy Traffic Sign Code'),
        ),
        migrations.AlterField(
            model_name='additionalsignreal',
            name='lifecycle',
            field=enumfields.fields.EnumIntegerField(default=3, enum=traffic_control.enums.Lifecycle, help_text='Lifecycle of the device, which describes the activity status of the device.', verbose_name='Lifecycle'),
        ),
        migrations.AlterField(
            model_name='additionalsignreal',
            name='location_specifier',
            field=enumfields.fields.EnumIntegerField(blank=True, default=1, enum=traffic_control.models.traffic_sign.LocationSpecifier, help_text='Specifies where the sign is in relation to the road.', null=True, verbose_name='Location specifier'),
        ),
        migrations.AlterField(
            model_name='additionalsignreal',
            name='manufacturer',
            field=models.CharField(blank=True, help_text='Name of the organization that manufactured this sign.', max_length=254, null=True, verbose_name='Manufacturer'),
        ),
        migrations.AlterField(
            model_name='additionalsignreal',
            name='mount_real',
            field=models.ForeignKey(blank=True, help_text='Mount that this sign is mounted on.', null=True, on_delete=django.db.models.deletion.PROTECT, to='traffic_control.mountreal', verbose_name='Mount Real'),
        ),
        migrations.AlterField(
            model_name='additionalsignreal',
            name='mount_type',
            field=models.ForeignKey(blank=True, help_text='Type of the mount this sign is attached to.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='traffic_control.mounttype', verbose_name='Mount type'),
        ),
        migrations.AlterField(
            model_name='additionalsignreal',
            name='operation',
            field=models.CharField(blank=True, help_text='Maintenance operations done to the sign, e.g. washing, straightening or painting.', max_length=64, null=True, verbose_name='Operation'),
        ),
        migrations.AlterField(
            model_name='additionalsignreal',
            name='owner',
            field=models.ForeignKey(help_text='Owner who orders and is responsible for the maintenance of the device.', on_delete=django.db.models.deletion.PROTECT, to='traffic_control.owner', verbose_name='Owner'),
        ),
        migrations.AlterField(
            model_name='additionalsignreal',
            name='parent',
            field=models.ForeignKey(blank=True, help_text='The traffic sign to which this additional sign is associated.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='additional_signs', to='traffic_control.trafficsignreal', verbose_name='Parent Traffic Sign Real'),
        ),
        migrations.AlterField(
            model_name='additionalsignreal',
            name='permit_decision_id',
            field=models.CharField(blank=True, help_text='The id number of the installation permit.', max_length=254, null=True, verbose_name='Permit decision id'),
        ),
        migrations.AlterField(
            model_name='additionalsignreal',
            name='responsible_entity',
            field=models.ForeignKey(blank=True, help_text='Organization or project that this device is assigned to.', null=True, on_delete=django.db.models.deletion.PROTECT, to='traffic_control.responsibleentity', verbose_name='Responsible entity'),
        ),
        migrations.AlterField(
            model_name='additionalsignreal',
            name='rfid',
            field=models.CharField(blank=True, help_text='RFID tag of the sign (if any).', max_length=254, null=True, verbose_name='RFID'),
        ),
        migrations.AlterField(
            model_name='additionalsignreal',
            name='road_name',
            field=models.CharField(blank=True, help_text='Name of the road this sign is installed at.', max_length=254, null=True, verbose_name='Road name'),
        ),
        migrations.AlterField(
            model_name='additionalsignreal',
            name='scanned_at',
            field=models.DateTimeField(blank=True, help_text='Date and time on which this sign was last scanned at.', null=True, verbose_name='Scanned at'),
        ),
        migrations.AlterField(
            model_name='additionalsignreal',
            name='seasonal_validity_period_end',
            field=models.DateField(blank=True, help_text='Date after which this sign becomes seasonally inactive.', null=True, verbose_name='Seasonal validity period end'),
        ),
        migrations.AlterField(
            model_name='additionalsignreal',
            name='seasonal_validity_period_start',
            field=models.DateField(blank=True, help_text='Date on which this sign becomes seasonally active.', null=True, verbose_name='Seasonal validity period start'),
        ),
        migrations.AlterField(
            model_name='additionalsignreal',
            name='size',
            field=enumfields.fields.EnumField(blank=True, default='M', enum=traffic_control.enums.Size, max_length=1, null=True, verbose_name='Size'),
        ),
        migrations.AlterField(
            model_name='additionalsignreal',
            name='source_id',
            field=models.CharField(blank=True, default=None, help_text='ID of the device in the source where this device was imported from.', max_length=64, null=True, verbose_name='Source id'),
        ),
        migrations.AlterField(
            model_name='additionalsignreal',
            name='source_name',
            field=models.CharField(blank=True, default=None, help_text='Name of the source for where this device was imported from.', max_length=254, null=True, verbose_name='Source name'),
        ),
        migrations.AlterField(
            model_name='additionalsignreal',
            name='validity_period_end',
            field=models.DateField(blank=True, help_text='Date after which this sign becomes inactive.', null=True, verbose_name='Validity period end'),
        ),
        migrations.AlterField(
            model_name='additionalsignreal',
            name='validity_period_start',
            field=models.DateField(blank=True, help_text='Date on which this sign becomes active.', null=True, verbose_name='Validity period start'),
        ),
        migrations.AlterField(
            model_name='barrierplan',
            name='connection_type',
            field=enumfields.fields.EnumIntegerField(default=1, enum=traffic_control.models.barrier.ConnectionType, help_text='Describes if the barrier is open or closed.', verbose_name='Connection type'),
        ),
        migrations.AlterField(
            model_name='barrierplan',
            name='device_type',
            field=models.ForeignKey(help_text='Type of the device from Helsinki Design Manual.', limit_choices_to=models.Q(models.Q(('target_model', None), ('target_model', traffic_control.enums.DeviceTypeTargetModel['BARRIER']), _connector='OR')), on_delete=django.db.models.deletion.PROTECT, to='traffic_control.trafficcontroldevicetype', verbose_name='Device type'),
        ),
        migrations.AlterField(
            model_name='barrierplan',
            name='lane_number',
            field=enumfields.fields.EnumField(blank=True, default='11', enum=traffic_control.enums.LaneNumber, help_text='Describes which lane of the road this barrier affects.', max_length=10, verbose_name='Lane number'),
        ),
        migrations.AlterField(
            model_name='barrierplan',
            name='lane_type',
            field=enumfields.fields.EnumField(blank=True, default=1, enum=traffic_control.enums.LaneType, help_text='The type of lane which this barrier affects.', max_length=10, verbose_name='Lane type'),
        ),
        migrations.AlterField(
            model_name='barrierplan',
            name='length',
            field=models.IntegerField(blank=True, help_text='Length of the barrier in centimeters.', null=True, verbose_name='Length'),
        ),
        migrations.AlterField(
            model_name='barrierplan',
            name='lifecycle',
            field=enumfields.fields.EnumIntegerField(default=3, enum=traffic_control.enums.Lifecycle, help_text='Lifecycle of the device, which describes the activity status of the device.', verbose_name='Lifecycle'),
        ),
        migrations.AlterField(
            model_name='barrierplan',
            name='location_specifier',
            field=enumfields.fields.EnumIntegerField(blank=True, default=2, enum=traffic_control.models.barrier.LocationSpecifier, help_text='Specifies where the barrier is in relation to the road.', null=True, verbose_name='Location specifier'),
        ),
        migrations.AlterField(
            model_name='barrierplan',
            name='material',
            field=models.CharField(blank=True, help_text='Describes the material that the barrier is made of.', max_length=254, null=True, verbose_name='Material'),
        ),
        migrations.AlterField(
            model_name='barrierplan',
            name='owner',
            field=models.ForeignKey(help_text='Owner who orders and is responsible for the maintenance of the device.', on_delete=django.db.models.deletion.PROTECT, to='traffic_control.owner', verbose_name='Owner'),
        ),
        migrations.AlterField(
            model_name='barrierplan',
            name='plan',
            field=models.ForeignKey(blank=True, help_text='Plan which this Barrier Plan is a part of.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='barrier_plans', to='traffic_control.plan', verbose_name='Plan'),
        ),
        migrations.AlterField(
            model_name='barrierplan',
            name='responsible_entity',
            field=models.ForeignKey(blank=True, help_text='Organization or project that this device is assigned to.', null=True, on_delete=django.db.models.deletion.PROTECT, to='traffic_control.responsibleentity', verbose_name='Responsible entity'),
        ),
        migrations.AlterField(
            model_name='barrierplan',
            name='road_name',
            field=models.CharField(help_text='Name of the road this barrier is installed at.', max_length=254, verbose_name='Road name'),
        ),
        migrations.AlterField(
            model_name='barrierplan',
            name='source_id',
            field=models.CharField(blank=True, default=None, help_text='ID of the device in the source where this device was imported from.', max_length=64, null=True, verbose_name='Source id'),
        ),
        migrations.AlterField(
            model_name='barrierplan',
            name='source_name',
            field=models.CharField(blank=True, default=None, help_text='Name of the source for where this device was imported from.', max_length=254, null=True, verbose_name='Source name'),
        ),
        migrations.AlterField(
            model_name='barrierplan',
            name='txt',
            field=models.TextField(blank=True, help_text='Text written on the barrier.', null=True, verbose_name='Txt'),
        ),
        migrations.AlterField(
            model_name='barrierplan',
            name='validity_period_end',
            field=models.DateField(blank=True, help_text='Date after which this barrier becomes inactive.', null=True, verbose_name='Validity period end'),
        ),
        migrations.AlterField(
            model_name='barrierplan',
            name='validity_period_start',
            field=models.DateField(blank=True, help_text='Date on which this barrier becomes active.', null=True, verbose_name='Validity period start'),
        ),
        migrations.AlterField(
            model_name='barrierreal',
            name='barrier_plan',
            field=models.ForeignKey(blank=True, help_text='The plan for this barrier.', null=True, on_delete=django.db.models.deletion.PROTECT, to='traffic_control.barrierplan', verbose_name='Barrier Plan'),
        ),
        migrations.AlterField(
            model_name='barrierreal',
            name='condition',
            field=enumfields.fields.EnumIntegerField(blank=True, default=5, enum=traffic_control.enums.Condition, help_text='Describes the condition of this device.', null=True, verbose_name='Condition'),
        ),
        migrations.AlterField(
            model_name='barrierreal',
            name='connection_type',
            field=enumfields.fields.EnumIntegerField(default=1, enum=traffic_control.models.barrier.ConnectionType, help_text='Describes if the barrier is open or closed.', verbose_name='Connection type'),
        ),
        migrations.AlterField(
            model_name='barrierreal',
            name='device_type',
            field=models.ForeignKey(help_text='Type of the device from Helsinki Design Manual.', limit_choices_to=models.Q(models.Q(('target_model', None), ('target_model', traffic_control.enums.DeviceTypeTargetModel['BARRIER']), _connector='OR')), on_delete=django.db.models.deletion.PROTECT, to='traffic_control.trafficcontroldevicetype', verbose_name='Device type'),
        ),
        migrations.AlterField(
            model_name='barrierreal',
            name='installation_date',
            field=models.DateField(blank=True, help_text='Date on which this device was installed on.', null=True, verbose_name='Installation date'),
        ),
        migrations.AlterField(
            model_name='barrierreal',
            name='installation_status',
            field=enumfields.fields.EnumField(blank=True, default='IN_USE', enum=traffic_control.enums.InstallationStatus, help_text='Describes this devices installation status.', max_length=10, null=True, verbose_name='Installation status'),
        ),
        migrations.AlterField(
            model_name='barrierreal',
            name='lane_number',
            field=enumfields.fields.EnumField(blank=True, default='11', enum=traffic_control.enums.LaneNumber, help_text='Describes which lane of the road this barrier affects.', max_length=10, verbose_name='Lane number'),
        ),
        migrations.AlterField(
            model_name='barrierreal',
            name='lane_type',
            field=enumfields.fields.EnumField(blank=True, default=1, enum=traffic_control.enums.LaneType, help_text='The type of lane which this barrier affects.', max_length=10, verbose_name='Lane type'),
        ),
        migrations.AlterField(
            model_name='barrierreal',
            name='length',
            field=models.IntegerField(blank=True, help_text='Length of the barrier in centimeters.', null=True, verbose_name='Length'),
        ),
        migrations.AlterField(
            model_name='barrierreal',
            name='lifecycle',
            field=enumfields.fields.EnumIntegerField(default=3, enum=traffic_control.enums.Lifecycle, help_text='Lifecycle of the device, which describes the activity status of the device.', verbose_name='Lifecycle'),
        ),
        migrations.AlterField(
            model_name='barrierreal',
            name='location_specifier',
            field=enumfields.fields.EnumIntegerField(blank=True, default=2, enum=traffic_control.models.barrier.LocationSpecifier, help_text='Specifies where the barrier is in relation to the road.', null=True, verbose_name='Location specifier'),
        ),
        migrations.AlterField(
            model_name='barrierreal',
            name='material',
            field=models.CharField(blank=True, help_text='Describes the material that the barrier is made of.', max_length=254, null=True, verbose_name='Material'),
        ),
        migrations.AlterField(
            model_name='barrierreal',
            name='owner',
            field=models.ForeignKey(help_text='Owner who orders and is responsible for the maintenance of the device.', on_delete=django.db.models.deletion.PROTECT, to='traffic_control.owner', verbose_name='Owner'),
        ),
        migrations.AlterField(
            model_name='barrierreal',
            name='responsible_entity',
            field=models.ForeignKey(blank=True, help_text='Organization or project that this device is assigned to.', null=True, on_delete=django.db.models.deletion.PROTECT, to='traffic_control.responsibleentity', verbose_name='Responsible entity'),
        ),
        migrations.AlterField(
            model_name='barrierreal',
            name='road_name',
            field=models.CharField(help_text='Name of the road this barrier is installed at.', max_length=254, verbose_name='Road name'),
        ),
        migrations.AlterField(
            model_name='barrierreal',
            name='source_id',
            field=models.CharField(blank=True, default=None, help_text='ID of the device in the source where this device was imported from.', max_length=64, null=True, verbose_name='Source id'),
        ),
        migrations.AlterField(
            model_name='barrierreal',
            name='source_name',
            field=models.CharField(blank=True, default=None, help_text='Name of the source for where this device was imported from.', max_length=254, null=True, verbose_name='Source name'),
        ),
        migrations.AlterField(
            model_name='barrierreal',
            name='txt',
            field=models.TextField(blank=True, help_text='Text written on the barrier.', null=True, verbose_name='Txt'),
        ),
        migrations.AlterField(
            model_name='barrierreal',
            name='validity_period_end',
            field=models.DateField(blank=True, help_text='Date after which this barrier becomes inactive.', null=True, verbose_name='Validity period end'),
        ),
        migrations.AlterField(
            model_name='barrierreal',
            name='validity_period_start',
            field=models.DateField(blank=True, help_text='Date on which this barrier becomes active.', null=True, verbose_name='Validity period start'),
        ),
        migrations.AlterField(
            model_name='coveragearea',
            name='source_id',
            field=models.CharField(blank=True, default=None, help_text='ID of the device in the source where this device was imported from.', max_length=64, null=True, verbose_name='Source id'),
        ),
        migrations.AlterField(
            model_name='coveragearea',
            name='source_name',
            field=models.CharField(blank=True, default=None, help_text='Name of the source for where this device was imported from.', max_length=254, null=True, verbose_name='Source name'),
        ),
        migrations.AlterField(
            model_name='mountplan',
            name='cross_bar_length',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Length of the cross bar for this mount in centimeters.', max_digits=5, null=True, verbose_name='Cross bar length'),
        ),
        migrations.AlterField(
            model_name='mountplan',
            name='electric_accountable',
            field=models.CharField(blank=True, help_text='The entity responsible for the mount (if electric).', max_length=254, null=True, verbose_name='Electric accountable'),
        ),
        migrations.AlterField(
            model_name='mountplan',
            name='height',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='The height of the mount from the ground, measured from the top in centimeters.', max_digits=5, null=True, verbose_name='Height'),
        ),
        migrations.AlterField(
            model_name='mountplan',
            name='lifecycle',
            field=enumfields.fields.EnumIntegerField(default=3, enum=traffic_control.enums.Lifecycle, help_text='Lifecycle of the device, which describes the activity status of the device.', verbose_name='Lifecycle'),
        ),
        migrations.AlterField(
            model_name='mountplan',
            name='material',
            field=models.CharField(blank=True, help_text='Describes the material that the mount is made of.', max_length=254, null=True, verbose_name='Material'),
        ),
        migrations.AlterField(
            model_name='mountplan',
            name='owner',
            field=models.ForeignKey(help_text='Owner who orders and is responsible for the maintenance of the device.', on_delete=django.db.models.deletion.PROTECT, to='traffic_control.owner', verbose_name='Owner'),
        ),
        migrations.AlterField(
            model_name='mountplan',
            name='plan',
            field=models.ForeignKey(blank=True, help_text='Plan which this mount plan is a part of.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='mount_plans', to='traffic_control.plan', verbose_name='Plan'),
        ),
        migrations.AlterField(
            model_name='mountplan',
            name='portal_type',
            field=models.ForeignKey(blank=True, help_text='Id number of the portal type in the portal_type table.', null=True, on_delete=django.db.models.deletion.PROTECT, to='traffic_control.portaltype', verbose_name='Portal type'),
        ),
        migrations.AlterField(
            model_name='mountplan',
            name='responsible_entity',
            field=models.ForeignKey(blank=True, help_text='Organization or project that this device is assigned to.', null=True, on_delete=django.db.models.deletion.PROTECT, to='traffic_control.responsibleentity', verbose_name='Responsible entity'),
        ),
        migrations.AlterField(
            model_name='mountplan',
            name='source_id',
            field=models.CharField(blank=True, default=None, help_text='ID of the device in the source where this device was imported from.', max_length=64, null=True, verbose_name='Source id'),
        ),
        migrations.AlterField(
            model_name='mountplan',
            name='source_name',
            field=models.CharField(blank=True, default=None, help_text='Name of the source for where this device was imported from.', max_length=254, null=True, verbose_name='Source name'),
        ),
        migrations.AlterField(
            model_name='mountplan',
            name='txt',
            field=models.CharField(blank=True, help_text='Text written on the mount.', max_length=254, null=True, verbose_name='Txt'),
        ),
        migrations.AlterField(
            model_name='mountplan',
            name='validity_period_end',
            field=models.DateField(blank=True, help_text='Date after which this mount becomes inactive.', null=True, verbose_name='Validity period end'),
        ),
        migrations.AlterField(
            model_name='mountplan',
            name='validity_period_start',
            field=models.DateField(blank=True, help_text='Date on which this mount becomes active.', null=True, verbose_name='Validity period start'),
        ),
        migrations.AlterField(
            model_name='mountreal',
            name='condition',
            field=enumfields.fields.EnumIntegerField(blank=True, default=5, enum=traffic_control.enums.Condition, help_text='Describes the condition of this device.', null=True, verbose_name='Condition'),
        ),
        migrations.AlterField(
            model_name='mountreal',
            name='cross_bar_length',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Length of the cross bar for this mount in centimeters.', max_digits=5, null=True, verbose_name='Cross bar length'),
        ),
        migrations.AlterField(
            model_name='mountreal',
            name='diameter',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Diameter of the mount in centimeters.', max_digits=5, null=True, verbose_name='Diameter'),
        ),
        migrations.AlterField(
            model_name='mountreal',
            name='electric_accountable',
            field=models.CharField(blank=True, help_text='The entity responsible for the mount (if electric).', max_length=254, null=True, verbose_name='Electric accountable'),
        ),
        migrations.AlterField(
            model_name='mountreal',
            name='height',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='The height of the mount from the ground, measured from the top in centimeters.', max_digits=5, null=True, verbose_name='Height'),
        ),
        migrations.AlterField(
            model_name='mountreal',
            name='inspected_at',
            field=models.DateTimeField(blank=True, help_text='Date and time on which this mount was last inspected at.', null=True, verbose_name='Inspected at'),
        ),
        migrations.AlterField(
            model_name='mountreal',
            name='installation_date',
            field=models.DateField(blank=True, help_text='Date on which this device was installed on.', null=True, verbose_name='Installation date'),
        ),
        migrations.AlterField(
            model_name='mountreal',
            name='installation_status',
            field=enumfields.fields.EnumField(blank=True, default='IN_USE', enum=traffic_control.enums.InstallationStatus, help_text='Describes this devices installation status.', max_length=10, null=True, verbose_name='Installation status'),
        ),
        migrations.AlterField(
            model_name='mountreal',
            name='lifecycle',
            field=enumfields.fields.EnumIntegerField(default=3, enum=traffic_control.enums.Lifecycle, help_text='Lifecycle of the device, which describes the activity status of the device.', verbose_name='Lifecycle'),
        ),
        migrations.AlterField(
            model_name='mountreal',
            name='material',
            field=models.CharField(blank=True, help_text='Describes the material that the mount is made of.', max_length=254, null=True, verbose_name='Material'),
        ),
        migrations.AlterField(
            model_name='mountreal',
            name='mount_plan',
            field=models.ForeignKey(blank=True, help_text='The plan for this mount.', null=True, on_delete=django.db.models.deletion.PROTECT, to='traffic_control.mountplan', verbose_name='Mount Plan'),
        ),
        migrations.AlterField(
            model_name='mountreal',
            name='owner',
            field=models.ForeignKey(help_text='Owner who orders and is responsible for the maintenance of the device.', on_delete=django.db.models.deletion.PROTECT, to='traffic_control.owner', verbose_name='Owner'),
        ),
        migrations.AlterField(
            model_name='mountreal',
            name='portal_type',
            field=models.ForeignKey(blank=True, help_text='Id number of the portal type in the portal_type table.', null=True, on_delete=django.db.models.deletion.PROTECT, to='traffic_control.portaltype', verbose_name='Portal type'),
        ),
        migrations.AlterField(
            model_name='mountreal',
            name='responsible_entity',
            field=models.ForeignKey(blank=True, help_text='Organization or project that this device is assigned to.', null=True, on_delete=django.db.models.deletion.PROTECT, to='traffic_control.responsibleentity', verbose_name='Responsible entity'),
        ),
        migrations.AlterField(
            model_name='mountreal',
            name='source_id',
            field=models.CharField(blank=True, default=None, help_text='ID of the device in the source where this device was imported from.', max_length=64, null=True, verbose_name='Source id'),
        ),
        migrations.AlterField(
            model_name='mountreal',
            name='source_name',
            field=models.CharField(blank=True, default=None, help_text='Name of the source for where this device was imported from.', max_length=254, null=True, verbose_name='Source name'),
        ),
        migrations.AlterField(
            model_name='mountreal',
            name='txt',
            field=models.CharField(blank=True, help_text='Text written on the mount.', max_length=254, null=True, verbose_name='Txt'),
        ),
        migrations.AlterField(
            model_name='mountreal',
            name='validity_period_end',
            field=models.DateField(blank=True, help_text='Date after which this mount becomes inactive.', null=True, verbose_name='Validity period end'),
        ),
        migrations.AlterField(
            model_name='mountreal',
            name='validity_period_start',
            field=models.DateField(blank=True, help_text='Date on which this mount becomes active.', null=True, verbose_name='Validity period start'),
        ),
        migrations.AlterField(
            model_name='operationalarea',
            name='source_id',
            field=models.CharField(blank=True, default=None, help_text='ID of the device in the source where this device was imported from.', max_length=64, null=True, verbose_name='Source id'),
        ),
        migrations.AlterField(
            model_name='operationalarea',
            name='source_name',
            field=models.CharField(blank=True, default=None, help_text='Name of the source for where this device was imported from.', max_length=254, null=True, verbose_name='Source name'),
        ),
        migrations.AlterField(
            model_name='operationtype',
            name='name',
            field=models.CharField(help_text='Name of the operation.', max_length=200, verbose_name='Name'),
        ),
        migrations.AlterField(
            model_name='plan',
            name='source_id',
            field=models.CharField(blank=True, default=None, help_text='ID of the device in the source where this device was imported from.', max_length=64, null=True, verbose_name='Source id'),
        ),
        migrations.AlterField(
            model_name='plan',
            name='source_name',
            field=models.CharField(blank=True, default=None, help_text='Name of the source for where this device was imported from.', max_length=254, null=True, verbose_name='Source name'),
        ),
        migrations.AlterField(
            model_name='responsibleentity',
            name='name',
            field=models.CharField(max_length=254, verbose_name='Name'),
        ),
        migrations.AlterField(
            model_name='responsibleentity',
            name='organization_level',
            field=enumfields.fields.EnumIntegerField(default=50, enum=traffic_control.enums.OrganizationLevel, help_text='Describes the level of organization this is.', verbose_name='Organization level'),
        ),
        migrations.AlterField(
            model_name='responsibleentity',
            name='parent',
            field=mptt.fields.TreeForeignKey(blank=True, help_text='Organization under which this object belongs to. This objects organizational level must be lower than its parents.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='children', to='traffic_control.responsibleentity', verbose_name='Parent Responsible Entity'),
        ),
        migrations.AlterField(
            model_name='roadmarkingplan',
            name='arrow_direction',
            field=enumfields.fields.EnumField(blank=True, enum=traffic_control.models.road_marking.ArrowDirection, help_text='Direction of the arrow on the road.', max_length=10, null=True, verbose_name='Arrow direction'),
        ),
        migrations.AlterField(
            model_name='roadmarkingplan',
            name='device_type',
            field=models.ForeignKey(help_text='Type of the device from Helsinki Design Manual.', limit_choices_to=models.Q(models.Q(('target_model', None), ('target_model', traffic_control.enums.DeviceTypeTargetModel['ROAD_MARKING']), _connector='OR')), on_delete=django.db.models.deletion.PROTECT, to='traffic_control.trafficcontroldevicetype', verbose_name='Device Type'),
        ),
        migrations.AlterField(
            model_name='roadmarkingplan',
            name='lane_number',
            field=enumfields.fields.EnumField(blank=True, default='11', enum=traffic_control.enums.LaneNumber, help_text='Describes which lane of the road this road marking affects.', max_length=10, verbose_name='Lane number'),
        ),
        migrations.AlterField(
            model_name='roadmarkingplan',
            name='lane_type',
            field=enumfields.fields.EnumField(blank=True, default=1, enum=traffic_control.enums.LaneType, help_text='The type of lane which this road marking affects.', max_length=10, verbose_name='Lane type'),
        ),
        migrations.AlterField(
            model_name='roadmarkingplan',
            name='length',
            field=models.IntegerField(blank=True, help_text='Length of the road marking in centimeters.', null=True, verbose_name='Length'),
        ),
        migrations.AlterField(
            model_name='roadmarkingplan',
            name='lifecycle',
            field=enumfields.fields.EnumIntegerField(default=3, enum=traffic_control.enums.Lifecycle, help_text='Lifecycle of the device, which describes the activity status of the device.', verbose_name='Lifecycle'),
        ),
        migrations.AlterField(
            model_name='roadmarkingplan',
            name='location_specifier',
            field=enumfields.fields.EnumIntegerField(blank=True, default=2, enum=traffic_control.models.road_marking.LocationSpecifier, help_text='Specifies where the road marking is in relation to the lane.', null=True, verbose_name='Location specifier'),
        ),
        migrations.AlterField(
            model_name='roadmarkingplan',
            name='material',
            field=models.CharField(blank=True, help_text='Describes the material that the device is made of.', max_length=254, null=True, verbose_name='Material'),
        ),
        migrations.AlterField(
            model_name='roadmarkingplan',
            name='owner',
            field=models.ForeignKey(help_text='Owner who orders and is responsible for the maintenance of the device.', on_delete=django.db.models.deletion.PROTECT, to='traffic_control.owner', verbose_name='Owner'),
        ),
        migrations.AlterField(
            model_name='roadmarkingplan',
            name='plan',
            field=models.ForeignKey(blank=True, help_text='Plan which this road marking plan is a part of.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='road_marking_plans', to='traffic_control.plan', verbose_name='Plan'),
        ),
        migrations.AlterField(
            model_name='roadmarkingplan',
            name='responsible_entity',
            field=models.ForeignKey(blank=True, help_text='Organization or project that this device is assigned to.', null=True, on_delete=django.db.models.deletion.PROTECT, to='traffic_control.responsibleentity', verbose_name='Responsible entity'),
        ),
        migrations.AlterField(
            model_name='roadmarkingplan',
            name='road_name',
            field=models.CharField(blank=True, help_text='Name of the road this road marking is installed at.', max_length=254, null=True, verbose_name='Road name'),
        ),
        migrations.AlterField(
            model_name='roadmarkingplan',
            name='seasonal_validity_period_end',
            field=models.DateField(blank=True, help_text='Date after which this road marking becomes seasonally inactive.', null=True, verbose_name='Seasonal validity period end'),
        ),
        migrations.AlterField(
            model_name='roadmarkingplan',
            name='seasonal_validity_period_start',
            field=models.DateField(blank=True, help_text='Date on which this road marking becomes seasonally active.', null=True, verbose_name='Seasonal validity period start'),
        ),
        migrations.AlterField(
            model_name='roadmarkingplan',
            name='size',
            field=models.CharField(blank=True, help_text='Size of the road marking.', max_length=254, null=True, verbose_name='Size'),
        ),
        migrations.AlterField(
            model_name='roadmarkingplan',
            name='source_id',
            field=models.CharField(blank=True, default=None, help_text='ID of the device in the source where this device was imported from.', max_length=64, null=True, verbose_name='Source id'),
        ),
        migrations.AlterField(
            model_name='roadmarkingplan',
            name='source_name',
            field=models.CharField(blank=True, default=None, help_text='Name of the source for where this device was imported from.', max_length=254, null=True, verbose_name='Source name'),
        ),
        migrations.AlterField(
            model_name='roadmarkingplan',
            name='symbol',
            field=models.CharField(blank=True, help_text='Symbol on the road marking.', max_length=254, null=True, verbose_name='Symbol'),
        ),
        migrations.AlterField(
            model_name='roadmarkingplan',
            name='traffic_sign_plan',
            field=models.ForeignKey(blank=True, help_text='Traffic Sign related to this road marking.', null=True, on_delete=django.db.models.deletion.PROTECT, to='traffic_control.trafficsignplan', verbose_name='Traffic Sign Plan'),
        ),
        migrations.AlterField(
            model_name='roadmarkingplan',
            name='type_specifier',
            field=models.CharField(blank=True, help_text='Additional device type codes specific to the local public authorities.', max_length=254, null=True, verbose_name='Type specifier'),
        ),
        migrations.AlterField(
            model_name='roadmarkingplan',
            name='validity_period_end',
            field=models.DateField(blank=True, help_text='Date after which this road marking becomes inactive.', null=True, verbose_name='Validity period end'),
        ),
        migrations.AlterField(
            model_name='roadmarkingplan',
            name='validity_period_start',
            field=models.DateField(blank=True, help_text='Date on which this road marking becomes active.', null=True, verbose_name='Validity period start'),
        ),
        migrations.AlterField(
            model_name='roadmarkingplan',
            name='value',
            field=models.CharField(blank=True, help_text='Numeric value on the marking.', max_length=254, null=True, verbose_name='Road Marking value'),
        ),
        migrations.AlterField(
            model_name='roadmarkingplan',
            name='width',
            field=models.IntegerField(blank=True, help_text='Width of the road marking in centimeters.', null=True, verbose_name='Width'),
        ),
        migrations.AlterField(
            model_name='roadmarkingreal',
            name='arrow_direction',
            field=enumfields.fields.EnumField(blank=True, enum=traffic_control.models.road_marking.ArrowDirection, help_text='Direction of the arrow on the road.', max_length=10, null=True, verbose_name='Arrow direction'),
        ),
        migrations.AlterField(
            model_name='roadmarkingreal',
            name='condition',
            field=enumfields.fields.EnumIntegerField(blank=True, default=5, enum=traffic_control.enums.Condition, help_text='Describes the condition of this device.', null=True, verbose_name='Condition'),
        ),
        migrations.AlterField(
            model_name='roadmarkingreal',
            name='device_type',
            field=models.ForeignKey(help_text='Type of the device from Helsinki Design Manual.', limit_choices_to=models.Q(models.Q(('target_model', None), ('target_model', traffic_control.enums.DeviceTypeTargetModel['ROAD_MARKING']), _connector='OR')), on_delete=django.db.models.deletion.PROTECT, to='traffic_control.trafficcontroldevicetype', verbose_name='Device type'),
        ),
        migrations.AlterField(
            model_name='roadmarkingreal',
            name='installation_date',
            field=models.DateField(blank=True, help_text='Date on which this device was installed on.', null=True, verbose_name='Installation date'),
        ),
        migrations.AlterField(
            model_name='roadmarkingreal',
            name='installation_status',
            field=enumfields.fields.EnumField(blank=True, default='IN_USE', enum=traffic_control.enums.InstallationStatus, help_text='Describes this devices installation status.', max_length=10, null=True, verbose_name='Installation status'),
        ),
        migrations.AlterField(
            model_name='roadmarkingreal',
            name='lane_number',
            field=enumfields.fields.EnumField(blank=True, default='11', enum=traffic_control.enums.LaneNumber, help_text='Describes which lane of the road this road marking affects.', max_length=10, verbose_name='Lane number'),
        ),
        migrations.AlterField(
            model_name='roadmarkingreal',
            name='lane_type',
            field=enumfields.fields.EnumField(blank=True, default=1, enum=traffic_control.enums.LaneType, help_text='The type of lane which this road marking affects.', max_length=10, verbose_name='Lane type'),
        ),
        migrations.AlterField(
            model_name='roadmarkingreal',
            name='length',
            field=models.IntegerField(blank=True, help_text='Length of the road marking in centimeters.', null=True, verbose_name='Length'),
        ),
        migrations.AlterField(
            model_name='roadmarkingreal',
            name='lifecycle',
            field=enumfields.fields.EnumIntegerField(default=3, enum=traffic_control.enums.Lifecycle, help_text='Lifecycle of the device, which describes the activity status of the device.', verbose_name='Lifecycle'),
        ),
        migrations.AlterField(
            model_name='roadmarkingreal',
            name='location_specifier',
            field=enumfields.fields.EnumIntegerField(blank=True, default=2, enum=traffic_control.models.road_marking.LocationSpecifier, help_text='Specifies where the road marking is in relation to the lane.', null=True, verbose_name='Location specifier'),
        ),
        migrations.AlterField(
            model_name='roadmarkingreal',
            name='material',
            field=models.CharField(blank=True, help_text='Describes the material that the device is made of.', max_length=254, null=True, verbose_name='Material'),
        ),
        migrations.AlterField(
            model_name='roadmarkingreal',
            name='missing_traffic_sign_real_txt',
            field=models.CharField(blank=True, help_text="Free-form text description of the traffic sign the road marking is connected to, if the road marking doesn't have a traffic sign real id.", max_length=254, null=True, verbose_name='Missing Traffic Sign Real txt'),
        ),
        migrations.AlterField(
            model_name='roadmarkingreal',
            name='owner',
            field=models.ForeignKey(help_text='Owner who orders and is responsible for the maintenance of the device.', on_delete=django.db.models.deletion.PROTECT, to='traffic_control.owner', verbose_name='Owner'),
        ),
        migrations.AlterField(
            model_name='roadmarkingreal',
            name='responsible_entity',
            field=models.ForeignKey(blank=True, help_text='Organization or project that this device is assigned to.', null=True, on_delete=django.db.models.deletion.PROTECT, to='traffic_control.responsibleentity', verbose_name='Responsible entity'),
        ),
        migrations.AlterField(
            model_name='roadmarkingreal',
            name='road_marking_plan',
            field=models.ForeignKey(blank=True, help_text='The plan for this road marking.', null=True, on_delete=django.db.models.deletion.PROTECT, to='traffic_control.roadmarkingplan', verbose_name='Road Marking Plan'),
        ),
        migrations.AlterField(
            model_name='roadmarkingreal',
            name='road_name',
            field=models.CharField(blank=True, help_text='Name of the road this road marking is installed at.', max_length=254, null=True, verbose_name='Road name'),
        ),
        migrations.AlterField(
            model_name='roadmarkingreal',
            name='seasonal_validity_period_end',
            field=models.DateField(blank=True, help_text='Date after which this road marking becomes seasonally inactive.', null=True, verbose_name='Seasonal validity period end'),
        ),
        migrations.AlterField(
            model_name='roadmarkingreal',
            name='seasonal_validity_period_start',
            field=models.DateField(blank=True, help_text='Date on which this road marking becomes seasonally active.', null=True, verbose_name='Seasonal validity period start'),
        ),
        migrations.AlterField(
            model_name='roadmarkingreal',
            name='size',
            field=models.CharField(blank=True, help_text='Size of the road marking.', max_length=254, null=True, verbose_name='Size'),
        ),
        migrations.AlterField(
            model_name='roadmarkingreal',
            name='source_id',
            field=models.CharField(blank=True, default=None, help_text='ID of the device in the source where this device was imported from.', max_length=64, null=True, verbose_name='Source id'),
        ),
        migrations.AlterField(
            model_name='roadmarkingreal',
            name='source_name',
            field=models.CharField(blank=True, default=None, help_text='Name of the source for where this device was imported from.', max_length=254, null=True, verbose_name='Source name'),
        ),
        migrations.AlterField(
            model_name='roadmarkingreal',
            name='symbol',
            field=models.CharField(blank=True, help_text='Symbol on the road marking.', max_length=254, null=True, verbose_name='Symbol'),
        ),
        migrations.AlterField(
            model_name='roadmarkingreal',
            name='traffic_sign_real',
            field=models.ForeignKey(blank=True, help_text='Traffic Sign related to this road marking.', null=True, on_delete=django.db.models.deletion.PROTECT, to='traffic_control.trafficsignreal', verbose_name='Traffic Sign Real'),
        ),
        migrations.AlterField(
            model_name='roadmarkingreal',
            name='type_specifier',
            field=models.CharField(blank=True, help_text='Additional device type codes specific to the local public authorities.', max_length=254, null=True, verbose_name='Type specifier'),
        ),
        migrations.AlterField(
            model_name='roadmarkingreal',
            name='validity_period_end',
            field=models.DateField(blank=True, help_text='Date after which this road marking becomes inactive.', null=True, verbose_name='Validity period end'),
        ),
        migrations.AlterField(
            model_name='roadmarkingreal',
            name='validity_period_start',
            field=models.DateField(blank=True, help_text='Date on which this road marking becomes active.', null=True, verbose_name='Validity period start'),
        ),
        migrations.AlterField(
            model_name='roadmarkingreal',
            name='value',
            field=models.CharField(blank=True, help_text='Numeric value on the marking.', max_length=254, null=True, verbose_name='Road Marking value'),
        ),
        migrations.AlterField(
            model_name='roadmarkingreal',
            name='width',
            field=models.IntegerField(blank=True, help_text='Width of the road marking in centimeters.', null=True, verbose_name='Width'),
        ),
        migrations.AlterField(
            model_name='signpostplan',
            name='attachment_class',
            field=models.CharField(blank=True, help_text='The attachment class of the sign according to the standard SFS-EN 12899-1.The possible values are P1, P2 and P3.', max_length=254, null=True, verbose_name='Attachment class'),
        ),
        migrations.AlterField(
            model_name='signpostplan',
            name='device_type',
            field=models.ForeignKey(help_text='Type of the device from Helsinki Design Manual.', limit_choices_to=models.Q(models.Q(('target_model', None), ('target_model', traffic_control.enums.DeviceTypeTargetModel['SIGNPOST']), _connector='OR')), on_delete=django.db.models.deletion.PROTECT, to='traffic_control.trafficcontroldevicetype', verbose_name='Device type'),
        ),
        migrations.AlterField(
            model_name='signpostplan',
            name='direction',
            field=models.IntegerField(default=0, help_text="Direction of the device in degrees. If 'road name' is entered the direction is in relation to the road. Otherwise cardinal direction is used. e.g. 0 = North, 45 = North East, 90 = East, 180 = South.", verbose_name='Direction'),
        ),
        migrations.AlterField(
            model_name='signpostplan',
            name='electric_maintainer',
            field=models.CharField(blank=True, help_text='Organization in charge of electric maintenance of the device.', max_length=254, null=True, verbose_name='Electric maintainer'),
        ),
        migrations.AlterField(
            model_name='signpostplan',
            name='height',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='The height of the sign from the ground, measured from the top in centimeters.', max_digits=5, null=True, verbose_name='Height'),
        ),
        migrations.AlterField(
            model_name='signpostplan',
            name='lane_number',
            field=enumfields.fields.EnumField(blank=True, default='11', enum=traffic_control.enums.LaneNumber, help_text='Describes which lane of the road this sign affects.', max_length=10, verbose_name='Lane number'),
        ),
        migrations.AlterField(
            model_name='signpostplan',
            name='lane_type',
            field=enumfields.fields.EnumField(blank=True, default=1, enum=traffic_control.enums.LaneType, help_text='The type of lane which this sign affects.', max_length=10, verbose_name='Lane type'),
        ),
        migrations.AlterField(
            model_name='signpostplan',
            name='lifecycle',
            field=enumfields.fields.EnumIntegerField(default=3, enum=traffic_control.enums.Lifecycle, help_text='Lifecycle of the device, which describes the activity status of the device.', verbose_name='Lifecycle'),
        ),
        migrations.AlterField(
            model_name='signpostplan',
            name='location_specifier',
            field=enumfields.fields.EnumIntegerField(blank=True, default=1, enum=traffic_control.models.signpost.LocationSpecifier, help_text='Specifies where the sign is in relation to the road.', null=True, verbose_name='Location specifier'),
        ),
        migrations.AlterField(
            model_name='signpostplan',
            name='mount_plan',
            field=models.ForeignKey(blank=True, help_text='Mount that this sign is mounted on.', null=True, on_delete=django.db.models.deletion.PROTECT, to='traffic_control.mountplan', verbose_name='Mount Plan'),
        ),
        migrations.AlterField(
            model_name='signpostplan',
            name='mount_type',
            field=models.ForeignKey(blank=True, help_text='Type of the mount this sign is attached to.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='traffic_control.mounttype', verbose_name='Mount type'),
        ),
        migrations.AlterField(
            model_name='signpostplan',
            name='owner',
            field=models.ForeignKey(help_text='Owner who orders and is responsible for the maintenance of the device.', on_delete=django.db.models.deletion.PROTECT, to='traffic_control.owner', verbose_name='Owner'),
        ),
        migrations.AlterField(
            model_name='signpostplan',
            name='parent',
            field=models.ForeignKey(blank=True, help_text='Signpost inside which this device is located.', null=True, on_delete=django.db.models.deletion.PROTECT, to='traffic_control.signpostplan', verbose_name='Parent Signpost Plan'),
        ),
        migrations.AlterField(
            model_name='signpostplan',
            name='plan',
            field=models.ForeignKey(blank=True, help_text='Plan which this signpost plan is a part of.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='signpost_plans', to='traffic_control.plan', verbose_name='Plan'),
        ),
        migrations.AlterField(
            model_name='signpostplan',
            name='responsible_entity',
            field=models.ForeignKey(blank=True, help_text='Organization or project that this device is assigned to.', null=True, on_delete=django.db.models.deletion.PROTECT, to='traffic_control.responsibleentity', verbose_name='Responsible entity'),
        ),
        migrations.AlterField(
            model_name='signpostplan',
            name='road_name',
            field=models.CharField(blank=True, help_text='Name of the road this sign is installed at.', max_length=254, null=True, verbose_name='Road name'),
        ),
        migrations.AlterField(
            model_name='signpostplan',
            name='seasonal_validity_period_end',
            field=models.DateField(blank=True, help_text='Date after which this sign becomes seasonally inactive.', null=True, verbose_name='Seasonal validity period end'),
        ),
        migrations.AlterField(
            model_name='signpostplan',
            name='seasonal_validity_period_start',
            field=models.DateField(blank=True, help_text='Date on which this sign becomes seasonally active.', null=True, verbose_name='Seasonal validity period start'),
        ),
        migrations.AlterField(
            model_name='signpostplan',
            name='source_id',
            field=models.CharField(blank=True, default=None, help_text='ID of the device in the source where this device was imported from.', max_length=64, null=True, verbose_name='Source id'),
        ),
        migrations.AlterField(
            model_name='signpostplan',
            name='source_name',
            field=models.CharField(blank=True, default=None, help_text='Name of the source for where this device was imported from.', max_length=254, null=True, verbose_name='Source name'),
        ),
        migrations.AlterField(
            model_name='signpostplan',
            name='target_id',
            field=models.CharField(blank=True, help_text='The id number of the target the sign is guiding to (if available).', max_length=254, null=True, verbose_name='Target ID'),
        ),
        migrations.AlterField(
            model_name='signpostplan',
            name='target_txt',
            field=models.CharField(blank=True, help_text='Free-form text description of the target the sign is guiding to, if the target has no id number.', max_length=254, null=True, verbose_name='Target txt'),
        ),
        migrations.AlterField(
            model_name='signpostplan',
            name='txt',
            field=models.CharField(blank=True, help_text='Text written on the device.', max_length=254, null=True, verbose_name='Signpost txt'),
        ),
        migrations.AlterField(
            model_name='signpostplan',
            name='validity_period_end',
            field=models.DateField(blank=True, help_text='Date after which this sign becomes inactive.', null=True, verbose_name='Validity period end'),
        ),
        migrations.AlterField(
            model_name='signpostplan',
            name='validity_period_start',
            field=models.DateField(blank=True, help_text='Date on which this sign becomes active.', null=True, verbose_name='Validity period start'),
        ),
        migrations.AlterField(
            model_name='signpostplan',
            name='value',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Numeric value on the sign.', max_digits=10, null=True, verbose_name='Signpost value'),
        ),
        migrations.AlterField(
            model_name='signpostreal',
            name='attachment_class',
            field=models.CharField(blank=True, help_text='The attachment class of the sign according to the standard SFS-EN 12899-1.The possible values are P1, P2 and P3.', max_length=254, null=True, verbose_name='Attachment class'),
        ),
        migrations.AlterField(
            model_name='signpostreal',
            name='condition',
            field=enumfields.fields.EnumIntegerField(blank=True, default=5, enum=traffic_control.enums.Condition, help_text='Describes the condition of this device.', null=True, verbose_name='Condition'),
        ),
        migrations.AlterField(
            model_name='signpostreal',
            name='device_type',
            field=models.ForeignKey(help_text='Type of the device from Helsinki Design Manual.', limit_choices_to=models.Q(models.Q(('target_model', None), ('target_model', traffic_control.enums.DeviceTypeTargetModel['SIGNPOST']), _connector='OR')), on_delete=django.db.models.deletion.PROTECT, to='traffic_control.trafficcontroldevicetype', verbose_name='Device type'),
        ),
        migrations.AlterField(
            model_name='signpostreal',
            name='direction',
            field=models.IntegerField(default=0, help_text="Direction of the device in degrees. If 'road name' is entered the direction is in relation to the road. Otherwise cardinal direction is used. e.g. 0 = North, 45 = North East, 90 = East, 180 = South.", verbose_name='Direction'),
        ),
        migrations.AlterField(
            model_name='signpostreal',
            name='electric_maintainer',
            field=models.CharField(blank=True, help_text='Organization in charge of electric maintenance of the device.', max_length=254, null=True, verbose_name='Electric maintainer'),
        ),
        migrations.AlterField(
            model_name='signpostreal',
            name='height',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='The height of the sign from the ground, measured from the top in centimeters.', max_digits=5, null=True, verbose_name='Height'),
        ),
        migrations.AlterField(
            model_name='signpostreal',
            name='installation_date',
            field=models.DateField(blank=True, help_text='Date on which this device was installed on.', null=True, verbose_name='Installation date'),
        ),
        migrations.AlterField(
            model_name='signpostreal',
            name='installation_status',
            field=enumfields.fields.EnumField(blank=True, default='IN_USE', enum=traffic_control.enums.InstallationStatus, help_text='Describes this devices installation status.', max_length=10, null=True, verbose_name='Installation status'),
        ),
        migrations.AlterField(
            model_name='signpostreal',
            name='lane_number',
            field=enumfields.fields.EnumField(blank=True, default='11', enum=traffic_control.enums.LaneNumber, help_text='Describes which lane of the road this sign affects.', max_length=10, verbose_name='Lane number'),
        ),
        migrations.AlterField(
            model_name='signpostreal',
            name='lane_type',
            field=enumfields.fields.EnumField(blank=True, default=1, enum=traffic_control.enums.LaneType, help_text='The type of lane which this sign affects.', max_length=10, verbose_name='Lane type'),
        ),
        migrations.AlterField(
            model_name='signpostreal',
            name='lifecycle',
            field=enumfields.fields.EnumIntegerField(default=3, enum=traffic_control.enums.Lifecycle, help_text='Lifecycle of the device, which describes the activity status of the device.', verbose_name='Lifecycle'),
        ),
        migrations.AlterField(
            model_name='signpostreal',
            name='location_specifier',
            field=enumfields.fields.EnumIntegerField(blank=True, default=1, enum=traffic_control.models.signpost.LocationSpecifier, help_text='Specifies where the sign is in relation to the road.', null=True, verbose_name='Location specifier'),
        ),
        migrations.AlterField(
            model_name='signpostreal',
            name='manufacturer',
            field=models.CharField(blank=True, help_text='Name of the organization that manufactured this device.', max_length=254, null=True, verbose_name='Manufacturer'),
        ),
        migrations.AlterField(
            model_name='signpostreal',
            name='material',
            field=models.CharField(blank=True, help_text='Describes the material that the device is made of.', max_length=254, null=True, verbose_name='Material'),
        ),
        migrations.AlterField(
            model_name='signpostreal',
            name='mount_real',
            field=models.ForeignKey(blank=True, help_text='Mount that this sign is mounted on.', null=True, on_delete=django.db.models.deletion.PROTECT, to='traffic_control.mountreal', verbose_name='Mount Real'),
        ),
        migrations.AlterField(
            model_name='signpostreal',
            name='mount_type',
            field=models.ForeignKey(blank=True, help_text='Type of the mount this sign is attached to.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='traffic_control.mounttype', verbose_name='Mount type'),
        ),
        migrations.AlterField(
            model_name='signpostreal',
            name='organization',
            field=models.CharField(blank=True, help_text='The organization that installed the signpost.', max_length=254, null=True, verbose_name='Organization'),
        ),
        migrations.AlterField(
            model_name='signpostreal',
            name='owner',
            field=models.ForeignKey(help_text='Owner who orders and is responsible for the maintenance of the device.', on_delete=django.db.models.deletion.PROTECT, to='traffic_control.owner', verbose_name='Owner'),
        ),
        migrations.AlterField(
            model_name='signpostreal',
            name='parent',
            field=models.ForeignKey(blank=True, help_text='Signpost inside which this device is located.', null=True, on_delete=django.db.models.deletion.PROTECT, to='traffic_control.signpostreal', verbose_name='Parent Signpost Real'),
        ),
        migrations.AlterField(
            model_name='signpostreal',
            name='responsible_entity',
            field=models.ForeignKey(blank=True, help_text='Organization or project that this device is assigned to.', null=True, on_delete=django.db.models.deletion.PROTECT, to='traffic_control.responsibleentity', verbose_name='Responsible entity'),
        ),
        migrations.AlterField(
            model_name='signpostreal',
            name='road_name',
            field=models.CharField(blank=True, help_text='Name of the road this sign is installed at.', max_length=254, null=True, verbose_name='Road name'),
        ),
        migrations.AlterField(
            model_name='signpostreal',
            name='seasonal_validity_period_end',
            field=models.DateField(blank=True, help_text='Date after which this sign becomes seasonally inactive.', null=True, verbose_name='Seasonal validity period end'),
        ),
        migrations.AlterField(
            model_name='signpostreal',
            name='seasonal_validity_period_start',
            field=models.DateField(blank=True, help_text='Date on which this sign becomes seasonally active.', null=True, verbose_name='Seasonal validity period start'),
        ),
        migrations.AlterField(
            model_name='signpostreal',
            name='signpost_plan',
            field=models.ForeignKey(blank=True, help_text='The plan for this signpost.', null=True, on_delete=django.db.models.deletion.PROTECT, to='traffic_control.signpostplan', verbose_name='Signpost Plan'),
        ),
        migrations.AlterField(
            model_name='signpostreal',
            name='source_id',
            field=models.CharField(blank=True, default=None, help_text='ID of the device in the source where this device was imported from.', max_length=64, null=True, verbose_name='Source id'),
        ),
        migrations.AlterField(
            model_name='signpostreal',
            name='source_name',
            field=models.CharField(blank=True, default=None, help_text='Name of the source for where this device was imported from.', max_length=254, null=True, verbose_name='Source name'),
        ),
        migrations.AlterField(
            model_name='signpostreal',
            name='target_id',
            field=models.CharField(blank=True, help_text='The id number of the target the sign is guiding to (if available).', max_length=254, null=True, verbose_name='Target ID'),
        ),
        migrations.AlterField(
            model_name='signpostreal',
            name='target_txt',
            field=models.CharField(blank=True, help_text='Free-form text description of the target the sign is guiding to, if the target has no id number.', max_length=254, null=True, verbose_name='Target txt'),
        ),
        migrations.AlterField(
            model_name='signpostreal',
            name='txt',
            field=models.CharField(blank=True, help_text='Text written on the device.', max_length=254, null=True, verbose_name='Signpost txt'),
        ),
        migrations.AlterField(
            model_name='signpostreal',
            name='validity_period_end',
            field=models.DateField(blank=True, help_text='Date after which this sign becomes inactive.', null=True, verbose_name='Validity period end'),
        ),
        migrations.AlterField(
            model_name='signpostreal',
            name='validity_period_start',
            field=models.DateField(blank=True, help_text='Date on which this sign becomes active.', null=True, verbose_name='Validity period start'),
        ),
        migrations.AlterField(
            model_name='signpostreal',
            name='value',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Numeric value on the sign.', max_digits=10, null=True, verbose_name='Signpost value'),
        ),
        migrations.AlterField(
            model_name='trafficcontroldevicetype',
            name='code',
            field=models.CharField(help_text='Standardised code of the device type.', max_length=32, unique=True, verbose_name='Code'),
        ),
        migrations.AlterField(
            model_name='trafficcontroldevicetype',
            name='target_model',
            field=enumfields.fields.EnumField(blank=True, enum=traffic_control.enums.DeviceTypeTargetModel, help_text='Defines which model this device type describes.', max_length=32, null=True, verbose_name='Target data model'),
        ),
        migrations.AlterField(
            model_name='trafficcontroldevicetype',
            name='unit',
            field=models.CharField(blank=True, help_text='Unit, in which the numeric value is in.', max_length=50, verbose_name='Unit'),
        ),
        migrations.AlterField(
            model_name='trafficcontroldevicetype',
            name='value',
            field=models.CharField(blank=True, help_text='Numeric value on the sign.', max_length=50, verbose_name='Value'),
        ),
        migrations.AlterField(
            model_name='trafficlightplan',
            name='device_type',
            field=models.ForeignKey(help_text='Type of the device from Helsinki Design Manual.', limit_choices_to=models.Q(models.Q(('target_model', None), ('target_model', traffic_control.enums.DeviceTypeTargetModel['TRAFFIC_LIGHT']), _connector='OR')), on_delete=django.db.models.deletion.PROTECT, to='traffic_control.trafficcontroldevicetype', verbose_name='Device type'),
        ),
        migrations.AlterField(
            model_name='trafficlightplan',
            name='direction',
            field=models.IntegerField(default=0, help_text="Direction of the device in degrees. If 'road name' is entered the direction is in relation to the road. Otherwise cardinal direction is used. e.g. 0 = North, 45 = North East, 90 = East, 180 = South.", verbose_name='Direction'),
        ),
        migrations.AlterField(
            model_name='trafficlightplan',
            name='height',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='The height of the sign from the ground, measured from the top in centimeters.', max_digits=5, null=True, verbose_name='Height'),
        ),
        migrations.AlterField(
            model_name='trafficlightplan',
            name='lane_number',
            field=enumfields.fields.EnumField(blank=True, default='11', enum=traffic_control.enums.LaneNumber, help_text='Describes which lane of the road this traffic light affects.', max_length=10, verbose_name='Lane number'),
        ),
        migrations.AlterField(
            model_name='trafficlightplan',
            name='lane_type',
            field=enumfields.fields.EnumField(blank=True, default=1, enum=traffic_control.enums.LaneType, help_text='The type of lane which this traffic light affects.', max_length=10, verbose_name='Lane type'),
        ),
        migrations.AlterField(
            model_name='trafficlightplan',
            name='lifecycle',
            field=enumfields.fields.EnumIntegerField(default=3, enum=traffic_control.enums.Lifecycle, help_text='Lifecycle of the device, which describes the activity status of the device.', verbose_name='Lifecycle'),
        ),
        migrations.AlterField(
            model_name='trafficlightplan',
            name='location_specifier',
            field=enumfields.fields.EnumIntegerField(blank=True, default=1, enum=traffic_control.models.traffic_light.LocationSpecifier, help_text='Specifies where the traffic light is in relation to the road.', null=True, verbose_name='Location specifier'),
        ),
        migrations.AlterField(
            model_name='trafficlightplan',
            name='mount_plan',
            field=models.ForeignKey(blank=True, help_text='Mount that this traffic light is mounted on.', null=True, on_delete=django.db.models.deletion.PROTECT, to='traffic_control.mountplan', verbose_name='Mount Plan'),
        ),
        migrations.AlterField(
            model_name='trafficlightplan',
            name='mount_type',
            field=models.ForeignKey(blank=True, help_text='Type of the mount this traffic light is attached to.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='traffic_control.mounttype', verbose_name='Mount type'),
        ),
        migrations.AlterField(
            model_name='trafficlightplan',
            name='owner',
            field=models.ForeignKey(help_text='Owner who orders and is responsible for the maintenance of the device.', on_delete=django.db.models.deletion.PROTECT, to='traffic_control.owner', verbose_name='Owner'),
        ),
        migrations.AlterField(
            model_name='trafficlightplan',
            name='plan',
            field=models.ForeignKey(blank=True, help_text='Plan which this traffic light plan is a part of.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='traffic_light_plans', to='traffic_control.plan', verbose_name='Plan'),
        ),
        migrations.AlterField(
            model_name='trafficlightplan',
            name='push_button',
            field=enumfields.fields.EnumIntegerField(blank=True, enum=traffic_control.models.traffic_light.PushButton, help_text='Describes if this traffic light has a push button attached.', null=True, verbose_name='Push button'),
        ),
        migrations.AlterField(
            model_name='trafficlightplan',
            name='responsible_entity',
            field=models.ForeignKey(blank=True, help_text='Organization or project that this device is assigned to.', null=True, on_delete=django.db.models.deletion.PROTECT, to='traffic_control.responsibleentity', verbose_name='Responsible entity'),
        ),
        migrations.AlterField(
            model_name='trafficlightplan',
            name='road_name',
            field=models.CharField(blank=True, help_text='Name of the road this traffic light is installed at.', max_length=254, null=True, verbose_name='Road name'),
        ),
        migrations.AlterField(
            model_name='trafficlightplan',
            name='sound_beacon',
            field=enumfields.fields.EnumIntegerField(blank=True, enum=traffic_control.models.traffic_light.TrafficLightSoundBeaconValue, help_text='Describes if this traffic light has a sound beacon attached.', null=True, verbose_name='Sound beacon'),
        ),
        migrations.AlterField(
            model_name='trafficlightplan',
            name='source_id',
            field=models.CharField(blank=True, default=None, help_text='ID of the device in the source where this device was imported from.', max_length=64, null=True, verbose_name='Source id'),
        ),
        migrations.AlterField(
            model_name='trafficlightplan',
            name='source_name',
            field=models.CharField(blank=True, default=None, help_text='Name of the source for where this device was imported from.', max_length=254, null=True, verbose_name='Source name'),
        ),
        migrations.AlterField(
            model_name='trafficlightplan',
            name='txt',
            field=models.CharField(blank=True, help_text='Text on the traffic light.', max_length=254, null=True, verbose_name='Txt'),
        ),
        migrations.AlterField(
            model_name='trafficlightplan',
            name='type',
            field=enumfields.fields.EnumField(blank=True, enum=traffic_control.models.traffic_light.TrafficLightType, help_text='Describes the type of traffic light this device is.', max_length=10, null=True),
        ),
        migrations.AlterField(
            model_name='trafficlightplan',
            name='validity_period_end',
            field=models.DateField(blank=True, help_text='Date after which this traffic light becomes inactive.', null=True, verbose_name='Validity period end'),
        ),
        migrations.AlterField(
            model_name='trafficlightplan',
            name='validity_period_start',
            field=models.DateField(blank=True, help_text='Date on which this traffic light becomes active.', null=True, verbose_name='Validity period start'),
        ),
        migrations.AlterField(
            model_name='trafficlightplan',
            name='vehicle_recognition',
            field=enumfields.fields.EnumIntegerField(blank=True, enum=traffic_control.models.traffic_light.VehicleRecognition, help_text='Describes the type of vehicle recognition this traffic light has.', null=True, verbose_name='Vehicle recognition'),
        ),
        migrations.AlterField(
            model_name='trafficlightreal',
            name='condition',
            field=enumfields.fields.EnumIntegerField(blank=True, default=5, enum=traffic_control.enums.Condition, help_text='Describes the condition of this device.', null=True, verbose_name='Condition'),
        ),
        migrations.AlterField(
            model_name='trafficlightreal',
            name='device_type',
            field=models.ForeignKey(help_text='Type of the device from Helsinki Design Manual.', limit_choices_to=models.Q(models.Q(('target_model', None), ('target_model', traffic_control.enums.DeviceTypeTargetModel['TRAFFIC_LIGHT']), _connector='OR')), on_delete=django.db.models.deletion.PROTECT, to='traffic_control.trafficcontroldevicetype', verbose_name='Device type'),
        ),
        migrations.AlterField(
            model_name='trafficlightreal',
            name='direction',
            field=models.IntegerField(default=0, help_text="Direction of the device in degrees. If 'road name' is entered the direction is in relation to the road. Otherwise cardinal direction is used. e.g. 0 = North, 45 = North East, 90 = East, 180 = South.", verbose_name='Direction'),
        ),
        migrations.AlterField(
            model_name='trafficlightreal',
            name='height',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='The height of the sign from the ground, measured from the top in centimeters.', max_digits=5, null=True, verbose_name='Height'),
        ),
        migrations.AlterField(
            model_name='trafficlightreal',
            name='installation_date',
            field=models.DateField(blank=True, help_text='Date on which this device was installed on.', null=True, verbose_name='Installation date'),
        ),
        migrations.AlterField(
            model_name='trafficlightreal',
            name='installation_status',
            field=enumfields.fields.EnumField(blank=True, default='IN_USE', enum=traffic_control.enums.InstallationStatus, help_text='Describes this devices installation status.', max_length=10, null=True, verbose_name='Installation status'),
        ),
        migrations.AlterField(
            model_name='trafficlightreal',
            name='lane_number',
            field=enumfields.fields.EnumField(blank=True, default='11', enum=traffic_control.enums.LaneNumber, help_text='Describes which lane of the road this traffic light affects.', max_length=10, verbose_name='Lane number'),
        ),
        migrations.AlterField(
            model_name='trafficlightreal',
            name='lane_type',
            field=enumfields.fields.EnumField(blank=True, default=1, enum=traffic_control.enums.LaneType, help_text='The type of lane which this traffic light affects.', max_length=10, verbose_name='Lane type'),
        ),
        migrations.AlterField(
            model_name='trafficlightreal',
            name='lifecycle',
            field=enumfields.fields.EnumIntegerField(default=3, enum=traffic_control.enums.Lifecycle, help_text='Lifecycle of the device, which describes the activity status of the device.', verbose_name='Lifecycle'),
        ),
        migrations.AlterField(
            model_name='trafficlightreal',
            name='location_specifier',
            field=enumfields.fields.EnumIntegerField(blank=True, default=1, enum=traffic_control.models.traffic_light.LocationSpecifier, help_text='Specifies where the traffic light is in relation to the road.', null=True, verbose_name='Location specifier'),
        ),
        migrations.AlterField(
            model_name='trafficlightreal',
            name='mount_real',
            field=models.ForeignKey(blank=True, help_text='Mount that this traffic light is mounted on.', null=True, on_delete=django.db.models.deletion.PROTECT, to='traffic_control.mountreal', verbose_name='Mount Real'),
        ),
        migrations.AlterField(
            model_name='trafficlightreal',
            name='mount_type',
            field=models.ForeignKey(blank=True, help_text='Type of the mount this traffic light is attached to.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='traffic_control.mounttype', verbose_name='Mount type'),
        ),
        migrations.AlterField(
            model_name='trafficlightreal',
            name='owner',
            field=models.ForeignKey(help_text='Owner who orders and is responsible for the maintenance of the device.', on_delete=django.db.models.deletion.PROTECT, to='traffic_control.owner', verbose_name='Owner'),
        ),
        migrations.AlterField(
            model_name='trafficlightreal',
            name='push_button',
            field=enumfields.fields.EnumIntegerField(blank=True, enum=traffic_control.models.traffic_light.PushButton, help_text='Describes if this traffic light has a push button attached.', null=True, verbose_name='Push button'),
        ),
        migrations.AlterField(
            model_name='trafficlightreal',
            name='responsible_entity',
            field=models.ForeignKey(blank=True, help_text='Organization or project that this device is assigned to.', null=True, on_delete=django.db.models.deletion.PROTECT, to='traffic_control.responsibleentity', verbose_name='Responsible entity'),
        ),
        migrations.AlterField(
            model_name='trafficlightreal',
            name='road_name',
            field=models.CharField(blank=True, help_text='Name of the road this traffic light is installed at.', max_length=254, null=True, verbose_name='Road name'),
        ),
        migrations.AlterField(
            model_name='trafficlightreal',
            name='sound_beacon',
            field=enumfields.fields.EnumIntegerField(blank=True, enum=traffic_control.models.traffic_light.TrafficLightSoundBeaconValue, help_text='Describes if this traffic light has a sound beacon attached.', null=True, verbose_name='Sound beacon'),
        ),
        migrations.AlterField(
            model_name='trafficlightreal',
            name='source_id',
            field=models.CharField(blank=True, default=None, help_text='ID of the device in the source where this device was imported from.', max_length=64, null=True, verbose_name='Source id'),
        ),
        migrations.AlterField(
            model_name='trafficlightreal',
            name='source_name',
            field=models.CharField(blank=True, default=None, help_text='Name of the source for where this device was imported from.', max_length=254, null=True, verbose_name='Source name'),
        ),
        migrations.AlterField(
            model_name='trafficlightreal',
            name='traffic_light_plan',
            field=models.ForeignKey(blank=True, help_text='The plan for this traffic light.', null=True, on_delete=django.db.models.deletion.PROTECT, to='traffic_control.trafficlightplan', verbose_name='Traffic Light Plan'),
        ),
        migrations.AlterField(
            model_name='trafficlightreal',
            name='txt',
            field=models.CharField(blank=True, help_text='Text on the traffic light.', max_length=254, null=True, verbose_name='Txt'),
        ),
        migrations.AlterField(
            model_name='trafficlightreal',
            name='type',
            field=enumfields.fields.EnumField(blank=True, enum=traffic_control.models.traffic_light.TrafficLightType, help_text='Describes the type of traffic light this device is.', max_length=10, null=True),
        ),
        migrations.AlterField(
            model_name='trafficlightreal',
            name='validity_period_end',
            field=models.DateField(blank=True, help_text='Date after which this traffic light becomes inactive.', null=True, verbose_name='Validity period end'),
        ),
        migrations.AlterField(
            model_name='trafficlightreal',
            name='validity_period_start',
            field=models.DateField(blank=True, help_text='Date on which this traffic light becomes active.', null=True, verbose_name='Validity period start'),
        ),
        migrations.AlterField(
            model_name='trafficlightreal',
            name='vehicle_recognition',
            field=enumfields.fields.EnumIntegerField(blank=True, enum=traffic_control.models.traffic_light.VehicleRecognition, help_text='Describes the type of vehicle recognition this traffic light has.', null=True, verbose_name='Vehicle recognition'),
        ),
        migrations.AlterField(
            model_name='trafficsignplan',
            name='device_type',
            field=models.ForeignKey(help_text='Type of the device from Helsinki Design Manual.', limit_choices_to=models.Q(models.Q(('target_model', None), ('target_model', traffic_control.enums.DeviceTypeTargetModel['TRAFFIC_SIGN']), _connector='OR')), on_delete=django.db.models.deletion.PROTECT, to='traffic_control.trafficcontroldevicetype', verbose_name='Device type'),
        ),
        migrations.AlterField(
            model_name='trafficsignplan',
            name='direction',
            field=models.IntegerField(default=0, help_text="Direction of the device in degrees. If 'road name' is entered the direction is in relation to the road. Otherwise cardinal direction is used. e.g. 0 = North, 45 = North East, 90 = East, 180 = South.", verbose_name='Direction'),
        ),
        migrations.AlterField(
            model_name='trafficsignplan',
            name='height',
            field=models.IntegerField(blank=True, help_text='The height of the sign from the ground, measured from the top in centimeters.', null=True, verbose_name='Height'),
        ),
        migrations.AlterField(
            model_name='trafficsignplan',
            name='lane_number',
            field=enumfields.fields.EnumField(blank=True, default='11', enum=traffic_control.enums.LaneNumber, help_text='Describes which lane of the road this sign affects.', max_length=10, verbose_name='Lane number'),
        ),
        migrations.AlterField(
            model_name='trafficsignplan',
            name='lane_type',
            field=enumfields.fields.EnumField(blank=True, default=1, enum=traffic_control.enums.LaneType, help_text='The type of lane which this sign affects.', max_length=10, verbose_name='Lane type'),
        ),
        migrations.AlterField(
            model_name='trafficsignplan',
            name='lifecycle',
            field=enumfields.fields.EnumIntegerField(default=3, enum=traffic_control.enums.Lifecycle, help_text='Lifecycle of the device, which describes the activity status of the device.', verbose_name='Lifecycle'),
        ),
        migrations.AlterField(
            model_name='trafficsignplan',
            name='location_specifier',
            field=enumfields.fields.EnumIntegerField(blank=True, default=1, enum=traffic_control.models.traffic_sign.LocationSpecifier, help_text='Specifies where the sign is in relation to the road.', null=True, verbose_name='Location specifier'),
        ),
        migrations.AlterField(
            model_name='trafficsignplan',
            name='mount_plan',
            field=models.ForeignKey(blank=True, help_text='Mount that this sign is mounted on.', null=True, on_delete=django.db.models.deletion.PROTECT, to='traffic_control.mountplan', verbose_name='Mount Plan'),
        ),
        migrations.AlterField(
            model_name='trafficsignplan',
            name='mount_type',
            field=models.ForeignKey(blank=True, help_text='Type of the mount this sign is attached to.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='traffic_control.mounttype', verbose_name='Mount type'),
        ),
        migrations.AlterField(
            model_name='trafficsignplan',
            name='owner',
            field=models.ForeignKey(help_text='Owner who orders and is responsible for the maintenance of the device.', on_delete=django.db.models.deletion.PROTECT, to='traffic_control.owner', verbose_name='Owner'),
        ),
        migrations.AlterField(
            model_name='trafficsignplan',
            name='plan',
            field=models.ForeignKey(blank=True, help_text='Plan which this traffic sign plan is a part of.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='traffic_sign_plans', to='traffic_control.plan', verbose_name='Plan'),
        ),
        migrations.AlterField(
            model_name='trafficsignplan',
            name='responsible_entity',
            field=models.ForeignKey(blank=True, help_text='Organization or project that this device is assigned to.', null=True, on_delete=django.db.models.deletion.PROTECT, to='traffic_control.responsibleentity', verbose_name='Responsible entity'),
        ),
        migrations.AlterField(
            model_name='trafficsignplan',
            name='road_name',
            field=models.CharField(blank=True, help_text='Name of the road this road name is installed at.', max_length=254, null=True, verbose_name='Road name'),
        ),
        migrations.AlterField(
            model_name='trafficsignplan',
            name='seasonal_validity_period_end',
            field=models.DateField(blank=True, help_text='Date after which this sign becomes seasonally inactive.', null=True, verbose_name='Seasonal validity period end'),
        ),
        migrations.AlterField(
            model_name='trafficsignplan',
            name='seasonal_validity_period_start',
            field=models.DateField(blank=True, help_text='Date on which this sign becomes seasonally active.', null=True, verbose_name='Seasonal validity period start'),
        ),
        migrations.AlterField(
            model_name='trafficsignplan',
            name='source_id',
            field=models.CharField(blank=True, default=None, help_text='ID of the device in the source where this device was imported from.', max_length=64, null=True, verbose_name='Source id'),
        ),
        migrations.AlterField(
            model_name='trafficsignplan',
            name='source_name',
            field=models.CharField(blank=True, default=None, help_text='Name of the source for where this device was imported from.', max_length=254, null=True, verbose_name='Source name'),
        ),
        migrations.AlterField(
            model_name='trafficsignplan',
            name='txt',
            field=models.CharField(blank=True, help_text='Text written on the sign.', max_length=254, null=True, verbose_name='Txt'),
        ),
        migrations.AlterField(
            model_name='trafficsignplan',
            name='validity_period_end',
            field=models.DateField(blank=True, help_text='Date after which this sign becomes inactive.', null=True, verbose_name='Validity period end'),
        ),
        migrations.AlterField(
            model_name='trafficsignplan',
            name='validity_period_start',
            field=models.DateField(blank=True, help_text='Date on which this sign becomes active.', null=True, verbose_name='Validity period start'),
        ),
        migrations.AlterField(
            model_name='trafficsignplan',
            name='value',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Numeric value on the sign.', max_digits=10, null=True, verbose_name='Traffic Sign Code value'),
        ),
        migrations.AlterField(
            model_name='trafficsignreal',
            name='attachment_url',
            field=models.URLField(blank=True, help_text='URL to a file attachment related to this sign.', max_length=500, null=True, verbose_name='Attachment url'),
        ),
        migrations.AlterField(
            model_name='trafficsignreal',
            name='condition',
            field=enumfields.fields.EnumIntegerField(blank=True, default=5, enum=traffic_control.enums.Condition, help_text='Describes the condition of this device.', null=True, verbose_name='Condition'),
        ),
        migrations.AlterField(
            model_name='trafficsignreal',
            name='coverage_area',
            field=models.ForeignKey(blank=True, help_text='Coverage area that this traffic sign belongs to.', null=True, on_delete=django.db.models.deletion.PROTECT, to='traffic_control.coveragearea', verbose_name='Coverage area'),
        ),
        migrations.AlterField(
            model_name='trafficsignreal',
            name='device_type',
            field=models.ForeignKey(help_text='Type of the device from Helsinki Design Manual.', limit_choices_to=models.Q(models.Q(('target_model', None), ('target_model', traffic_control.enums.DeviceTypeTargetModel['TRAFFIC_SIGN']), _connector='OR')), null=True, on_delete=django.db.models.deletion.PROTECT, to='traffic_control.trafficcontroldevicetype', verbose_name='Device type'),
        ),
        migrations.AlterField(
            model_name='trafficsignreal',
            name='direction',
            field=models.IntegerField(default=0, help_text="Direction of the device in degrees. If 'road name' is entered the direction is in relation to the road. Otherwise cardinal direction is used. e.g. 0 = North, 45 = North East, 90 = East, 180 = South.", verbose_name='Direction'),
        ),
        migrations.AlterField(
            model_name='trafficsignreal',
            name='height',
            field=models.IntegerField(blank=True, help_text='The height of the sign from the ground, measured from the top in centimeters.', null=True, verbose_name='Height'),
        ),
        migrations.AlterField(
            model_name='trafficsignreal',
            name='installation_date',
            field=models.DateField(blank=True, help_text='Date on which this device was installed on.', null=True, verbose_name='Installation date'),
        ),
        migrations.AlterField(
            model_name='trafficsignreal',
            name='installation_details',
            field=models.CharField(blank=True, help_text='Additional details about the installation.', max_length=254, null=True, verbose_name='Installation details'),
        ),
        migrations.AlterField(
            model_name='trafficsignreal',
            name='installation_id',
            field=models.CharField(blank=True, help_text='The id number of the installation record.', max_length=254, null=True, verbose_name='Installation id'),
        ),
        migrations.AlterField(
            model_name='trafficsignreal',
            name='installation_status',
            field=enumfields.fields.EnumField(blank=True, default='IN_USE', enum=traffic_control.enums.InstallationStatus, help_text='Describes this devices installation status.', max_length=10, null=True, verbose_name='Installation status'),
        ),
        migrations.AlterField(
            model_name='trafficsignreal',
            name='lane_number',
            field=enumfields.fields.EnumField(blank=True, default='11', enum=traffic_control.enums.LaneNumber, help_text='Describes which lane of the road this sign affects.', max_length=10, verbose_name='Lane number'),
        ),
        migrations.AlterField(
            model_name='trafficsignreal',
            name='lane_type',
            field=enumfields.fields.EnumField(blank=True, default=1, enum=traffic_control.enums.LaneType, help_text='The type of lane which this sign affects.', max_length=10, verbose_name='Lane type'),
        ),
        migrations.AlterField(
            model_name='trafficsignreal',
            name='legacy_code',
            field=models.CharField(blank=True, help_text='The device type code of the sign in the old Finnish road traffic law.', max_length=32, null=True, verbose_name='Legacy Traffic Sign Code'),
        ),
        migrations.AlterField(
            model_name='trafficsignreal',
            name='lifecycle',
            field=enumfields.fields.EnumIntegerField(default=3, enum=traffic_control.enums.Lifecycle, help_text='Lifecycle of the device, which describes the activity status of the device.', verbose_name='Lifecycle'),
        ),
        migrations.AlterField(
            model_name='trafficsignreal',
            name='location_specifier',
            field=enumfields.fields.EnumIntegerField(blank=True, default=1, enum=traffic_control.models.traffic_sign.LocationSpecifier, help_text='Specifies where the sign is in relation to the road.', null=True, verbose_name='Location specifier'),
        ),
        migrations.AlterField(
            model_name='trafficsignreal',
            name='manufacturer',
            field=models.CharField(blank=True, help_text='Name of the organization that manufactured this sign.', max_length=254, null=True, verbose_name='Manufacturer'),
        ),
        migrations.AlterField(
            model_name='trafficsignreal',
            name='mount_real',
            field=models.ForeignKey(blank=True, help_text='Mount that this sign is mounted on.', null=True, on_delete=django.db.models.deletion.PROTECT, to='traffic_control.mountreal', verbose_name='Mount Real'),
        ),
        migrations.AlterField(
            model_name='trafficsignreal',
            name='mount_type',
            field=models.ForeignKey(blank=True, help_text='Type of the mount this sign is attached to.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='traffic_control.mounttype', verbose_name='Mount type'),
        ),
        migrations.AlterField(
            model_name='trafficsignreal',
            name='operation',
            field=models.CharField(blank=True, help_text='Maintenance operations done to the sign, e.g. washing, straightening or painting.', max_length=64, null=True, verbose_name='Operation'),
        ),
        migrations.AlterField(
            model_name='trafficsignreal',
            name='owner',
            field=models.ForeignKey(help_text='Owner who orders and is responsible for the maintenance of the device.', on_delete=django.db.models.deletion.PROTECT, to='traffic_control.owner', verbose_name='Owner'),
        ),
        migrations.AlterField(
            model_name='trafficsignreal',
            name='permit_decision_id',
            field=models.CharField(blank=True, help_text='The id number of the installation permit.', max_length=254, null=True, verbose_name='Permit decision id'),
        ),
        migrations.AlterField(
            model_name='trafficsignreal',
            name='reflection_class',
            field=enumfields.fields.EnumField(blank=True, default='R1', enum=traffic_control.enums.Reflection, max_length=2, null=True, verbose_name='Reflection'),
        ),
        migrations.AlterField(
            model_name='trafficsignreal',
            name='responsible_entity',
            field=models.ForeignKey(blank=True, help_text='Organization or project that this device is assigned to.', null=True, on_delete=django.db.models.deletion.PROTECT, to='traffic_control.responsibleentity', verbose_name='Responsible entity'),
        ),
        migrations.AlterField(
            model_name='trafficsignreal',
            name='rfid',
            field=models.CharField(blank=True, help_text='RFID tag of the sign (if any).', max_length=254, null=True, verbose_name='RFID'),
        ),
        migrations.AlterField(
            model_name='trafficsignreal',
            name='road_name',
            field=models.CharField(blank=True, help_text='Name of the road this road name is installed at.', max_length=254, null=True, verbose_name='Road name'),
        ),
        migrations.AlterField(
            model_name='trafficsignreal',
            name='scanned_at',
            field=models.DateTimeField(blank=True, help_text='Date and time on which this sign was last scanned at.', null=True, verbose_name='Scanned at'),
        ),
        migrations.AlterField(
            model_name='trafficsignreal',
            name='seasonal_validity_period_end',
            field=models.DateField(blank=True, help_text='Date after which this sign becomes seasonally inactive.', null=True, verbose_name='Seasonal validity period end'),
        ),
        migrations.AlterField(
            model_name='trafficsignreal',
            name='seasonal_validity_period_start',
            field=models.DateField(blank=True, help_text='Date on which this sign becomes seasonally active.', null=True, verbose_name='Seasonal validity period start'),
        ),
        migrations.AlterField(
            model_name='trafficsignreal',
            name='size',
            field=enumfields.fields.EnumField(blank=True, default='M', enum=traffic_control.enums.Size, max_length=1, null=True, verbose_name='Size'),
        ),
        migrations.AlterField(
            model_name='trafficsignreal',
            name='source_id',
            field=models.CharField(blank=True, default=None, help_text='ID of the device in the source where this device was imported from.', max_length=64, null=True, verbose_name='Source id'),
        ),
        migrations.AlterField(
            model_name='trafficsignreal',
            name='source_name',
            field=models.CharField(blank=True, default=None, help_text='Name of the source for where this device was imported from.', max_length=254, null=True, verbose_name='Source name'),
        ),
        migrations.AlterField(
            model_name='trafficsignreal',
            name='surface_class',
            field=enumfields.fields.EnumField(blank=True, default='FLAT', enum=traffic_control.enums.Surface, max_length=6, null=True, verbose_name='Surface'),
        ),
        migrations.AlterField(
            model_name='trafficsignreal',
            name='traffic_sign_plan',
            field=models.ForeignKey(blank=True, help_text='The plan for this traffic sign.', null=True, on_delete=django.db.models.deletion.PROTECT, to='traffic_control.trafficsignplan', verbose_name='Traffic Sign Plan'),
        ),
        migrations.AlterField(
            model_name='trafficsignreal',
            name='txt',
            field=models.CharField(blank=True, help_text='Text written on the sign.', max_length=254, null=True, verbose_name='Txt'),
        ),
        migrations.AlterField(
            model_name='trafficsignreal',
            name='validity_period_end',
            field=models.DateField(blank=True, help_text='Date after which this sign becomes inactive.', null=True, verbose_name='Validity period end'),
        ),
        migrations.AlterField(
            model_name='trafficsignreal',
            name='validity_period_start',
            field=models.DateField(blank=True, help_text='Date on which this sign becomes active.', null=True, verbose_name='Validity period start'),
        ),
        migrations.AlterField(
            model_name='trafficsignreal',
            name='value',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Numeric value on the sign.', max_digits=10, null=True, verbose_name='Traffic Sign Code value'),
        ),
    ]
