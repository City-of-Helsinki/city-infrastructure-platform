# Generated by Django 3.2.17 on 2023-02-08 11:15

from django.db import migrations, models
import django.db.models.deletion
import traffic_control.enums


class Migration(migrations.Migration):

    dependencies = [
        ('traffic_control', '0062_additional_sign_plan_size'),
    ]

    operations = [
        migrations.AlterField(
            model_name='barrierplan',
            name='device_type',
            field=models.ForeignKey(blank=True, help_text='Type of the device from Helsinki Design Manual.', limit_choices_to=models.Q(models.Q(('target_model', None), ('target_model', traffic_control.enums.DeviceTypeTargetModel['BARRIER']), _connector='OR')), null=True, on_delete=django.db.models.deletion.PROTECT, to='traffic_control.trafficcontroldevicetype', verbose_name='Device type'),
        ),
        migrations.AlterField(
            model_name='barrierreal',
            name='device_type',
            field=models.ForeignKey(blank=True, help_text='Type of the device from Helsinki Design Manual.', limit_choices_to=models.Q(models.Q(('target_model', None), ('target_model', traffic_control.enums.DeviceTypeTargetModel['BARRIER']), _connector='OR')), null=True, on_delete=django.db.models.deletion.PROTECT, to='traffic_control.trafficcontroldevicetype', verbose_name='Device type'),
        ),
        migrations.AlterField(
            model_name='roadmarkingplan',
            name='device_type',
            field=models.ForeignKey(blank=True, help_text='Type of the device from Helsinki Design Manual.', limit_choices_to=models.Q(models.Q(('target_model', None), ('target_model', traffic_control.enums.DeviceTypeTargetModel['ROAD_MARKING']), _connector='OR')), null=True, on_delete=django.db.models.deletion.PROTECT, to='traffic_control.trafficcontroldevicetype', verbose_name='Device type'),
        ),
        migrations.AlterField(
            model_name='roadmarkingreal',
            name='device_type',
            field=models.ForeignKey(blank=True, help_text='Type of the device from Helsinki Design Manual.', limit_choices_to=models.Q(models.Q(('target_model', None), ('target_model', traffic_control.enums.DeviceTypeTargetModel['ROAD_MARKING']), _connector='OR')), null=True, on_delete=django.db.models.deletion.PROTECT, to='traffic_control.trafficcontroldevicetype', verbose_name='Device type'),
        ),
        migrations.AlterField(
            model_name='signpostplan',
            name='device_type',
            field=models.ForeignKey(blank=True, help_text='Type of the device from Helsinki Design Manual.', limit_choices_to=models.Q(models.Q(('target_model', None), ('target_model', traffic_control.enums.DeviceTypeTargetModel['SIGNPOST']), _connector='OR')), null=True, on_delete=django.db.models.deletion.PROTECT, to='traffic_control.trafficcontroldevicetype', verbose_name='Device type'),
        ),
        migrations.AlterField(
            model_name='signpostreal',
            name='device_type',
            field=models.ForeignKey(blank=True, help_text='Type of the device from Helsinki Design Manual.', limit_choices_to=models.Q(models.Q(('target_model', None), ('target_model', traffic_control.enums.DeviceTypeTargetModel['SIGNPOST']), _connector='OR')), null=True, on_delete=django.db.models.deletion.PROTECT, to='traffic_control.trafficcontroldevicetype', verbose_name='Device type'),
        ),
        migrations.AlterField(
            model_name='trafficlightplan',
            name='device_type',
            field=models.ForeignKey(blank=True, help_text='Type of the device from Helsinki Design Manual.', limit_choices_to=models.Q(models.Q(('target_model', None), ('target_model', traffic_control.enums.DeviceTypeTargetModel['TRAFFIC_LIGHT']), _connector='OR')), null=True, on_delete=django.db.models.deletion.PROTECT, to='traffic_control.trafficcontroldevicetype', verbose_name='Device type'),
        ),
        migrations.AlterField(
            model_name='trafficlightreal',
            name='device_type',
            field=models.ForeignKey(blank=True, help_text='Type of the device from Helsinki Design Manual.', limit_choices_to=models.Q(models.Q(('target_model', None), ('target_model', traffic_control.enums.DeviceTypeTargetModel['TRAFFIC_LIGHT']), _connector='OR')), null=True, on_delete=django.db.models.deletion.PROTECT, to='traffic_control.trafficcontroldevicetype', verbose_name='Device type'),
        ),
        migrations.AlterField(
            model_name='trafficsignplan',
            name='device_type',
            field=models.ForeignKey(blank=True, help_text='Type of the device from Helsinki Design Manual.', limit_choices_to=models.Q(models.Q(('target_model', None), ('target_model', traffic_control.enums.DeviceTypeTargetModel['TRAFFIC_SIGN']), _connector='OR')), null=True, on_delete=django.db.models.deletion.PROTECT, to='traffic_control.trafficcontroldevicetype', verbose_name='Device type'),
        ),
        migrations.AlterField(
            model_name='trafficsignreal',
            name='device_type',
            field=models.ForeignKey(blank=True, help_text='Type of the device from Helsinki Design Manual.', limit_choices_to=models.Q(models.Q(('target_model', None), ('target_model', traffic_control.enums.DeviceTypeTargetModel['TRAFFIC_SIGN']), _connector='OR')), null=True, on_delete=django.db.models.deletion.PROTECT, to='traffic_control.trafficcontroldevicetype', verbose_name='Device type'),
        ),
    ]
