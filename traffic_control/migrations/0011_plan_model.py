# Generated by Django 2.2.12 on 2020-05-14 10:50

from django.conf import settings
import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion
import traffic_control.mixins.api
import uuid


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("traffic_control", "0010_add_real_file_models"),
    ]

    operations = [
        migrations.CreateModel(
            name="Plan",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("name", models.CharField(max_length=512, verbose_name="Name")),
                (
                    "plan_number",
                    models.CharField(
                        help_text="Year and verdict section separated with an underscore.",
                        max_length=16,
                        verbose_name="Plan number",
                    ),
                ),
                (
                    "location",
                    django.contrib.gis.db.models.fields.MultiPolygonField(
                        srid=3879, verbose_name="Location (2D)"
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Active")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Deleted at"
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="created_by_plan_set",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "decision_maker",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="decision_maker_plan_set",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Decision maker",
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="deleted_by_plan_set",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Deleted by",
                    ),
                ),
                (
                    "planner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="plan_set",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Planner",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="updated_by_plan_set",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Updated by",
                    ),
                ),
            ],
            options={
                "verbose_name": "Plan",
                "verbose_name_plural": "Plans",
                "db_table": "plan",
            },
            bases=(traffic_control.mixins.api.SoftDeleteMixin, models.Model),
        ),
        migrations.AddField(
            model_name="barrierplan",
            name="plan",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="barrier_plans",
                to="traffic_control.Plan",
                verbose_name="Plan",
            ),
        ),
        migrations.AddField(
            model_name="mountplan",
            name="plan",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="mount_plans",
                to="traffic_control.Plan",
                verbose_name="Plan",
            ),
        ),
        migrations.AddField(
            model_name="roadmarkingplan",
            name="plan",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="road_marking_plans",
                to="traffic_control.Plan",
                verbose_name="Plan",
            ),
        ),
        migrations.AddField(
            model_name="signpostplan",
            name="plan",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="signpost_plans",
                to="traffic_control.Plan",
                verbose_name="Plan",
            ),
        ),
        migrations.AddField(
            model_name="trafficlightplan",
            name="plan",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="traffic_light_plans",
                to="traffic_control.Plan",
                verbose_name="Plan",
            ),
        ),
        migrations.AddField(
            model_name="trafficsignplan",
            name="plan",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="traffic_sign_plans",
                to="traffic_control.Plan",
                verbose_name="Plan",
            ),
        ),
    ]
