# Generated by Django 2.2.9 on 2020-01-28 18:30

from django.conf import settings
import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion
import enumfields.fields
import traffic_control.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="BarrierPlan",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                (
                    "location",
                    django.contrib.gis.db.models.fields.GeometryField(
                        srid=3879, verbose_name="Location (2D)"
                    ),
                ),
                (
                    "type",
                    enumfields.fields.EnumField(
                        enum=traffic_control.models.BarrierType,
                        max_length=10,
                        verbose_name="Barrier type",
                    ),
                ),
                (
                    "connection_type",
                    enumfields.fields.EnumIntegerField(
                        blank=True,
                        enum=traffic_control.models.ConnectionType,
                        null=True,
                        verbose_name="Connection type",
                    ),
                ),
                (
                    "material",
                    models.CharField(
                        blank=True, max_length=254, null=True, verbose_name="Material"
                    ),
                ),
                (
                    "is_electric",
                    models.BooleanField(default=False, verbose_name="Is electric"),
                ),
                (
                    "owner",
                    models.CharField(
                        blank=True, max_length=254, null=True, verbose_name="Owner"
                    ),
                ),
                ("decision_date", models.DateField(verbose_name="Decision date")),
                (
                    "decision_id",
                    models.CharField(
                        blank=True,
                        max_length=254,
                        null=True,
                        verbose_name="Decision id",
                    ),
                ),
                (
                    "plan_link",
                    models.CharField(
                        blank=True, max_length=254, null=True, verbose_name="Plan link"
                    ),
                ),
                (
                    "reflective",
                    enumfields.fields.EnumField(
                        blank=True,
                        enum=traffic_control.models.Reflective,
                        max_length=10,
                        null=True,
                        verbose_name="Reflective",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Deleted at"
                    ),
                ),
                (
                    "validity_period_start",
                    models.DateField(
                        blank=True, null=True, verbose_name="Validity period start"
                    ),
                ),
                (
                    "validity_period_end",
                    models.DateField(
                        blank=True, null=True, verbose_name="Validity period end"
                    ),
                ),
                (
                    "road_name",
                    models.CharField(
                        blank=True, max_length=254, null=True, verbose_name="Road name"
                    ),
                ),
                (
                    "lane_number",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Lane number"
                    ),
                ),
                (
                    "lane_type",
                    enumfields.fields.EnumIntegerField(
                        blank=True,
                        default=1,
                        enum=traffic_control.models.LaneType,
                        null=True,
                        verbose_name="Lane type",
                    ),
                ),
                (
                    "location_specifier",
                    enumfields.fields.EnumIntegerField(
                        blank=True,
                        default=2,
                        enum=traffic_control.models.BarrierLocationSpecifier,
                        null=True,
                        verbose_name="Location specifier",
                    ),
                ),
                (
                    "length",
                    models.IntegerField(blank=True, null=True, verbose_name="Length"),
                ),
                (
                    "count",
                    models.IntegerField(blank=True, null=True, verbose_name="Count"),
                ),
                ("txt", models.TextField(blank=True, null=True, verbose_name="Txt")),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_by_barrier_plan_set",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="deleted_by_barrier_plan_set",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Deleted by",
                    ),
                ),
            ],
            options={
                "verbose_name": "Barrier plan",
                "verbose_name_plural": "Barrier plans",
                "db_table": "barrier_plan",
            },
        ),
        migrations.CreateModel(
            name="Lifecycle",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("status", models.CharField(max_length=32, verbose_name="Status")),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        max_length=254,
                        null=True,
                        verbose_name="Description",
                    ),
                ),
            ],
            options={
                "verbose_name": "Lifecycle",
                "verbose_name_plural": "Lifecycles",
                "db_table": "lifecycle",
            },
        ),
        migrations.CreateModel(
            name="MountPlan",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                (
                    "location",
                    django.contrib.gis.db.models.fields.GeometryField(
                        srid=3879, verbose_name="Location (2D)"
                    ),
                ),
                (
                    "height",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                        verbose_name="Height",
                    ),
                ),
                (
                    "type",
                    enumfields.fields.EnumField(
                        default="PORTAL",
                        enum=traffic_control.models.MountType,
                        max_length=10,
                        verbose_name="Mount type",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Deleted at"
                    ),
                ),
                (
                    "validity_period_start",
                    models.DateField(
                        blank=True, null=True, verbose_name="Validity period start"
                    ),
                ),
                (
                    "validity_period_end",
                    models.DateField(
                        blank=True, null=True, verbose_name="Validity period end"
                    ),
                ),
                (
                    "owner",
                    models.CharField(
                        blank=True, max_length=254, null=True, verbose_name="Owner"
                    ),
                ),
                (
                    "txt",
                    models.CharField(
                        blank=True, max_length=254, null=True, verbose_name="Txt"
                    ),
                ),
                ("decision_date", models.DateField(verbose_name="Decision date")),
                (
                    "decision_id",
                    models.CharField(
                        blank=True,
                        max_length=254,
                        null=True,
                        verbose_name="Decision id",
                    ),
                ),
                (
                    "plan_link",
                    models.CharField(
                        blank=True, max_length=254, null=True, verbose_name="Plan link"
                    ),
                ),
                (
                    "material",
                    models.CharField(
                        blank=True, max_length=254, null=True, verbose_name="Material"
                    ),
                ),
                (
                    "electric_accountable",
                    models.CharField(
                        blank=True,
                        max_length=254,
                        null=True,
                        verbose_name="Electric accountable",
                    ),
                ),
                (
                    "cross_bar_length",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                        verbose_name="Cross bar length",
                    ),
                ),
                (
                    "foldable",
                    models.BooleanField(blank=True, null=True, verbose_name="Foldable"),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_by_mount_plan_set",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="deleted_by_mount_plan_set",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Deleted by",
                    ),
                ),
                (
                    "lifecycle",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="traffic_control.Lifecycle",
                        verbose_name="Lifecycle",
                    ),
                ),
            ],
            options={
                "verbose_name": "Mount Plan",
                "verbose_name_plural": "Mount Plans",
                "db_table": "mount_plan",
            },
        ),
        migrations.CreateModel(
            name="MountReal",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                (
                    "location",
                    django.contrib.gis.db.models.fields.GeometryField(
                        srid=3879, verbose_name="Location (2D)"
                    ),
                ),
                (
                    "type",
                    enumfields.fields.EnumField(
                        default="PORTAL",
                        enum=traffic_control.models.MountType,
                        max_length=10,
                        verbose_name="Mount type",
                    ),
                ),
                (
                    "material",
                    models.CharField(
                        blank=True, max_length=254, null=True, verbose_name="Material"
                    ),
                ),
                (
                    "installation_date",
                    models.DateField(verbose_name="Installation date"),
                ),
                (
                    "installation_status",
                    enumfields.fields.EnumField(
                        default="ACTIVE",
                        enum=traffic_control.models.InstallationStatus,
                        max_length=10,
                        verbose_name="Installation status",
                    ),
                ),
                (
                    "validity_period_start",
                    models.DateField(
                        blank=True, null=True, verbose_name="Validity period start"
                    ),
                ),
                (
                    "validity_period_end",
                    models.DateField(
                        blank=True, null=True, verbose_name="Validity period end"
                    ),
                ),
                (
                    "condition",
                    enumfields.fields.EnumIntegerField(
                        default=4,
                        enum=traffic_control.models.Condition,
                        verbose_name="Condition",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Deleted at"
                    ),
                ),
                (
                    "inspected_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Inspected at"
                    ),
                ),
                (
                    "height",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                        verbose_name="Height",
                    ),
                ),
                (
                    "txt",
                    models.CharField(
                        blank=True, max_length=254, null=True, verbose_name="Txt"
                    ),
                ),
                (
                    "electric_accountable",
                    models.CharField(
                        blank=True,
                        max_length=254,
                        null=True,
                        verbose_name="Electric accountable",
                    ),
                ),
                (
                    "foldable",
                    models.BooleanField(blank=True, null=True, verbose_name="Foldable"),
                ),
                (
                    "cross_bar_length",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                        verbose_name="Cross bar length",
                    ),
                ),
                (
                    "diameter",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                        verbose_name="Diameter",
                    ),
                ),
                (
                    "owner",
                    models.CharField(
                        blank=True, max_length=254, null=True, verbose_name="Owner"
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_by_mount_real_set",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="deleted_by_mount_real_set",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Deleted by",
                    ),
                ),
                (
                    "lifecycle",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="traffic_control.Lifecycle",
                        verbose_name="Lifecycle",
                    ),
                ),
                (
                    "mount_plan",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="traffic_control.MountPlan",
                        verbose_name="Mount Plan",
                    ),
                ),
            ],
            options={
                "verbose_name": "Mount Real",
                "verbose_name_plural": "Mount Reals",
                "db_table": "mount_real",
            },
        ),
        migrations.CreateModel(
            name="PortalType",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                (
                    "structure",
                    enumfields.fields.EnumField(
                        default="PIPE",
                        enum=traffic_control.models.PortalStructure,
                        max_length=10,
                        verbose_name="Portal structure",
                    ),
                ),
                (
                    "build_type",
                    enumfields.fields.EnumField(
                        default="SQUARE",
                        enum=traffic_control.models.PortalBuildType,
                        max_length=15,
                        verbose_name="Portal build type",
                    ),
                ),
                ("model", models.CharField(max_length=32, verbose_name="Portal model")),
            ],
            options={
                "verbose_name": "Portal type",
                "verbose_name_plural": "Portal types",
                "db_table": "portal_type",
            },
        ),
        migrations.CreateModel(
            name="RoadMarkingPlan",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                (
                    "location",
                    django.contrib.gis.db.models.fields.GeometryField(
                        srid=3879, verbose_name="Location (2D)"
                    ),
                ),
                (
                    "line_direction",
                    enumfields.fields.EnumField(
                        blank=True,
                        default="FORWARD",
                        enum=traffic_control.models.LineDirection,
                        max_length=10,
                        null=True,
                        verbose_name="Line direction",
                    ),
                ),
                (
                    "arrow_direction",
                    enumfields.fields.EnumField(
                        blank=True,
                        enum=traffic_control.models.ArrowDirection,
                        max_length=10,
                        null=True,
                        verbose_name="Arrow direction",
                    ),
                ),
                (
                    "value",
                    models.CharField(
                        blank=True,
                        max_length=254,
                        null=True,
                        verbose_name="Road Marking value",
                    ),
                ),
                (
                    "size",
                    models.CharField(
                        blank=True, max_length=254, null=True, verbose_name="Size"
                    ),
                ),
                (
                    "material",
                    models.CharField(
                        blank=True, max_length=254, null=True, verbose_name="Material"
                    ),
                ),
                (
                    "color",
                    enumfields.fields.EnumIntegerField(
                        default=1,
                        enum=traffic_control.models.RoadMarkingColor,
                        verbose_name="Color",
                    ),
                ),
                ("decision_date", models.DateField(verbose_name="Decision date")),
                (
                    "decision_id",
                    models.CharField(
                        blank=True,
                        max_length=254,
                        null=True,
                        verbose_name="Decision id",
                    ),
                ),
                (
                    "plan_link",
                    models.CharField(
                        blank=True, max_length=254, null=True, verbose_name="Plan link"
                    ),
                ),
                (
                    "validity_period_start",
                    models.DateField(
                        blank=True, null=True, verbose_name="Validity period start"
                    ),
                ),
                (
                    "validity_period_end",
                    models.DateField(
                        blank=True, null=True, verbose_name="Validity period end"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Deleted at"
                    ),
                ),
                (
                    "type_specifier",
                    models.CharField(
                        blank=True,
                        max_length=254,
                        null=True,
                        verbose_name="Type specifier",
                    ),
                ),
                (
                    "seasonal_validity_period_start",
                    models.DateField(
                        blank=True,
                        null=True,
                        verbose_name="Seasonal validity period start",
                    ),
                ),
                (
                    "seasonal_validity_period_end",
                    models.DateField(
                        blank=True,
                        null=True,
                        verbose_name="Seasonal validity period end",
                    ),
                ),
                (
                    "has_rumble_strips",
                    models.BooleanField(null=True, verbose_name="Has rumble strips"),
                ),
                (
                    "owner",
                    models.CharField(
                        blank=True, max_length=254, null=True, verbose_name="Owner"
                    ),
                ),
                (
                    "symbol",
                    models.CharField(
                        blank=True, max_length=254, null=True, verbose_name="Symbol"
                    ),
                ),
                (
                    "road_name",
                    models.CharField(
                        blank=True, max_length=254, null=True, verbose_name="Road name"
                    ),
                ),
                (
                    "lane_number",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Lane number"
                    ),
                ),
                (
                    "lane_type",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Lane type"
                    ),
                ),
                (
                    "location_specifier",
                    enumfields.fields.EnumIntegerField(
                        blank=True,
                        default=2,
                        enum=traffic_control.models.RoadMarkingLocationSpecifier,
                        null=True,
                        verbose_name="Location specifier",
                    ),
                ),
                (
                    "length",
                    models.IntegerField(blank=True, null=True, verbose_name="Length"),
                ),
                (
                    "width",
                    models.IntegerField(blank=True, null=True, verbose_name="Width"),
                ),
                ("is_raised", models.BooleanField(null=True, verbose_name="Is raised")),
                (
                    "is_grinded",
                    models.BooleanField(null=True, verbose_name="Is grinded"),
                ),
                (
                    "additional_info",
                    models.TextField(
                        blank=True, null=True, verbose_name="Additional info"
                    ),
                ),
                (
                    "amount",
                    models.CharField(
                        blank=True, max_length=254, null=True, verbose_name="Amount"
                    ),
                ),
            ],
            options={
                "verbose_name": "Road Marking Plan",
                "verbose_name_plural": "Road Marking Plans",
                "db_table": "road_marking_plan",
            },
        ),
        migrations.CreateModel(
            name="SignpostPlan",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                (
                    "location",
                    django.contrib.gis.db.models.fields.PointField(
                        srid=3879, verbose_name="Location (2D)"
                    ),
                ),
                (
                    "height",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                        verbose_name="Height",
                    ),
                ),
                (
                    "direction",
                    models.IntegerField(
                        blank=True, default=0, null=True, verbose_name="Direction"
                    ),
                ),
                (
                    "value",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Signpost value"
                    ),
                ),
                (
                    "txt",
                    models.CharField(
                        blank=True,
                        max_length=254,
                        null=True,
                        verbose_name="Signpost txt",
                    ),
                ),
                (
                    "mount_type",
                    enumfields.fields.EnumField(
                        blank=True,
                        default="OTHER",
                        enum=traffic_control.models.MountType,
                        max_length=10,
                        null=True,
                        verbose_name="Mount type",
                    ),
                ),
                ("decision_date", models.DateField(verbose_name="Decision date")),
                (
                    "decision_id",
                    models.CharField(
                        blank=True,
                        max_length=254,
                        null=True,
                        verbose_name="Decision id",
                    ),
                ),
                (
                    "plan_link",
                    models.CharField(
                        blank=True, max_length=254, null=True, verbose_name="Plan link"
                    ),
                ),
                (
                    "validity_period_start",
                    models.DateField(
                        blank=True, null=True, verbose_name="Validity period start"
                    ),
                ),
                (
                    "validity_period_end",
                    models.DateField(
                        blank=True, null=True, verbose_name="Validity period end"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Deleted at"
                    ),
                ),
                (
                    "owner",
                    models.CharField(
                        blank=True, max_length=254, null=True, verbose_name="Owner"
                    ),
                ),
                (
                    "size",
                    enumfields.fields.EnumField(
                        default="M",
                        enum=traffic_control.models.Size,
                        max_length=1,
                        verbose_name="Size",
                    ),
                ),
                (
                    "reflection_class",
                    enumfields.fields.EnumField(
                        default="R1",
                        enum=traffic_control.models.Reflection,
                        max_length=2,
                        verbose_name="Reflection",
                    ),
                ),
                (
                    "seasonal_validity_period_start",
                    models.DateField(
                        blank=True,
                        null=True,
                        verbose_name="Seasonal validity period start",
                    ),
                ),
                (
                    "seasonal_validity_period_end",
                    models.DateField(
                        blank=True,
                        null=True,
                        verbose_name="Seasonal validity period end",
                    ),
                ),
                (
                    "attachment_class",
                    models.CharField(
                        blank=True,
                        max_length=254,
                        null=True,
                        verbose_name="Attachment class",
                    ),
                ),
                (
                    "target_id",
                    models.CharField(
                        blank=True, max_length=254, null=True, verbose_name="Target ID"
                    ),
                ),
                (
                    "target_txt",
                    models.CharField(
                        blank=True, max_length=254, null=True, verbose_name="Target txt"
                    ),
                ),
                (
                    "responsible_entity",
                    models.CharField(
                        blank=True,
                        max_length=254,
                        null=True,
                        verbose_name="Responsible entity",
                    ),
                ),
                (
                    "electric_maintainer",
                    models.CharField(
                        blank=True,
                        max_length=254,
                        null=True,
                        verbose_name="Electric maintainer",
                    ),
                ),
                (
                    "road_name",
                    models.CharField(
                        blank=True, max_length=254, null=True, verbose_name="Road name"
                    ),
                ),
                (
                    "lane_number",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Lane number"
                    ),
                ),
                (
                    "lane_type",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Lane type"
                    ),
                ),
                (
                    "location_specifier",
                    enumfields.fields.EnumIntegerField(
                        blank=True,
                        default=1,
                        enum=traffic_control.models.SignpostLocationSpecifier,
                        null=True,
                        verbose_name="Location specifier",
                    ),
                ),
            ],
            options={
                "verbose_name": "Signpost Plan",
                "verbose_name_plural": "Signpost Plans",
                "db_table": "signpost_plan",
            },
        ),
        migrations.CreateModel(
            name="TrafficLightPlan",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                (
                    "location",
                    django.contrib.gis.db.models.fields.PointField(
                        srid=3879, verbose_name="Location (2D)"
                    ),
                ),
                (
                    "direction",
                    models.IntegerField(
                        blank=True, default=0, null=True, verbose_name="Direction"
                    ),
                ),
                (
                    "type",
                    enumfields.fields.EnumField(
                        blank=True,
                        enum=traffic_control.models.TrafficLightType,
                        max_length=10,
                        null=True,
                    ),
                ),
                (
                    "mount_type",
                    enumfields.fields.EnumField(
                        blank=True,
                        default="OTHER",
                        enum=traffic_control.models.MountType,
                        max_length=10,
                        null=True,
                        verbose_name="Mount type",
                    ),
                ),
                ("decision_date", models.DateField(verbose_name="Decision date")),
                (
                    "decision_id",
                    models.CharField(
                        blank=True,
                        max_length=254,
                        null=True,
                        verbose_name="Decision id",
                    ),
                ),
                (
                    "plan_link",
                    models.CharField(
                        blank=True, max_length=254, null=True, verbose_name="Plan link"
                    ),
                ),
                (
                    "validity_period_start",
                    models.DateField(
                        blank=True, null=True, verbose_name="Validity period start"
                    ),
                ),
                (
                    "validity_period_end",
                    models.DateField(
                        blank=True, null=True, verbose_name="Validity period end"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Deleted at"
                    ),
                ),
                (
                    "location_specifier",
                    enumfields.fields.EnumIntegerField(
                        blank=True,
                        default=1,
                        enum=traffic_control.models.TrafficLightLocationSpecifier,
                        null=True,
                        verbose_name="Location specifier",
                    ),
                ),
                (
                    "height",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                        verbose_name="Height",
                    ),
                ),
                (
                    "sound_beacon",
                    enumfields.fields.EnumIntegerField(
                        blank=True,
                        enum=traffic_control.models.TrafficLightSoundBeaconValue,
                        null=True,
                        verbose_name="Sound beacon",
                    ),
                ),
                (
                    "txt",
                    models.CharField(
                        blank=True, max_length=254, null=True, verbose_name="Txt"
                    ),
                ),
                (
                    "road_name",
                    models.CharField(
                        blank=True, max_length=254, null=True, verbose_name="Road name"
                    ),
                ),
                (
                    "lane_number",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Lane number"
                    ),
                ),
                (
                    "lane_type",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Lane type"
                    ),
                ),
            ],
            options={
                "verbose_name": "Traffic Light Plan",
                "verbose_name_plural": "Traffic Light Plans",
                "db_table": "traffic_light_plan",
            },
        ),
        migrations.CreateModel(
            name="TrafficSignCode",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("code", models.CharField(max_length=32, verbose_name="Code")),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        max_length=254,
                        null=True,
                        verbose_name="Description",
                    ),
                ),
            ],
            options={
                "verbose_name": "Traffic Sign Code",
                "verbose_name_plural": "Traffic Sign Codes",
                "db_table": "traffic_sign_code",
            },
        ),
        migrations.CreateModel(
            name="TrafficSignPlan",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                (
                    "location",
                    django.contrib.gis.db.models.fields.PointField(
                        srid=3879, verbose_name="Location (2D)"
                    ),
                ),
                (
                    "height",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                        verbose_name="Height",
                    ),
                ),
                (
                    "direction",
                    models.IntegerField(
                        blank=True, default=0, null=True, verbose_name="Direction"
                    ),
                ),
                (
                    "value",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Traffic Sign Code value"
                    ),
                ),
                (
                    "mount_type",
                    enumfields.fields.EnumField(
                        blank=True,
                        default="OTHER",
                        enum=traffic_control.models.MountType,
                        max_length=10,
                        null=True,
                        verbose_name="Mount type",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Deleted at"
                    ),
                ),
                (
                    "validity_period_start",
                    models.DateField(
                        blank=True, null=True, verbose_name="Validity period start"
                    ),
                ),
                (
                    "validity_period_end",
                    models.DateField(
                        blank=True, null=True, verbose_name="Validity period end"
                    ),
                ),
                (
                    "seasonal_validity_period_start",
                    models.DateField(
                        blank=True,
                        null=True,
                        verbose_name="Seasonal validity period start",
                    ),
                ),
                (
                    "seasonal_validity_period_end",
                    models.DateField(
                        blank=True,
                        null=True,
                        verbose_name="Seasonal validity period end",
                    ),
                ),
                (
                    "owner",
                    models.CharField(
                        blank=True, max_length=254, null=True, verbose_name="Owner"
                    ),
                ),
                (
                    "txt",
                    models.CharField(
                        blank=True, max_length=254, null=True, verbose_name="Txt"
                    ),
                ),
                ("decision_date", models.DateField(verbose_name="Decision date")),
                (
                    "decision_id",
                    models.CharField(
                        blank=True,
                        max_length=254,
                        null=True,
                        verbose_name="Decision id",
                    ),
                ),
                (
                    "plan_link",
                    models.CharField(
                        blank=True, max_length=254, null=True, verbose_name="Plan link"
                    ),
                ),
                (
                    "size",
                    enumfields.fields.EnumField(
                        default="M",
                        enum=traffic_control.models.Size,
                        max_length=1,
                        verbose_name="Size",
                    ),
                ),
                (
                    "reflection_class",
                    enumfields.fields.EnumField(
                        default="R1",
                        enum=traffic_control.models.Reflection,
                        max_length=2,
                        verbose_name="Reflection",
                    ),
                ),
                (
                    "surface_class",
                    enumfields.fields.EnumField(
                        default="FLAT",
                        enum=traffic_control.models.Surface,
                        max_length=6,
                        verbose_name="Surface",
                    ),
                ),
                (
                    "color",
                    enumfields.fields.EnumIntegerField(
                        default=1,
                        enum=traffic_control.models.Color,
                        verbose_name="Color",
                    ),
                ),
                (
                    "road_name",
                    models.CharField(
                        blank=True, max_length=254, null=True, verbose_name="Road name"
                    ),
                ),
                (
                    "lane_number",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Lane number"
                    ),
                ),
                (
                    "lane_type",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Lane type"
                    ),
                ),
                (
                    "location_specifier",
                    enumfields.fields.EnumIntegerField(
                        blank=True,
                        default=1,
                        enum=traffic_control.models.LocationSpecifier,
                        null=True,
                        verbose_name="Location specifier",
                    ),
                ),
                (
                    "affect_area",
                    django.contrib.gis.db.models.fields.PolygonField(
                        blank=True,
                        null=True,
                        srid=3879,
                        verbose_name="Affect area (2D)",
                    ),
                ),
                (
                    "code",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="traffic_control.TrafficSignCode",
                        verbose_name="Traffic Sign Code",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_by_traffic_sign_plan_set",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="deleted_by_traffic_sign_plan_set",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Deleted by",
                    ),
                ),
                (
                    "lifecycle",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="traffic_control.Lifecycle",
                        verbose_name="Lifecycle",
                    ),
                ),
                (
                    "mount",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="traffic_control.MountPlan",
                        verbose_name="Mount Plan",
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="traffic_control.TrafficSignPlan",
                        verbose_name="Parent Traffic Sign Plan",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="updated_by_traffic_sign_plan_set",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Updated by",
                    ),
                ),
            ],
            options={
                "verbose_name": "Traffic Sign Plan",
                "verbose_name_plural": "Traffic Sign Plans",
                "db_table": "traffic_sign_plan",
            },
        ),
        migrations.CreateModel(
            name="TrafficSignReal",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                (
                    "location",
                    django.contrib.gis.db.models.fields.PointField(
                        srid=3879, verbose_name="Location (2D)"
                    ),
                ),
                (
                    "height",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                        verbose_name="Height",
                    ),
                ),
                (
                    "direction",
                    models.IntegerField(
                        blank=True, default=0, null=True, verbose_name="Direction"
                    ),
                ),
                (
                    "value",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Traffic Sign Code value"
                    ),
                ),
                (
                    "mount_type",
                    enumfields.fields.EnumField(
                        default="OTHER",
                        enum=traffic_control.models.MountType,
                        max_length=10,
                        verbose_name="Mount",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Deleted at"
                    ),
                ),
                (
                    "validity_period_start",
                    models.DateField(
                        blank=True, null=True, verbose_name="Validity period start"
                    ),
                ),
                (
                    "validity_period_end",
                    models.DateField(
                        blank=True, null=True, verbose_name="Validity period end"
                    ),
                ),
                (
                    "seasonal_validity_period_start",
                    models.DateField(
                        blank=True,
                        null=True,
                        verbose_name="Seasonal validity period start",
                    ),
                ),
                (
                    "seasonal_validity_period_end",
                    models.DateField(
                        blank=True,
                        null=True,
                        verbose_name="Seasonal validity period end",
                    ),
                ),
                (
                    "owner",
                    models.CharField(
                        blank=True, max_length=254, null=True, verbose_name="Owner"
                    ),
                ),
                (
                    "manufacturer",
                    models.CharField(
                        blank=True,
                        max_length=254,
                        null=True,
                        verbose_name="Manufacturer",
                    ),
                ),
                (
                    "rfid",
                    models.CharField(
                        blank=True, max_length=254, null=True, verbose_name="RFID"
                    ),
                ),
                (
                    "txt",
                    models.CharField(
                        blank=True, max_length=254, null=True, verbose_name="Txt"
                    ),
                ),
                (
                    "installation_date",
                    models.DateField(verbose_name="Installation date"),
                ),
                (
                    "installation_status",
                    enumfields.fields.EnumField(
                        default="ACTIVE",
                        enum=traffic_control.models.InstallationStatus,
                        max_length=10,
                        verbose_name="Installation status",
                    ),
                ),
                (
                    "installation_id",
                    models.CharField(max_length=254, verbose_name="Installation id"),
                ),
                (
                    "installation_details",
                    models.CharField(
                        blank=True,
                        max_length=254,
                        null=True,
                        verbose_name="Installation details",
                    ),
                ),
                (
                    "condition",
                    enumfields.fields.EnumIntegerField(
                        default=4,
                        enum=traffic_control.models.Condition,
                        verbose_name="Condition",
                    ),
                ),
                (
                    "allu_decision_id",
                    models.CharField(max_length=254, verbose_name="Decision id (Allu)"),
                ),
                (
                    "size",
                    enumfields.fields.EnumField(
                        default="M",
                        enum=traffic_control.models.Size,
                        max_length=1,
                        verbose_name="Size",
                    ),
                ),
                (
                    "reflection_class",
                    enumfields.fields.EnumField(
                        default="R1",
                        enum=traffic_control.models.Reflection,
                        max_length=2,
                        verbose_name="Reflection",
                    ),
                ),
                (
                    "surface_class",
                    enumfields.fields.EnumField(
                        default="FLAT",
                        enum=traffic_control.models.Surface,
                        max_length=6,
                        verbose_name="Surface",
                    ),
                ),
                (
                    "color",
                    enumfields.fields.EnumIntegerField(
                        default=1,
                        enum=traffic_control.models.Color,
                        verbose_name="Color",
                    ),
                ),
                (
                    "road_name",
                    models.CharField(
                        blank=True, max_length=254, null=True, verbose_name="Road name"
                    ),
                ),
                (
                    "lane_number",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Lane number"
                    ),
                ),
                (
                    "lane_type",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Lane type"
                    ),
                ),
                (
                    "location_specifier",
                    enumfields.fields.EnumIntegerField(
                        blank=True,
                        default=1,
                        enum=traffic_control.models.LocationSpecifier,
                        null=True,
                        verbose_name="Location specifier",
                    ),
                ),
                (
                    "affect_area",
                    django.contrib.gis.db.models.fields.PolygonField(
                        blank=True,
                        null=True,
                        srid=3879,
                        verbose_name="Affect area (2D)",
                    ),
                ),
                (
                    "code",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="traffic_control.TrafficSignCode",
                        verbose_name="Traffic Sign Code",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_by_traffic_sign_real_set",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="deleted_by_traffic_sign_real_set",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Deleted by",
                    ),
                ),
                (
                    "lifecycle",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="traffic_control.Lifecycle",
                        verbose_name="Lifecycle",
                    ),
                ),
                (
                    "mount",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="traffic_control.MountReal",
                        verbose_name="Mount Real",
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="traffic_control.TrafficSignReal",
                        verbose_name="Parent Traffic Sign Real",
                    ),
                ),
                (
                    "traffic_sign_plan",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="traffic_control.TrafficSignPlan",
                        verbose_name="Traffic Sign Plan",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="updated_by_traffic_sign_real_set",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Updated by",
                    ),
                ),
            ],
            options={
                "verbose_name": "Traffic Sign Real",
                "verbose_name_plural": "Traffic Sign Reals",
                "db_table": "traffic_sign_real",
            },
        ),
        migrations.CreateModel(
            name="TrafficLightReal",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                (
                    "location",
                    django.contrib.gis.db.models.fields.PointField(
                        srid=3879, verbose_name="Location (2D)"
                    ),
                ),
                (
                    "direction",
                    models.IntegerField(
                        blank=True, default=0, null=True, verbose_name="Direction"
                    ),
                ),
                (
                    "type",
                    enumfields.fields.EnumField(
                        blank=True,
                        enum=traffic_control.models.TrafficLightType,
                        max_length=10,
                        null=True,
                    ),
                ),
                (
                    "mount_type",
                    enumfields.fields.EnumField(
                        blank=True,
                        default="OTHER",
                        enum=traffic_control.models.MountType,
                        max_length=10,
                        null=True,
                        verbose_name="Mount type",
                    ),
                ),
                (
                    "installation_date",
                    models.DateField(verbose_name="Installation date"),
                ),
                (
                    "installation_status",
                    enumfields.fields.EnumField(
                        default="ACTIVE",
                        enum=traffic_control.models.InstallationStatus,
                        max_length=10,
                        verbose_name="Installation status",
                    ),
                ),
                (
                    "validity_period_start",
                    models.DateField(
                        blank=True, null=True, verbose_name="Validity period start"
                    ),
                ),
                (
                    "validity_period_end",
                    models.DateField(
                        blank=True, null=True, verbose_name="Validity period end"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Deleted at"
                    ),
                ),
                (
                    "condition",
                    enumfields.fields.EnumIntegerField(
                        default=4,
                        enum=traffic_control.models.Condition,
                        verbose_name="Condition",
                    ),
                ),
                (
                    "road_name",
                    models.CharField(
                        blank=True, max_length=254, null=True, verbose_name="Road name"
                    ),
                ),
                (
                    "lane_number",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Lane number"
                    ),
                ),
                (
                    "lane_type",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Lane type"
                    ),
                ),
                (
                    "location_specifier",
                    enumfields.fields.EnumIntegerField(
                        blank=True,
                        default=1,
                        enum=traffic_control.models.TrafficLightLocationSpecifier,
                        null=True,
                        verbose_name="Location specifier",
                    ),
                ),
                (
                    "height",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                        verbose_name="Height",
                    ),
                ),
                (
                    "sound_beacon",
                    enumfields.fields.EnumIntegerField(
                        blank=True,
                        enum=traffic_control.models.TrafficLightSoundBeaconValue,
                        null=True,
                        verbose_name="Sound beacon",
                    ),
                ),
                (
                    "txt",
                    models.CharField(
                        blank=True, max_length=254, null=True, verbose_name="Txt"
                    ),
                ),
                (
                    "code",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="traffic_control.TrafficSignCode",
                        verbose_name="Traffic Sign Code",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_by_traffic_light_real_set",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="deleted_by_traffic_light_real_set",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Deleted by",
                    ),
                ),
                (
                    "lifecycle",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="traffic_control.Lifecycle",
                        verbose_name="Lifecycle",
                    ),
                ),
                (
                    "mount",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="traffic_control.MountReal",
                        verbose_name="Mount Real",
                    ),
                ),
                (
                    "traffic_light_plan",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="traffic_control.TrafficLightPlan",
                        verbose_name="Traffic Light Plan",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="updated_by_traffic_light_real_set",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Updated by",
                    ),
                ),
            ],
            options={
                "verbose_name": "Traffic Light Real",
                "verbose_name_plural": "Traffic Light Reals",
                "db_table": "traffic_light_real",
            },
        ),
        migrations.AddField(
            model_name="trafficlightplan",
            name="code",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="traffic_control.TrafficSignCode",
                verbose_name="Traffic Sign Code",
            ),
        ),
        migrations.AddField(
            model_name="trafficlightplan",
            name="created_by",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="created_by_traffic_light_plan_set",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Created by",
            ),
        ),
        migrations.AddField(
            model_name="trafficlightplan",
            name="deleted_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="deleted_by_traffic_light_plan_set",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Deleted by",
            ),
        ),
        migrations.AddField(
            model_name="trafficlightplan",
            name="lifecycle",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="traffic_control.Lifecycle",
                verbose_name="Lifecycle",
            ),
        ),
        migrations.AddField(
            model_name="trafficlightplan",
            name="mount",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="traffic_control.MountPlan",
                verbose_name="Mount Plan",
            ),
        ),
        migrations.AddField(
            model_name="trafficlightplan",
            name="updated_by",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="updated_by_traffic_light_plan_set",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Updated by",
            ),
        ),
        migrations.CreateModel(
            name="SignpostReal",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                (
                    "location",
                    django.contrib.gis.db.models.fields.PointField(
                        srid=3879, verbose_name="Location (2D)"
                    ),
                ),
                (
                    "height",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                        verbose_name="Height",
                    ),
                ),
                (
                    "direction",
                    models.IntegerField(
                        blank=True, default=0, null=True, verbose_name="Direction"
                    ),
                ),
                (
                    "value",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Signpost value"
                    ),
                ),
                (
                    "txt",
                    models.CharField(
                        blank=True,
                        max_length=254,
                        null=True,
                        verbose_name="Signpost txt",
                    ),
                ),
                (
                    "mount_type",
                    enumfields.fields.EnumField(
                        blank=True,
                        default="OTHER",
                        enum=traffic_control.models.MountType,
                        max_length=10,
                        null=True,
                        verbose_name="Mount type",
                    ),
                ),
                (
                    "installation_date",
                    models.DateField(verbose_name="Installation date"),
                ),
                (
                    "installation_status",
                    enumfields.fields.EnumField(
                        default="ACTIVE",
                        enum=traffic_control.models.InstallationStatus,
                        max_length=10,
                        verbose_name="Installation status",
                    ),
                ),
                (
                    "validity_period_start",
                    models.DateField(
                        blank=True, null=True, verbose_name="Validity period start"
                    ),
                ),
                (
                    "validity_period_end",
                    models.DateField(
                        blank=True, null=True, verbose_name="Validity period end"
                    ),
                ),
                (
                    "condition",
                    enumfields.fields.EnumIntegerField(
                        default=4,
                        enum=traffic_control.models.Condition,
                        verbose_name="Condition",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Deleted at"
                    ),
                ),
                (
                    "owner",
                    models.CharField(
                        blank=True, max_length=254, null=True, verbose_name="Owner"
                    ),
                ),
                (
                    "size",
                    enumfields.fields.EnumField(
                        default="M",
                        enum=traffic_control.models.Size,
                        max_length=1,
                        verbose_name="Size",
                    ),
                ),
                (
                    "reflection_class",
                    enumfields.fields.EnumField(
                        default="R1",
                        enum=traffic_control.models.Reflection,
                        max_length=2,
                        verbose_name="Reflection",
                    ),
                ),
                (
                    "material",
                    models.CharField(
                        blank=True, max_length=254, null=True, verbose_name="Material"
                    ),
                ),
                (
                    "seasonal_validity_period_start",
                    models.DateField(
                        blank=True,
                        null=True,
                        verbose_name="Seasonal validity period start",
                    ),
                ),
                (
                    "seasonal_validity_period_end",
                    models.DateField(
                        blank=True,
                        null=True,
                        verbose_name="Seasonal validity period end",
                    ),
                ),
                (
                    "organization",
                    models.CharField(
                        blank=True,
                        max_length=254,
                        null=True,
                        verbose_name="Organization",
                    ),
                ),
                (
                    "manufacturer",
                    models.CharField(
                        blank=True,
                        max_length=254,
                        null=True,
                        verbose_name="Manufacturer",
                    ),
                ),
                (
                    "attachment_class",
                    models.CharField(
                        blank=True,
                        max_length=254,
                        null=True,
                        verbose_name="Attachment class",
                    ),
                ),
                (
                    "target_id",
                    models.CharField(
                        blank=True, max_length=254, null=True, verbose_name="Target ID"
                    ),
                ),
                (
                    "target_txt",
                    models.CharField(
                        blank=True, max_length=254, null=True, verbose_name="Target txt"
                    ),
                ),
                (
                    "responsible_entity",
                    models.CharField(
                        blank=True,
                        max_length=254,
                        null=True,
                        verbose_name="Responsible entity",
                    ),
                ),
                (
                    "electric_maintainer",
                    models.CharField(
                        blank=True,
                        max_length=254,
                        null=True,
                        verbose_name="Electric maintainer",
                    ),
                ),
                (
                    "road_name",
                    models.CharField(
                        blank=True, max_length=254, null=True, verbose_name="Road name"
                    ),
                ),
                (
                    "lane_number",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Lane number"
                    ),
                ),
                (
                    "lane_type",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Lane type"
                    ),
                ),
                (
                    "location_specifier",
                    enumfields.fields.EnumIntegerField(
                        blank=True,
                        default=1,
                        enum=traffic_control.models.SignpostLocationSpecifier,
                        null=True,
                        verbose_name="Location specifier",
                    ),
                ),
                (
                    "code",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="traffic_control.TrafficSignCode",
                        verbose_name="Signpost Code",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_by_signpost_real_set",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="deleted_by_signpost_real_set",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Deleted by",
                    ),
                ),
                (
                    "lifecycle",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="traffic_control.Lifecycle",
                        verbose_name="Lifecycle",
                    ),
                ),
                (
                    "mount",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="traffic_control.MountPlan",
                        verbose_name="Mount Plan",
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="traffic_control.SignpostReal",
                        verbose_name="Parent Signpost Real",
                    ),
                ),
                (
                    "signpost_plan",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="traffic_control.SignpostPlan",
                        verbose_name="Signpost Plan",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="updated_by_signpost_real_set",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Updated by",
                    ),
                ),
            ],
            options={
                "verbose_name": "Signpost Real",
                "verbose_name_plural": "Signpost Reals",
                "db_table": "signpost_real",
            },
        ),
        migrations.AddField(
            model_name="signpostplan",
            name="code",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="traffic_control.TrafficSignCode",
                verbose_name="Signpost Code",
            ),
        ),
        migrations.AddField(
            model_name="signpostplan",
            name="created_by",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="created_by_signpost_plan_set",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Created by",
            ),
        ),
        migrations.AddField(
            model_name="signpostplan",
            name="deleted_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="deleted_by_signpost_plan_set",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Deleted by",
            ),
        ),
        migrations.AddField(
            model_name="signpostplan",
            name="lifecycle",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="traffic_control.Lifecycle",
                verbose_name="Lifecycle",
            ),
        ),
        migrations.AddField(
            model_name="signpostplan",
            name="mount",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="traffic_control.MountPlan",
                verbose_name="Mount Plan",
            ),
        ),
        migrations.AddField(
            model_name="signpostplan",
            name="parent",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="traffic_control.SignpostPlan",
                verbose_name="Parent Signpost Plan",
            ),
        ),
        migrations.AddField(
            model_name="signpostplan",
            name="updated_by",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="updated_by_signpost_plan_set",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Updated by",
            ),
        ),
        migrations.CreateModel(
            name="RoadMarkingReal",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                (
                    "location",
                    django.contrib.gis.db.models.fields.GeometryField(
                        srid=3879, verbose_name="Location (2D)"
                    ),
                ),
                (
                    "line_direction",
                    enumfields.fields.EnumField(
                        blank=True,
                        default="FORWARD",
                        enum=traffic_control.models.LineDirection,
                        max_length=10,
                        null=True,
                        verbose_name="Line direction",
                    ),
                ),
                (
                    "arrow_direction",
                    enumfields.fields.EnumField(
                        blank=True,
                        enum=traffic_control.models.ArrowDirection,
                        max_length=10,
                        null=True,
                        verbose_name="Arrow direction",
                    ),
                ),
                (
                    "value",
                    models.CharField(
                        blank=True,
                        max_length=254,
                        null=True,
                        verbose_name="Road Marking value",
                    ),
                ),
                (
                    "size",
                    models.CharField(
                        blank=True, max_length=254, null=True, verbose_name="Size"
                    ),
                ),
                (
                    "material",
                    models.CharField(
                        blank=True, max_length=254, null=True, verbose_name="Material"
                    ),
                ),
                (
                    "color",
                    enumfields.fields.EnumIntegerField(
                        default=1,
                        enum=traffic_control.models.RoadMarkingColor,
                        verbose_name="Color",
                    ),
                ),
                (
                    "installation_date",
                    models.DateField(verbose_name="Installation date"),
                ),
                (
                    "installation_status",
                    enumfields.fields.EnumField(
                        default="ACTIVE",
                        enum=traffic_control.models.InstallationStatus,
                        max_length=10,
                        verbose_name="Installation status",
                    ),
                ),
                (
                    "validity_period_start",
                    models.DateField(
                        blank=True, null=True, verbose_name="Validity period start"
                    ),
                ),
                (
                    "validity_period_end",
                    models.DateField(
                        blank=True, null=True, verbose_name="Validity period end"
                    ),
                ),
                (
                    "missing_traffic_sign_real_txt",
                    models.CharField(
                        blank=True,
                        max_length=254,
                        null=True,
                        verbose_name="Missing Traffic Sign Real txt",
                    ),
                ),
                (
                    "condition",
                    enumfields.fields.EnumIntegerField(
                        default=4,
                        enum=traffic_control.models.Condition,
                        verbose_name="Condition",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Deleted at"
                    ),
                ),
                (
                    "type_specifier",
                    models.CharField(
                        blank=True,
                        max_length=254,
                        null=True,
                        verbose_name="Type specifier",
                    ),
                ),
                (
                    "seasonal_validity_period_start",
                    models.DateField(
                        blank=True,
                        null=True,
                        verbose_name="Seasonal validity period start",
                    ),
                ),
                (
                    "seasonal_validity_period_end",
                    models.DateField(
                        blank=True,
                        null=True,
                        verbose_name="Seasonal validity period end",
                    ),
                ),
                (
                    "has_rumble_strips",
                    models.BooleanField(null=True, verbose_name="Has rumble strips"),
                ),
                (
                    "owner",
                    models.CharField(
                        blank=True, max_length=254, null=True, verbose_name="Owner"
                    ),
                ),
                (
                    "symbol",
                    models.CharField(
                        blank=True, max_length=254, null=True, verbose_name="Symbol"
                    ),
                ),
                (
                    "road_name",
                    models.CharField(
                        blank=True, max_length=254, null=True, verbose_name="Road name"
                    ),
                ),
                (
                    "lane_number",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Lane number"
                    ),
                ),
                (
                    "lane_type",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Lane type"
                    ),
                ),
                (
                    "location_specifier",
                    enumfields.fields.EnumIntegerField(
                        blank=True,
                        default=2,
                        enum=traffic_control.models.RoadMarkingLocationSpecifier,
                        null=True,
                        verbose_name="Location specifier",
                    ),
                ),
                (
                    "length",
                    models.IntegerField(blank=True, null=True, verbose_name="Length"),
                ),
                (
                    "width",
                    models.IntegerField(blank=True, null=True, verbose_name="Width"),
                ),
                ("is_raised", models.BooleanField(null=True, verbose_name="Is raised")),
                (
                    "is_grinded",
                    models.BooleanField(null=True, verbose_name="Is grinded"),
                ),
                (
                    "additional_info",
                    models.TextField(
                        blank=True, null=True, verbose_name="Additional info"
                    ),
                ),
                (
                    "amount",
                    models.CharField(
                        blank=True, max_length=254, null=True, verbose_name="Amount"
                    ),
                ),
                (
                    "code",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="traffic_control.TrafficSignCode",
                        verbose_name="Traffic Sign Code",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_by_road_marking_real_set",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="deleted_by_road_marking_real_set",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Deleted by",
                    ),
                ),
                (
                    "lifecycle",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="traffic_control.Lifecycle",
                        verbose_name="Lifecycle",
                    ),
                ),
                (
                    "road_marking_plan",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="traffic_control.RoadMarkingPlan",
                        verbose_name="Road Marking Plan",
                    ),
                ),
                (
                    "traffic_sign_real",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="traffic_control.TrafficSignReal",
                        verbose_name="Traffic Sign Real",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="updated_by_road_marking_real_set",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Updated by",
                    ),
                ),
            ],
            options={
                "verbose_name": "Road Marking Real",
                "verbose_name_plural": "Road Marking Reals",
                "db_table": "road_marking_real",
            },
        ),
        migrations.AddField(
            model_name="roadmarkingplan",
            name="code",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="traffic_control.TrafficSignCode",
                verbose_name="Traffic Sign Code",
            ),
        ),
        migrations.AddField(
            model_name="roadmarkingplan",
            name="created_by",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="created_by_road_marking_plan_set",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Created by",
            ),
        ),
        migrations.AddField(
            model_name="roadmarkingplan",
            name="deleted_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="deleted_by_road_marking_plan_set",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Deleted by",
            ),
        ),
        migrations.AddField(
            model_name="roadmarkingplan",
            name="lifecycle",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="traffic_control.Lifecycle",
                verbose_name="Lifecycle",
            ),
        ),
        migrations.AddField(
            model_name="roadmarkingplan",
            name="traffic_sign_plan",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="traffic_control.TrafficSignPlan",
                verbose_name="Traffic Sign Plan",
            ),
        ),
        migrations.AddField(
            model_name="roadmarkingplan",
            name="updated_by",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="updated_by_road_marking_plan_set",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Updated by",
            ),
        ),
        migrations.AddField(
            model_name="mountreal",
            name="portal_type",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="traffic_control.PortalType",
                verbose_name="Portal type",
            ),
        ),
        migrations.AddField(
            model_name="mountreal",
            name="updated_by",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="updated_by_mount_real_set",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Updated by",
            ),
        ),
        migrations.AddField(
            model_name="mountplan",
            name="portal_type",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="traffic_control.PortalType",
                verbose_name="Portal type",
            ),
        ),
        migrations.AddField(
            model_name="mountplan",
            name="updated_by",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="updated_by_mount_plan_set",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Updated by",
            ),
        ),
        migrations.CreateModel(
            name="BarrierReal",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                (
                    "location",
                    django.contrib.gis.db.models.fields.GeometryField(
                        srid=3879, verbose_name="Location (2D)"
                    ),
                ),
                (
                    "type",
                    enumfields.fields.EnumField(
                        enum=traffic_control.models.BarrierType,
                        max_length=10,
                        verbose_name="Barrier type",
                    ),
                ),
                (
                    "connection_type",
                    enumfields.fields.EnumIntegerField(
                        blank=True,
                        enum=traffic_control.models.ConnectionType,
                        null=True,
                        verbose_name="Connection type",
                    ),
                ),
                (
                    "material",
                    models.CharField(
                        blank=True, max_length=254, null=True, verbose_name="Material"
                    ),
                ),
                (
                    "is_electric",
                    models.BooleanField(default=False, verbose_name="Is electric"),
                ),
                (
                    "owner",
                    models.CharField(
                        blank=True, max_length=254, null=True, verbose_name="Owner"
                    ),
                ),
                (
                    "installation_date",
                    models.DateField(verbose_name="Installation date"),
                ),
                (
                    "installation_status",
                    enumfields.fields.EnumField(
                        default="ACTIVE",
                        enum=traffic_control.models.InstallationStatus,
                        max_length=10,
                        verbose_name="Installation status",
                    ),
                ),
                (
                    "validity_period_start",
                    models.DateField(
                        blank=True, null=True, verbose_name="Validity period start"
                    ),
                ),
                (
                    "validity_period_end",
                    models.DateField(
                        blank=True, null=True, verbose_name="Validity period end"
                    ),
                ),
                (
                    "condition",
                    enumfields.fields.EnumIntegerField(
                        default=4,
                        enum=traffic_control.models.Condition,
                        verbose_name="Condition",
                    ),
                ),
                (
                    "reflective",
                    enumfields.fields.EnumField(
                        blank=True,
                        enum=traffic_control.models.Reflective,
                        max_length=10,
                        null=True,
                        verbose_name="Reflective",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Deleted at"
                    ),
                ),
                (
                    "road_name",
                    models.CharField(
                        blank=True, max_length=254, null=True, verbose_name="Road name"
                    ),
                ),
                (
                    "lane_number",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Lane number"
                    ),
                ),
                (
                    "lane_type",
                    enumfields.fields.EnumIntegerField(
                        blank=True,
                        default=1,
                        enum=traffic_control.models.LaneType,
                        null=True,
                        verbose_name="Lane type",
                    ),
                ),
                (
                    "location_specifier",
                    enumfields.fields.EnumIntegerField(
                        blank=True,
                        default=2,
                        enum=traffic_control.models.BarrierLocationSpecifier,
                        null=True,
                        verbose_name="Location specifier",
                    ),
                ),
                (
                    "length",
                    models.IntegerField(blank=True, null=True, verbose_name="Length"),
                ),
                (
                    "count",
                    models.IntegerField(blank=True, null=True, verbose_name="Count"),
                ),
                ("txt", models.TextField(blank=True, null=True, verbose_name="Txt")),
                (
                    "barrier_plan",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="traffic_control.BarrierPlan",
                        verbose_name="Barrier plan",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_by_barrier_real_set",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="deleted_by_barrier_real_set",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Deleted by",
                    ),
                ),
                (
                    "lifecycle",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="traffic_control.Lifecycle",
                        verbose_name="Lifecycle",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="updated_by_barrier_real_set",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Updated by",
                    ),
                ),
            ],
            options={
                "verbose_name": "Barrier real",
                "verbose_name_plural": "Barrier reals",
                "db_table": "barrier_real",
            },
        ),
        migrations.AddField(
            model_name="barrierplan",
            name="lifecycle",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="traffic_control.Lifecycle",
                verbose_name="Lifecycle",
            ),
        ),
        migrations.AddField(
            model_name="barrierplan",
            name="updated_by",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="updated_by_barrier_plan_set",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Updated by",
            ),
        ),
    ]
