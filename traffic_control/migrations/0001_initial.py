# Generated by Django 3.0.1 on 2020-01-03 10:18

import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Lifecycle",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("status", models.CharField(max_length=32, verbose_name="Status")),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        max_length=254,
                        null=True,
                        verbose_name="Description",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TrafficSignCode",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("code", models.CharField(max_length=32, verbose_name="Code")),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        max_length=254,
                        null=True,
                        verbose_name="Description",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TrafficSignPlan",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                (
                    "location_xy",
                    django.contrib.gis.db.models.fields.PointField(
                        srid=3879, verbose_name="Location (2D)"
                    ),
                ),
                (
                    "location_z",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                        verbose_name="Location Z",
                    ),
                ),
                (
                    "height",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                        verbose_name="Height",
                    ),
                ),
                (
                    "direction",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                        verbose_name="Direction",
                    ),
                ),
                ("decision_date", models.DateField(verbose_name="Decision date")),
                (
                    "value",
                    models.CharField(
                        blank=True,
                        max_length=32,
                        null=True,
                        verbose_name="TrafficSignCode value",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "validity_period_start",
                    models.DateField(
                        blank=True, null=True, verbose_name="Validity period start"
                    ),
                ),
                (
                    "validity_period_end",
                    models.DateField(
                        blank=True, null=True, verbose_name="Validity period end"
                    ),
                ),
                (
                    "seasonal_validity_period_start",
                    models.DateField(
                        blank=True,
                        null=True,
                        verbose_name="Seasonal validity period start",
                    ),
                ),
                (
                    "seasonal_validity_period_end",
                    models.DateField(
                        blank=True,
                        null=True,
                        verbose_name="Seasonal validity period end",
                    ),
                ),
                (
                    "owner",
                    models.CharField(
                        blank=True, max_length=254, null=True, verbose_name="Owner"
                    ),
                ),
                (
                    "txt",
                    models.CharField(
                        blank=True, max_length=254, null=True, verbose_name="Txt"
                    ),
                ),
                (
                    "decision_link",
                    models.CharField(
                        blank=True,
                        max_length=254,
                        null=True,
                        verbose_name="Decision link",
                    ),
                ),
                (
                    "plan_link",
                    models.CharField(
                        blank=True, max_length=254, null=True, verbose_name="Plan link"
                    ),
                ),
                (
                    "size",
                    models.CharField(
                        choices=[("S", "Small"), ("M", "Medium"), ("L", "Large")],
                        default="M",
                        max_length=1,
                    ),
                ),
                (
                    "reflection_class",
                    models.CharField(
                        blank=True,
                        max_length=32,
                        null=True,
                        verbose_name="Reflection class",
                    ),
                ),
                (
                    "surface_class",
                    models.CharField(
                        choices=[("CV", "Convex"), ("DR", "Direct")],
                        default="DR",
                        max_length=2,
                    ),
                ),
                (
                    "color",
                    models.CharField(
                        choices=[("BL", "Blue"), ("YE", "Yellow")],
                        default="BL",
                        max_length=2,
                    ),
                ),
                (
                    "road_name",
                    models.CharField(
                        blank=True, max_length=254, null=True, verbose_name="Road name"
                    ),
                ),
                (
                    "lane_number",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Lane number"
                    ),
                ),
                (
                    "lane_type",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Lane type"
                    ),
                ),
                (
                    "location_specifier",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Location specifier"
                    ),
                ),
                (
                    "code",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="traffic_control.TrafficSignCode",
                    ),
                ),
            ],
        ),
    ]
