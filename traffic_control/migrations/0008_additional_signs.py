# Generated by Django 2.2.13 on 2020-06-30 07:42

import uuid

import django.contrib.gis.db.models.fields
import django.db.models.deletion
import enumfields.fields
from django.conf import settings
from django.db import migrations, models

import traffic_control.enums
import traffic_control.models.additional_sign
import traffic_control.models.common
import traffic_control.models.traffic_sign


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("traffic_control", "0007_remove_traffic_sign_parent"),
    ]

    operations = [
        migrations.CreateModel(
            name="AdditionalSignPlan",
            fields=[
                ("is_active", models.BooleanField(default=True, verbose_name="Active")),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Deleted at"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                (
                    "location",
                    django.contrib.gis.db.models.fields.PointField(
                        blank=True, null=True, srid=3879, verbose_name="Location (2D)"
                    ),
                ),
                (
                    "affect_area",
                    django.contrib.gis.db.models.fields.PolygonField(
                        blank=True,
                        null=True,
                        srid=3879,
                        verbose_name="Affect area (2D)",
                    ),
                ),
                (
                    "reflection_class",
                    enumfields.fields.EnumField(
                        blank=True,
                        default="R1",
                        enum=traffic_control.enums.Reflection,
                        max_length=2,
                        null=True,
                        verbose_name="Reflection",
                    ),
                ),
                (
                    "surface_class",
                    enumfields.fields.EnumField(
                        blank=True,
                        default="FLAT",
                        enum=traffic_control.enums.Surface,
                        max_length=6,
                        null=True,
                        verbose_name="Surface",
                    ),
                ),
                (
                    "color",
                    enumfields.fields.EnumIntegerField(
                        blank=True,
                        default=1,
                        enum=traffic_control.models.additional_sign.Color,
                        null=True,
                        verbose_name="Color",
                    ),
                ),
                (
                    "road_name",
                    models.CharField(
                        blank=True, max_length=254, null=True, verbose_name="Road name"
                    ),
                ),
                (
                    "lane_number",
                    enumfields.fields.EnumField(
                        blank=True,
                        default="11",
                        enum=traffic_control.enums.LaneNumber,
                        max_length=10,
                        verbose_name="Lane number",
                    ),
                ),
                (
                    "lane_type",
                    enumfields.fields.EnumField(
                        blank=True,
                        default=1,
                        enum=traffic_control.enums.LaneType,
                        max_length=10,
                        verbose_name="Lane type",
                    ),
                ),
                (
                    "location_specifier",
                    enumfields.fields.EnumIntegerField(
                        blank=True,
                        default=1,
                        enum=traffic_control.models.traffic_sign.LocationSpecifier,
                        null=True,
                        verbose_name="Location specifier",
                    ),
                ),
                (
                    "decision_id",
                    models.CharField(
                        blank=True,
                        max_length=254,
                        null=True,
                        verbose_name="Decision id",
                    ),
                ),
                ("decision_date", models.DateField(verbose_name="Decision date")),
                (
                    "installation_id",
                    models.CharField(
                        blank=True,
                        max_length=254,
                        null=True,
                        verbose_name="Installation id",
                    ),
                ),
                (
                    "installation_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Installation date"
                    ),
                ),
                (
                    "installation_status",
                    enumfields.fields.EnumField(
                        blank=True,
                        default="IN_USE",
                        enum=traffic_control.enums.InstallationStatus,
                        max_length=10,
                        null=True,
                        verbose_name="Installation status",
                    ),
                ),
                (
                    "installed_by",
                    models.CharField(
                        blank=True, max_length=256, verbose_name="Installed by"
                    ),
                ),
                ("owner", models.CharField(max_length=256, verbose_name="Owner")),
                (
                    "validity_period_start",
                    models.DateField(
                        blank=True, null=True, verbose_name="Validity period start"
                    ),
                ),
                (
                    "validity_period_end",
                    models.DateField(
                        blank=True, null=True, verbose_name="Validity period end"
                    ),
                ),
                (
                    "seasonal_validity_period_start",
                    models.DateField(
                        blank=True,
                        null=True,
                        verbose_name="Seasonal validity period start",
                    ),
                ),
                (
                    "seasonal_validity_period_end",
                    models.DateField(
                        blank=True,
                        null=True,
                        verbose_name="Seasonal validity period end",
                    ),
                ),
                (
                    "lifecycle",
                    enumfields.fields.EnumIntegerField(
                        default=3,
                        enum=traffic_control.enums.Lifecycle,
                        verbose_name="Lifecycle",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="created_by_additionalsignplan_set",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="deleted_by_additionalsignplan_set",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Deleted by",
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="additional_signs",
                        to="traffic_control.TrafficSignPlan",
                        verbose_name="Parent Traffic Sign Plan",
                    ),
                ),
                (
                    "plan",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="additional_sign_plans",
                        to="traffic_control.Plan",
                        verbose_name="Plan",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="updated_by_additionalsignplan_set",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Updated by",
                    ),
                ),
            ],
            options={
                "verbose_name": "Additional Sign Plan",
                "verbose_name_plural": "Additional Sign Plans",
                "db_table": "additional_sign_plan",
            },
        ),
        migrations.CreateModel(
            name="AdditionalSignReal",
            fields=[
                ("is_active", models.BooleanField(default=True, verbose_name="Active")),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Deleted at"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                (
                    "location",
                    django.contrib.gis.db.models.fields.PointField(
                        blank=True, null=True, srid=3879, verbose_name="Location (2D)"
                    ),
                ),
                (
                    "affect_area",
                    django.contrib.gis.db.models.fields.PolygonField(
                        blank=True,
                        null=True,
                        srid=3879,
                        verbose_name="Affect area (2D)",
                    ),
                ),
                (
                    "reflection_class",
                    enumfields.fields.EnumField(
                        blank=True,
                        default="R1",
                        enum=traffic_control.enums.Reflection,
                        max_length=2,
                        null=True,
                        verbose_name="Reflection",
                    ),
                ),
                (
                    "surface_class",
                    enumfields.fields.EnumField(
                        blank=True,
                        default="FLAT",
                        enum=traffic_control.enums.Surface,
                        max_length=6,
                        null=True,
                        verbose_name="Surface",
                    ),
                ),
                (
                    "color",
                    enumfields.fields.EnumIntegerField(
                        blank=True,
                        default=1,
                        enum=traffic_control.models.additional_sign.Color,
                        null=True,
                        verbose_name="Color",
                    ),
                ),
                (
                    "road_name",
                    models.CharField(
                        blank=True, max_length=254, null=True, verbose_name="Road name"
                    ),
                ),
                (
                    "lane_number",
                    enumfields.fields.EnumField(
                        blank=True,
                        default="11",
                        enum=traffic_control.enums.LaneNumber,
                        max_length=10,
                        verbose_name="Lane number",
                    ),
                ),
                (
                    "lane_type",
                    enumfields.fields.EnumField(
                        blank=True,
                        default=1,
                        enum=traffic_control.enums.LaneType,
                        max_length=10,
                        verbose_name="Lane type",
                    ),
                ),
                (
                    "location_specifier",
                    enumfields.fields.EnumIntegerField(
                        blank=True,
                        default=1,
                        enum=traffic_control.models.traffic_sign.LocationSpecifier,
                        null=True,
                        verbose_name="Location specifier",
                    ),
                ),
                (
                    "decision_id",
                    models.CharField(
                        blank=True,
                        max_length=254,
                        null=True,
                        verbose_name="Decision id",
                    ),
                ),
                ("decision_date", models.DateField(verbose_name="Decision date")),
                (
                    "installation_id",
                    models.CharField(
                        blank=True,
                        max_length=254,
                        null=True,
                        verbose_name="Installation id",
                    ),
                ),
                (
                    "installation_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Installation date"
                    ),
                ),
                (
                    "installation_status",
                    enumfields.fields.EnumField(
                        blank=True,
                        default="IN_USE",
                        enum=traffic_control.enums.InstallationStatus,
                        max_length=10,
                        null=True,
                        verbose_name="Installation status",
                    ),
                ),
                (
                    "installed_by",
                    models.CharField(
                        blank=True, max_length=256, verbose_name="Installed by"
                    ),
                ),
                ("owner", models.CharField(max_length=256, verbose_name="Owner")),
                (
                    "validity_period_start",
                    models.DateField(
                        blank=True, null=True, verbose_name="Validity period start"
                    ),
                ),
                (
                    "validity_period_end",
                    models.DateField(
                        blank=True, null=True, verbose_name="Validity period end"
                    ),
                ),
                (
                    "seasonal_validity_period_start",
                    models.DateField(
                        blank=True,
                        null=True,
                        verbose_name="Seasonal validity period start",
                    ),
                ),
                (
                    "seasonal_validity_period_end",
                    models.DateField(
                        blank=True,
                        null=True,
                        verbose_name="Seasonal validity period end",
                    ),
                ),
                (
                    "lifecycle",
                    enumfields.fields.EnumIntegerField(
                        default=3,
                        enum=traffic_control.enums.Lifecycle,
                        verbose_name="Lifecycle",
                    ),
                ),
                (
                    "condition",
                    enumfields.fields.EnumIntegerField(
                        blank=True,
                        default=5,
                        enum=traffic_control.enums.Condition,
                        null=True,
                        verbose_name="Condition",
                    ),
                ),
                (
                    "manufacturer",
                    models.CharField(
                        blank=True,
                        max_length=254,
                        null=True,
                        verbose_name="Manufacturer",
                    ),
                ),
                (
                    "rfid",
                    models.CharField(
                        blank=True, max_length=254, null=True, verbose_name="RFID"
                    ),
                ),
                (
                    "additional_sign_plan",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="traffic_control.AdditionalSignPlan",
                        verbose_name="Additional Sign Plan",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="created_by_additionalsignreal_set",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="deleted_by_additionalsignreal_set",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Deleted by",
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="additional_signs",
                        to="traffic_control.TrafficSignReal",
                        verbose_name="Parent Traffic Sign Real",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="updated_by_additionalsignreal_set",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Updated by",
                    ),
                ),
            ],
            options={
                "verbose_name": "Additional Sign Real",
                "verbose_name_plural": "Additional Sign Reals",
                "db_table": "additional_sign_real",
            },
        ),
        migrations.CreateModel(
            name="AdditionalSignContentReal",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                (
                    "text",
                    models.CharField(
                        blank=True, max_length=256, verbose_name="Content text"
                    ),
                ),
                ("order", models.SmallIntegerField(default=1, verbose_name="Order")),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="created_by_additionalsigncontentreal_set",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "device_type",
                    models.ForeignKey(
                        limit_choices_to=models.Q(
                            models.Q(
                                ("target_model", None),
                                (
                                    "target_model",
                                    traffic_control.enums.DeviceTypeTargetModel(
                                        "traffic_sign"
                                    ),
                                ),
                                _connector="OR",
                            )
                        ),
                        on_delete=django.db.models.deletion.PROTECT,
                        to="traffic_control.TrafficControlDeviceType",
                        verbose_name="Device type",
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="content",
                        to="traffic_control.AdditionalSignReal",
                        verbose_name="Parent Additional Sign Real",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="updated_by_additionalsigncontentreal_set",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Updated by",
                    ),
                ),
            ],
            options={
                "verbose_name": "Additional Sign Content Real",
                "verbose_name_plural": "Additional Sign Content Reals",
            },
        ),
        migrations.CreateModel(
            name="AdditionalSignContentPlan",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                (
                    "text",
                    models.CharField(
                        blank=True, max_length=256, verbose_name="Content text"
                    ),
                ),
                ("order", models.SmallIntegerField(default=1, verbose_name="Order")),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="created_by_additionalsigncontentplan_set",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "device_type",
                    models.ForeignKey(
                        limit_choices_to=models.Q(
                            models.Q(
                                ("target_model", None),
                                (
                                    "target_model",
                                    traffic_control.enums.DeviceTypeTargetModel(
                                        "traffic_sign"
                                    ),
                                ),
                                _connector="OR",
                            )
                        ),
                        on_delete=django.db.models.deletion.PROTECT,
                        to="traffic_control.TrafficControlDeviceType",
                        verbose_name="Device type",
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="content",
                        to="traffic_control.AdditionalSignPlan",
                        verbose_name="Parent Additional Sign Plan",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="updated_by_additionalsigncontentplan_set",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Updated by",
                    ),
                ),
            ],
            options={
                "verbose_name": "Additional Sign Content Plan",
                "verbose_name_plural": "Additional Sign Content Plans",
            },
        ),
    ]
