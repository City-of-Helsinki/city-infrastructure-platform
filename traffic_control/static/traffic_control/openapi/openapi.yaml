openapi: 3.0.3
info:
  title: City Infrastructure Platform REST API
  version: v1
  description: |
    ## Traffic control devices

    Provides REST API for traffic control devices, such as traffic signs, traffic lights, barriers, signposts, mounts and road markings.

    These devices have planned and realized entities in the platform, and therefore also equivalent REST-endpoints.

    Entity location output format can be controlled via "geo_format" GET-parameter. Supported formats are `ewkt` and `geojson`. EWKT is the default format.

    All coordinate values are presented in [ETRS89 / ETRS-GK25FIN (EPSG:3879)](https://epsg.org/crs_3879/ETRS89-GK25FIN.html) coordinate reference system.
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
paths:
  /v1/additional-sign-plans/:
    get:
      operationId: additional_sign_plans_list
      summary: Retrieve all AdditionalSign Plans
      parameters:
      - in: query
        name: additional_information
        schema:
          type: string
      - in: query
        name: color
        schema:
          type: integer
          nullable: true
          enum:
          - 1
          - 2
        description: |-
          * `1` - Blue
          * `2` - Yellow
      - in: query
        name: created_at
        schema:
          type: string
          format: date-time
      - in: query
        name: created_by
        schema:
          type: string
          format: uuid
      - in: query
        name: deleted_at
        schema:
          type: string
          format: date-time
      - in: query
        name: deleted_by
        schema:
          type: string
          format: uuid
      - in: query
        name: device_type
        schema:
          type: string
          format: uuid
      - in: query
        name: direction
        schema:
          type: integer
      - in: query
        name: geo_format
        schema:
          type: string
          enum:
          - default
          - geojson
        description: Determine whether the location should be in EWKT (default) or
          GeoJSON format.
      - in: query
        name: height
        schema:
          type: integer
      - in: query
        name: id
        schema:
          type: string
          format: uuid
      - in: query
        name: is_active
        schema:
          type: boolean
      - in: query
        name: is_replaced
        schema:
          type: string
          enum:
          - All
          - 'false'
          - 'true'
        description: |-
          Plan replacement

          * `All` - ALL
          * `true` - true
          * `false` - false
      - in: query
        name: lane_number
        schema:
          type: string
          nullable: true
          enum:
          - '11'
          - '21'
          - '31'
          - X2
          - X3
          - X4
          - X5
          - X6
          - X7
          - X8
          - X9
        description: |-
          Describes which lane of the road this sign affects.

          * `11` - Main lane
          * `21` - Main lane
          * `31` - Lane allowing traffic to both directions
          * `X2` - First left additional lane
          * `X3` - First right additional lane
          * `X4` - Second left additional lane
          * `X5` - Second right additional lane
          * `X6` - Third left additional lane
          * `X7` - Third right additional lane
          * `X8` - Fourth left additional lane
          * `X9` - Fourth right additional lane
      - in: query
        name: lane_type
        schema:
          type: string
          nullable: true
          enum:
          - '1'
          - '10'
          - '11'
          - '2'
          - '20'
          - '21'
          - '22'
          - '3'
          - '4'
          - '5'
          - '6'
          - '7'
          - '8'
          - '9'
        description: |-
          The type of lane which this sign affects.

          * `1` - Main lane
          * `2` - Fast lane
          * `3` - Turn right lane
          * `4` - Turn left lane
          * `5` - Auxiliary straight lane
          * `6` - Merge lane
          * `7` - Exit lane
          * `8` - Weaving lane
          * `9` - Public transport lane / taxi lane
          * `10` - Heavy vehicle lane
          * `11` - Reversible lane
          * `20` - Pedestrian and bike lane
          * `21` - Pedestrian lane
          * `22` - Bike lane
      - in: query
        name: lifecycle
        schema:
          type: integer
          enum:
          - 3
          - 4
          - 5
          - 6
        description: |-
          Lifecycle of the device, which describes the activity status of the device.

          * `3` - Active
          * `4` - Temporarily active
          * `5` - Temporarily inactive
          * `6` - Inactive
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: location
        schema:
          type: string
          format: EWKT
        description: Location (2D or 3D) to search devices
        examples:
          --: {}
          2DPolygonArea(Katajanokka):
            value: POLYGON ((25497733 6672927, 25497946 6673032, 25498653 6673034,
              25498987 6672708, 25498314 6672170, 25497651 6672629, 25497646 6672775,
              25497733 6672927))
            summary: 2D polygon area (Katajanokka)
      - in: query
        name: location_specifier
        schema:
          type: integer
          nullable: true
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
        description: |-
          Specifies where the sign is in relation to the road.

          * `1` - Right side
          * `2` - Left side
          * `3` - Above
          * `4` - Middle
          * `5` - Vertical
          * `6` - Outside
      - in: query
        name: missing_content
        schema:
          type: boolean
      - in: query
        name: mount_plan
        schema:
          type: string
          format: uuid
      - in: query
        name: mount_type
        schema:
          type: string
          format: uuid
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: order
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: owner
        schema:
          type: string
          format: uuid
      - in: query
        name: parent
        schema:
          type: string
          format: uuid
      - in: query
        name: plan
        schema:
          type: string
          format: uuid
      - in: query
        name: reflection_class
        schema:
          type: string
          nullable: true
          title: Reflection
          enum:
          - R1
          - R2
          - R3
        description: |-
          * `R1` - r1
          * `R2` - r2
          * `R3` - r3
      - in: query
        name: responsible_entity
        schema:
          type: string
          format: uuid
      - in: query
        name: road_name
        schema:
          type: string
      - in: query
        name: seasonal_validity_period_end
        schema:
          type: string
          format: date
      - in: query
        name: seasonal_validity_period_start
        schema:
          type: string
          format: date
      - in: query
        name: size
        schema:
          type: string
          nullable: true
          enum:
          - L
          - M
          - S
        description: |-
          * `S` - Small
          * `M` - Medium
          * `L` - Large
      - in: query
        name: source_id
        schema:
          type: string
      - in: query
        name: source_name
        schema:
          type: string
      - in: query
        name: surface_class
        schema:
          type: string
          nullable: true
          title: Surface
          enum:
          - CONVEX
          - FLAT
        description: |-
          * `CONVEX` - Convex
          * `FLAT` - Flat
      - in: query
        name: updated_at
        schema:
          type: string
          format: date-time
      - in: query
        name: updated_by
        schema:
          type: string
          format: uuid
      - in: query
        name: validity_period_end
        schema:
          type: string
          format: date
      - in: query
        name: validity_period_start
        schema:
          type: string
          format: date
      tags:
      - additional-sign-plans
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAdditionalSignPlanOutputList'
          description: ''
    post:
      operationId: additional_sign_plans_create
      summary: Create new AdditionalSign Plan
      tags:
      - additional-sign-plans
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdditionalSignPlanInputRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdditionalSignPlanInputRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AdditionalSignPlanInputRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdditionalSignPlanInput'
          description: ''
  /v1/additional-sign-plans/{id}/:
    get:
      operationId: additional_sign_plans_retrieve
      summary: Retrieve single AdditionalSign Plan
      parameters:
      - in: query
        name: geo_format
        schema:
          type: string
          enum:
          - default
          - geojson
        description: Determine whether the location should be in EWKT (default) or
          GeoJSON format.
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Additional Sign Plan.
        required: true
      tags:
      - additional-sign-plans
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdditionalSignPlanOutput'
          description: ''
    put:
      operationId: additional_sign_plans_update
      summary: Update single AdditionalSign Plan
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Additional Sign Plan.
        required: true
      tags:
      - additional-sign-plans
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdditionalSignPlanInputRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdditionalSignPlanInputRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AdditionalSignPlanInputRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdditionalSignPlanInput'
          description: ''
    patch:
      operationId: additional_sign_plans_partial_update
      summary: Partially update single AdditionalSign Plan
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Additional Sign Plan.
        required: true
      tags:
      - additional-sign-plans
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAdditionalSignPlanInputRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAdditionalSignPlanInputRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAdditionalSignPlanInputRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdditionalSignPlanInput'
          description: ''
    delete:
      operationId: additional_sign_plans_destroy
      summary: Soft-delete single AdditionalSign Plan
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Additional Sign Plan.
        required: true
      tags:
      - additional-sign-plans
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /v1/additional-sign-plans/{id}/files/:
    post:
      operationId: additional_sign_plans_files_create
      summary: Add one or more files to AdditionalSign Plan
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Additional Sign Plan.
        required: true
      tags:
      - additional-sign-plans
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MultiFileUploadSchemaRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdditionalSignPlanFileCreateResponse'
          description: ''
  /v1/additional-sign-plans/{id}/files/{file_pk}/:
    patch:
      operationId: additional_sign_plans_files_partial_update
      summary: Update single file from AdditionalSign Plan
      parameters:
      - in: path
        name: file_pk
        schema:
          type: string
          format: uuid
        description: File object UUID
        required: true
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Additional Sign Plan.
        required: true
      tags:
      - additional-sign-plans
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFileUploadSchemaRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdditionalSignPlanFile'
          description: ''
    delete:
      operationId: additional_sign_plans_files_destroy
      summary: Delete single file from AdditionalSign Plan
      parameters:
      - in: path
        name: file_pk
        schema:
          type: string
          format: uuid
        description: File object UUID
        required: true
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Additional Sign Plan.
        required: true
      tags:
      - additional-sign-plans
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /v1/additional-sign-reals/:
    get:
      operationId: additional_sign_reals_list
      summary: Retrieve all AdditionalSign Reals
      parameters:
      - in: query
        name: additional_information
        schema:
          type: string
      - in: query
        name: additional_sign_plan
        schema:
          type: string
          format: uuid
      - in: query
        name: attachment_url
        schema:
          type: string
      - in: query
        name: color
        schema:
          type: integer
          nullable: true
          enum:
          - 1
          - 2
        description: |-
          * `1` - Blue
          * `2` - Yellow
      - in: query
        name: condition
        schema:
          type: integer
          nullable: true
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
        description: |-
          Describes the condition of this device.

          * `1` - Very bad
          * `2` - Bad
          * `3` - Average
          * `4` - Good
          * `5` - Very good
      - in: query
        name: coverage_area
        schema:
          type: string
          format: uuid
      - in: query
        name: created_at
        schema:
          type: string
          format: date-time
      - in: query
        name: created_by
        schema:
          type: string
          format: uuid
      - in: query
        name: deleted_at
        schema:
          type: string
          format: date-time
      - in: query
        name: deleted_by
        schema:
          type: string
          format: uuid
      - in: query
        name: device_type
        schema:
          type: string
          format: uuid
      - in: query
        name: direction
        schema:
          type: integer
      - in: query
        name: geo_format
        schema:
          type: string
          enum:
          - default
          - geojson
        description: Determine whether the location should be in EWKT (default) or
          GeoJSON format.
      - in: query
        name: height
        schema:
          type: integer
      - in: query
        name: id
        schema:
          type: string
          format: uuid
      - in: query
        name: installation_date
        schema:
          type: string
          format: date
      - in: query
        name: installation_details
        schema:
          type: string
      - in: query
        name: installation_id
        schema:
          type: string
      - in: query
        name: installation_status
        schema:
          type: string
          nullable: true
          enum:
          - COVERED
          - FALLEN
          - IN_USE
          - MISSING
          - OTHER
        description: |-
          Describes this devices installation status.

          * `IN_USE` - In use
          * `COVERED` - Covered
          * `FALLEN` - Fallen
          * `MISSING` - Missing
          * `OTHER` - Other
      - in: query
        name: installed_by
        schema:
          type: string
      - in: query
        name: is_active
        schema:
          type: boolean
      - in: query
        name: lane_number
        schema:
          type: string
          nullable: true
          enum:
          - '11'
          - '21'
          - '31'
          - X2
          - X3
          - X4
          - X5
          - X6
          - X7
          - X8
          - X9
        description: |-
          Describes which lane of the road this sign affects.

          * `11` - Main lane
          * `21` - Main lane
          * `31` - Lane allowing traffic to both directions
          * `X2` - First left additional lane
          * `X3` - First right additional lane
          * `X4` - Second left additional lane
          * `X5` - Second right additional lane
          * `X6` - Third left additional lane
          * `X7` - Third right additional lane
          * `X8` - Fourth left additional lane
          * `X9` - Fourth right additional lane
      - in: query
        name: lane_type
        schema:
          type: string
          nullable: true
          enum:
          - '1'
          - '10'
          - '11'
          - '2'
          - '20'
          - '21'
          - '22'
          - '3'
          - '4'
          - '5'
          - '6'
          - '7'
          - '8'
          - '9'
        description: |-
          The type of lane which this sign affects.

          * `1` - Main lane
          * `2` - Fast lane
          * `3` - Turn right lane
          * `4` - Turn left lane
          * `5` - Auxiliary straight lane
          * `6` - Merge lane
          * `7` - Exit lane
          * `8` - Weaving lane
          * `9` - Public transport lane / taxi lane
          * `10` - Heavy vehicle lane
          * `11` - Reversible lane
          * `20` - Pedestrian and bike lane
          * `21` - Pedestrian lane
          * `22` - Bike lane
      - in: query
        name: legacy_code
        schema:
          type: string
      - in: query
        name: lifecycle
        schema:
          type: integer
          enum:
          - 3
          - 4
          - 5
          - 6
        description: |-
          Lifecycle of the device, which describes the activity status of the device.

          * `3` - Active
          * `4` - Temporarily active
          * `5` - Temporarily inactive
          * `6` - Inactive
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: location
        schema:
          type: string
          format: EWKT
        description: Location (2D or 3D) to search devices
        examples:
          --: {}
          2DPolygonArea(Katajanokka):
            value: POLYGON ((25497733 6672927, 25497946 6673032, 25498653 6673034,
              25498987 6672708, 25498314 6672170, 25497651 6672629, 25497646 6672775,
              25497733 6672927))
            summary: 2D polygon area (Katajanokka)
      - in: query
        name: location_specifier
        schema:
          type: integer
          nullable: true
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
        description: |-
          Specifies where the sign is in relation to the road.

          * `1` - Right side
          * `2` - Left side
          * `3` - Above
          * `4` - Middle
          * `5` - Vertical
          * `6` - Outside
      - in: query
        name: manufacturer
        schema:
          type: string
      - in: query
        name: missing_content
        schema:
          type: boolean
      - in: query
        name: mount_real
        schema:
          type: string
          format: uuid
      - in: query
        name: mount_type
        schema:
          type: string
          format: uuid
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: operation
        schema:
          type: string
      - in: query
        name: order
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: owner
        schema:
          type: string
          format: uuid
      - in: query
        name: parent
        schema:
          type: string
          format: uuid
      - in: query
        name: permit_decision_id
        schema:
          type: string
      - in: query
        name: reflection_class
        schema:
          type: string
          nullable: true
          title: Reflection
          enum:
          - R1
          - R2
          - R3
        description: |-
          * `R1` - r1
          * `R2` - r2
          * `R3` - r3
      - in: query
        name: responsible_entity
        schema:
          type: string
          format: uuid
      - in: query
        name: rfid
        schema:
          type: string
      - in: query
        name: road_name
        schema:
          type: string
      - in: query
        name: scanned_at
        schema:
          type: string
          format: date-time
      - in: query
        name: seasonal_validity_period_end
        schema:
          type: string
          format: date
      - in: query
        name: seasonal_validity_period_start
        schema:
          type: string
          format: date
      - in: query
        name: size
        schema:
          type: string
          nullable: true
          enum:
          - L
          - M
          - S
        description: |-
          * `S` - Small
          * `M` - Medium
          * `L` - Large
      - in: query
        name: source_id
        schema:
          type: string
      - in: query
        name: source_name
        schema:
          type: string
      - in: query
        name: surface_class
        schema:
          type: string
          nullable: true
          title: Surface
          enum:
          - CONVEX
          - FLAT
        description: |-
          * `CONVEX` - Convex
          * `FLAT` - Flat
      - in: query
        name: updated_at
        schema:
          type: string
          format: date-time
      - in: query
        name: updated_by
        schema:
          type: string
          format: uuid
      - in: query
        name: validity_period_end
        schema:
          type: string
          format: date
      - in: query
        name: validity_period_start
        schema:
          type: string
          format: date
      tags:
      - additional-sign-reals
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAdditionalSignRealList'
          description: ''
    post:
      operationId: additional_sign_reals_create
      summary: Create new AdditionalSign Real
      tags:
      - additional-sign-reals
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdditionalSignRealRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdditionalSignRealRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AdditionalSignRealRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdditionalSignReal'
          description: ''
  /v1/additional-sign-reals/{additional_sign_real_pk}/operations/:
    get:
      operationId: additional_sign_reals_operations_list
      summary: Retrieve all operations of an additional sign real
      parameters:
      - in: query
        name: additional_sign_real
        schema:
          type: string
          format: uuid
      - in: path
        name: additional_sign_real_pk
        schema:
          type: string
          format: uuid
        required: true
      - in: query
        name: created_at
        schema:
          type: string
          format: date-time
      - in: query
        name: created_by
        schema:
          type: string
          format: uuid
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: operation_date
        schema:
          type: string
          format: date
      - in: query
        name: operation_type
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: quality_requirements_fulfilled
        schema:
          type: boolean
      - in: query
        name: straightness_value
        schema:
          type: number
          format: float
      - in: query
        name: updated_at
        schema:
          type: string
          format: date-time
      - in: query
        name: updated_by
        schema:
          type: string
          format: uuid
      tags:
      - additional-sign-reals
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAdditionalSignRealOperationList'
          description: ''
    post:
      operationId: additional_sign_reals_operations_create
      summary: Add a new operation to an additional sign real
      parameters:
      - in: path
        name: additional_sign_real_pk
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - additional-sign-reals
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdditionalSignRealOperationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdditionalSignRealOperationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AdditionalSignRealOperationRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdditionalSignRealOperation'
          description: ''
  /v1/additional-sign-reals/{additional_sign_real_pk}/operations/{id}/:
    get:
      operationId: additional_sign_reals_operations_retrieve
      summary: Retrieve an operation of an additional sign real
      parameters:
      - in: path
        name: additional_sign_real_pk
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Additional sign real
          operation.
        required: true
      tags:
      - additional-sign-reals
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdditionalSignRealOperation'
          description: ''
    put:
      operationId: additional_sign_reals_operations_update
      summary: Update an operation of an additional sign real
      parameters:
      - in: path
        name: additional_sign_real_pk
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Additional sign real
          operation.
        required: true
      tags:
      - additional-sign-reals
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdditionalSignRealOperationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdditionalSignRealOperationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AdditionalSignRealOperationRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdditionalSignRealOperation'
          description: ''
    patch:
      operationId: additional_sign_reals_operations_partial_update
      summary: Partially update an operation of an additional sign real
      parameters:
      - in: path
        name: additional_sign_real_pk
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Additional sign real
          operation.
        required: true
      tags:
      - additional-sign-reals
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAdditionalSignRealOperationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAdditionalSignRealOperationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAdditionalSignRealOperationRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdditionalSignRealOperation'
          description: ''
    delete:
      operationId: additional_sign_reals_operations_destroy
      summary: Delete an operation of an additional sign real
      parameters:
      - in: path
        name: additional_sign_real_pk
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Additional sign real
          operation.
        required: true
      tags:
      - additional-sign-reals
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /v1/additional-sign-reals/{id}/:
    get:
      operationId: additional_sign_reals_retrieve
      summary: Retrieve single AdditionalSign Real
      parameters:
      - in: query
        name: geo_format
        schema:
          type: string
          enum:
          - default
          - geojson
        description: Determine whether the location should be in EWKT (default) or
          GeoJSON format.
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Additional Sign Real.
        required: true
      tags:
      - additional-sign-reals
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdditionalSignReal'
          description: ''
    put:
      operationId: additional_sign_reals_update
      summary: Update single AdditionalSign Real
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Additional Sign Real.
        required: true
      tags:
      - additional-sign-reals
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdditionalSignRealRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdditionalSignRealRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AdditionalSignRealRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdditionalSignReal'
          description: ''
    patch:
      operationId: additional_sign_reals_partial_update
      summary: Partially update single AdditionalSign Real
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Additional Sign Real.
        required: true
      tags:
      - additional-sign-reals
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAdditionalSignRealRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAdditionalSignRealRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAdditionalSignRealRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdditionalSignReal'
          description: ''
    delete:
      operationId: additional_sign_reals_destroy
      summary: Soft-delete single AdditionalSign Real
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Additional Sign Real.
        required: true
      tags:
      - additional-sign-reals
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /v1/additional-sign-reals/{id}/files/:
    post:
      operationId: additional_sign_reals_files_create
      summary: Add one or more files to AdditionalSign Real
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Additional Sign Real.
        required: true
      tags:
      - additional-sign-reals
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MultiFileUploadSchemaRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdditionalSignRealFileCreateResponse'
          description: ''
  /v1/additional-sign-reals/{id}/files/{file_pk}/:
    patch:
      operationId: additional_sign_reals_files_partial_update
      summary: Update single file from AdditionalSign Real
      parameters:
      - in: path
        name: file_pk
        schema:
          type: string
          format: uuid
        description: File object UUID
        required: true
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Additional Sign Real.
        required: true
      tags:
      - additional-sign-reals
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFileUploadSchemaRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdditionalSignRealFile'
          description: ''
    delete:
      operationId: additional_sign_reals_files_destroy
      summary: Delete single file from AdditionalSign Real
      parameters:
      - in: path
        name: file_pk
        schema:
          type: string
          format: uuid
        description: File object UUID
        required: true
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Additional Sign Real.
        required: true
      tags:
      - additional-sign-reals
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /v1/barrier-plans/:
    get:
      operationId: barrier_plans_list
      summary: Retrieve all Barrier Plans
      parameters:
      - in: query
        name: connection_type
        schema:
          type: integer
          enum:
          - 1
          - 2
        description: |-
          Describes if the barrier is open or closed.

          * `1` - Closed
          * `2` - Open out
      - in: query
        name: count
        schema:
          type: integer
      - in: query
        name: created_at
        schema:
          type: string
          format: date-time
      - in: query
        name: created_by
        schema:
          type: string
          format: uuid
      - in: query
        name: deleted_at
        schema:
          type: string
          format: date-time
      - in: query
        name: deleted_by
        schema:
          type: string
          format: uuid
      - in: query
        name: device_type
        schema:
          type: string
          format: uuid
      - in: query
        name: geo_format
        schema:
          type: string
          enum:
          - default
          - geojson
        description: Determine whether the location should be in EWKT (default) or
          GeoJSON format.
      - in: query
        name: id
        schema:
          type: string
          format: uuid
      - in: query
        name: is_active
        schema:
          type: boolean
      - in: query
        name: is_electric
        schema:
          type: boolean
      - in: query
        name: is_replaced
        schema:
          type: string
          enum:
          - All
          - 'false'
          - 'true'
        description: |-
          Plan replacement

          * `All` - ALL
          * `true` - true
          * `false` - false
      - in: query
        name: lane_number
        schema:
          type: string
          nullable: true
          enum:
          - '11'
          - '21'
          - '31'
          - X2
          - X3
          - X4
          - X5
          - X6
          - X7
          - X8
          - X9
        description: |-
          Describes which lane of the road this barrier affects.

          * `11` - Main lane
          * `21` - Main lane
          * `31` - Lane allowing traffic to both directions
          * `X2` - First left additional lane
          * `X3` - First right additional lane
          * `X4` - Second left additional lane
          * `X5` - Second right additional lane
          * `X6` - Third left additional lane
          * `X7` - Third right additional lane
          * `X8` - Fourth left additional lane
          * `X9` - Fourth right additional lane
      - in: query
        name: lane_type
        schema:
          type: string
          nullable: true
          enum:
          - '1'
          - '10'
          - '11'
          - '2'
          - '20'
          - '21'
          - '22'
          - '3'
          - '4'
          - '5'
          - '6'
          - '7'
          - '8'
          - '9'
        description: |-
          The type of lane which this barrier affects.

          * `1` - Main lane
          * `2` - Fast lane
          * `3` - Turn right lane
          * `4` - Turn left lane
          * `5` - Auxiliary straight lane
          * `6` - Merge lane
          * `7` - Exit lane
          * `8` - Weaving lane
          * `9` - Public transport lane / taxi lane
          * `10` - Heavy vehicle lane
          * `11` - Reversible lane
          * `20` - Pedestrian and bike lane
          * `21` - Pedestrian lane
          * `22` - Bike lane
      - in: query
        name: length
        schema:
          type: integer
      - in: query
        name: lifecycle
        schema:
          type: integer
          enum:
          - 3
          - 4
          - 5
          - 6
        description: |-
          Lifecycle of the device, which describes the activity status of the device.

          * `3` - Active
          * `4` - Temporarily active
          * `5` - Temporarily inactive
          * `6` - Inactive
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: location
        schema:
          type: string
          format: EWKT
        description: Location (2D or 3D) to search devices
        examples:
          --: {}
          2DPolygonArea(Katajanokka):
            value: POLYGON ((25497733 6672927, 25497946 6673032, 25498653 6673034,
              25498987 6672708, 25498314 6672170, 25497651 6672629, 25497646 6672775,
              25497733 6672927))
            summary: 2D polygon area (Katajanokka)
      - in: query
        name: location_specifier
        schema:
          type: integer
          nullable: true
          enum:
          - 1
          - 2
          - 3
        description: |-
          Specifies where the barrier is in relation to the road.

          * `1` - Middle of road or lane
          * `2` - Right of road or lane
          * `3` - Left of road or lane
      - in: query
        name: material
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: owner
        schema:
          type: string
          format: uuid
      - in: query
        name: plan
        schema:
          type: string
          format: uuid
      - in: query
        name: reflective
        schema:
          type: string
          nullable: true
          enum:
          - 'NO'
          - RED_YELLOW
          - 'YES'
        description: |-
          * `YES` - Yes
          * `NO` - No
          * `RED_YELLOW` - Red-yellow
      - in: query
        name: responsible_entity
        schema:
          type: string
          format: uuid
      - in: query
        name: road_name
        schema:
          type: string
      - in: query
        name: source_id
        schema:
          type: string
      - in: query
        name: source_name
        schema:
          type: string
      - in: query
        name: txt
        schema:
          type: string
      - in: query
        name: updated_at
        schema:
          type: string
          format: date-time
      - in: query
        name: updated_by
        schema:
          type: string
          format: uuid
      - in: query
        name: validity_period_end
        schema:
          type: string
          format: date
      - in: query
        name: validity_period_start
        schema:
          type: string
          format: date
      tags:
      - barrier-plans
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBarrierPlanOutputList'
          description: ''
    post:
      operationId: barrier_plans_create
      summary: Create new Barrier Plan
      tags:
      - barrier-plans
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BarrierPlanInputRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BarrierPlanInputRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BarrierPlanInputRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BarrierPlanInput'
          description: ''
  /v1/barrier-plans/{id}/:
    get:
      operationId: barrier_plans_retrieve
      summary: Retrieve single Barrier Plan
      parameters:
      - in: query
        name: geo_format
        schema:
          type: string
          enum:
          - default
          - geojson
        description: Determine whether the location should be in EWKT (default) or
          GeoJSON format.
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Barrier Plan.
        required: true
      tags:
      - barrier-plans
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BarrierPlanOutput'
          description: ''
    put:
      operationId: barrier_plans_update
      summary: Update single Barrier Plan
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Barrier Plan.
        required: true
      tags:
      - barrier-plans
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BarrierPlanInputRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BarrierPlanInputRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BarrierPlanInputRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BarrierPlanInput'
          description: ''
    patch:
      operationId: barrier_plans_partial_update
      summary: Partially update single Barrier Plan
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Barrier Plan.
        required: true
      tags:
      - barrier-plans
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBarrierPlanInputRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBarrierPlanInputRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBarrierPlanInputRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BarrierPlanInput'
          description: ''
    delete:
      operationId: barrier_plans_destroy
      summary: Soft-delete single Barrier Plan
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Barrier Plan.
        required: true
      tags:
      - barrier-plans
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /v1/barrier-plans/{id}/files/:
    post:
      operationId: barrier_plans_files_create
      summary: Add one or more files to Barrier Plan
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Barrier Plan.
        required: true
      tags:
      - barrier-plans
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MultiFileUploadSchemaRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BarrierPlanFileCreateResponse'
          description: ''
  /v1/barrier-plans/{id}/files/{file_pk}/:
    patch:
      operationId: barrier_plans_files_partial_update
      summary: Update single file from Barrier Plan
      parameters:
      - in: path
        name: file_pk
        schema:
          type: string
          format: uuid
        description: File object UUID
        required: true
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Barrier Plan.
        required: true
      tags:
      - barrier-plans
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFileUploadSchemaRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BarrierPlanFile'
          description: ''
    delete:
      operationId: barrier_plans_files_destroy
      summary: Delete single file from Barrier Plan
      parameters:
      - in: path
        name: file_pk
        schema:
          type: string
          format: uuid
        description: File object UUID
        required: true
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Barrier Plan.
        required: true
      tags:
      - barrier-plans
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /v1/barrier-reals/:
    get:
      operationId: barrier_reals_list
      summary: Retrieve all Barrier Reals
      parameters:
      - in: query
        name: barrier_plan
        schema:
          type: string
          format: uuid
      - in: query
        name: condition
        schema:
          type: integer
          nullable: true
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
        description: |-
          Describes the condition of this device.

          * `1` - Very bad
          * `2` - Bad
          * `3` - Average
          * `4` - Good
          * `5` - Very good
      - in: query
        name: connection_type
        schema:
          type: integer
          enum:
          - 1
          - 2
        description: |-
          Describes if the barrier is open or closed.

          * `1` - Closed
          * `2` - Open out
      - in: query
        name: count
        schema:
          type: integer
      - in: query
        name: created_at
        schema:
          type: string
          format: date-time
      - in: query
        name: created_by
        schema:
          type: string
          format: uuid
      - in: query
        name: deleted_at
        schema:
          type: string
          format: date-time
      - in: query
        name: deleted_by
        schema:
          type: string
          format: uuid
      - in: query
        name: device_type
        schema:
          type: string
          format: uuid
      - in: query
        name: geo_format
        schema:
          type: string
          enum:
          - default
          - geojson
        description: Determine whether the location should be in EWKT (default) or
          GeoJSON format.
      - in: query
        name: id
        schema:
          type: string
          format: uuid
      - in: query
        name: installation_date
        schema:
          type: string
          format: date
      - in: query
        name: installation_status
        schema:
          type: string
          nullable: true
          enum:
          - COVERED
          - FALLEN
          - IN_USE
          - MISSING
          - OTHER
        description: |-
          Describes this devices installation status.

          * `IN_USE` - In use
          * `COVERED` - Covered
          * `FALLEN` - Fallen
          * `MISSING` - Missing
          * `OTHER` - Other
      - in: query
        name: is_active
        schema:
          type: boolean
      - in: query
        name: is_electric
        schema:
          type: boolean
      - in: query
        name: lane_number
        schema:
          type: string
          nullable: true
          enum:
          - '11'
          - '21'
          - '31'
          - X2
          - X3
          - X4
          - X5
          - X6
          - X7
          - X8
          - X9
        description: |-
          Describes which lane of the road this barrier affects.

          * `11` - Main lane
          * `21` - Main lane
          * `31` - Lane allowing traffic to both directions
          * `X2` - First left additional lane
          * `X3` - First right additional lane
          * `X4` - Second left additional lane
          * `X5` - Second right additional lane
          * `X6` - Third left additional lane
          * `X7` - Third right additional lane
          * `X8` - Fourth left additional lane
          * `X9` - Fourth right additional lane
      - in: query
        name: lane_type
        schema:
          type: string
          nullable: true
          enum:
          - '1'
          - '10'
          - '11'
          - '2'
          - '20'
          - '21'
          - '22'
          - '3'
          - '4'
          - '5'
          - '6'
          - '7'
          - '8'
          - '9'
        description: |-
          The type of lane which this barrier affects.

          * `1` - Main lane
          * `2` - Fast lane
          * `3` - Turn right lane
          * `4` - Turn left lane
          * `5` - Auxiliary straight lane
          * `6` - Merge lane
          * `7` - Exit lane
          * `8` - Weaving lane
          * `9` - Public transport lane / taxi lane
          * `10` - Heavy vehicle lane
          * `11` - Reversible lane
          * `20` - Pedestrian and bike lane
          * `21` - Pedestrian lane
          * `22` - Bike lane
      - in: query
        name: length
        schema:
          type: integer
      - in: query
        name: lifecycle
        schema:
          type: integer
          enum:
          - 3
          - 4
          - 5
          - 6
        description: |-
          Lifecycle of the device, which describes the activity status of the device.

          * `3` - Active
          * `4` - Temporarily active
          * `5` - Temporarily inactive
          * `6` - Inactive
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: location
        schema:
          type: string
          format: EWKT
        description: Location (2D or 3D) to search devices
        examples:
          --: {}
          2DPolygonArea(Katajanokka):
            value: POLYGON ((25497733 6672927, 25497946 6673032, 25498653 6673034,
              25498987 6672708, 25498314 6672170, 25497651 6672629, 25497646 6672775,
              25497733 6672927))
            summary: 2D polygon area (Katajanokka)
      - in: query
        name: location_specifier
        schema:
          type: integer
          nullable: true
          enum:
          - 1
          - 2
          - 3
        description: |-
          Specifies where the barrier is in relation to the road.

          * `1` - Middle of road or lane
          * `2` - Right of road or lane
          * `3` - Left of road or lane
      - in: query
        name: material
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: owner
        schema:
          type: string
          format: uuid
      - in: query
        name: reflective
        schema:
          type: string
          nullable: true
          enum:
          - 'NO'
          - RED_YELLOW
          - 'YES'
        description: |-
          * `YES` - Yes
          * `NO` - No
          * `RED_YELLOW` - Red-yellow
      - in: query
        name: responsible_entity
        schema:
          type: string
          format: uuid
      - in: query
        name: road_name
        schema:
          type: string
      - in: query
        name: source_id
        schema:
          type: string
      - in: query
        name: source_name
        schema:
          type: string
      - in: query
        name: txt
        schema:
          type: string
      - in: query
        name: updated_at
        schema:
          type: string
          format: date-time
      - in: query
        name: updated_by
        schema:
          type: string
          format: uuid
      - in: query
        name: validity_period_end
        schema:
          type: string
          format: date
      - in: query
        name: validity_period_start
        schema:
          type: string
          format: date
      tags:
      - barrier-reals
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBarrierRealList'
          description: ''
    post:
      operationId: barrier_reals_create
      summary: Create new Barrier Real
      tags:
      - barrier-reals
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BarrierRealRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BarrierRealRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BarrierRealRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BarrierReal'
          description: ''
  /v1/barrier-reals/{barrier_real_pk}/operations/:
    get:
      operationId: barrier_reals_operations_list
      summary: Retrieve all operations of a barrier real
      parameters:
      - in: query
        name: barrier_real
        schema:
          type: string
          format: uuid
      - in: path
        name: barrier_real_pk
        schema:
          type: string
          format: uuid
        required: true
      - in: query
        name: created_at
        schema:
          type: string
          format: date-time
      - in: query
        name: created_by
        schema:
          type: string
          format: uuid
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: operation_date
        schema:
          type: string
          format: date
      - in: query
        name: operation_type
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: quality_requirements_fulfilled
        schema:
          type: boolean
      - in: query
        name: straightness_value
        schema:
          type: number
          format: float
      - in: query
        name: updated_at
        schema:
          type: string
          format: date-time
      - in: query
        name: updated_by
        schema:
          type: string
          format: uuid
      tags:
      - barrier-reals
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBarrierRealOperationList'
          description: ''
    post:
      operationId: barrier_reals_operations_create
      summary: Add a new operation to a barrier real
      parameters:
      - in: path
        name: barrier_real_pk
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - barrier-reals
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BarrierRealOperationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BarrierRealOperationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BarrierRealOperationRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BarrierRealOperation'
          description: ''
  /v1/barrier-reals/{barrier_real_pk}/operations/{id}/:
    get:
      operationId: barrier_reals_operations_retrieve
      summary: Retrieve an operation of a barrier real
      parameters:
      - in: path
        name: barrier_real_pk
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Barrier real operation.
        required: true
      tags:
      - barrier-reals
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BarrierRealOperation'
          description: ''
    put:
      operationId: barrier_reals_operations_update
      summary: Update an operation of a barrier real
      parameters:
      - in: path
        name: barrier_real_pk
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Barrier real operation.
        required: true
      tags:
      - barrier-reals
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BarrierRealOperationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BarrierRealOperationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BarrierRealOperationRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BarrierRealOperation'
          description: ''
    patch:
      operationId: barrier_reals_operations_partial_update
      summary: Partially update an operation of a barrier real
      parameters:
      - in: path
        name: barrier_real_pk
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Barrier real operation.
        required: true
      tags:
      - barrier-reals
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBarrierRealOperationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBarrierRealOperationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBarrierRealOperationRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BarrierRealOperation'
          description: ''
    delete:
      operationId: barrier_reals_operations_destroy
      summary: Delete an operation of a barrier real
      parameters:
      - in: path
        name: barrier_real_pk
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Barrier real operation.
        required: true
      tags:
      - barrier-reals
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /v1/barrier-reals/{id}/:
    get:
      operationId: barrier_reals_retrieve
      summary: Retrieve single Barrier Real
      parameters:
      - in: query
        name: geo_format
        schema:
          type: string
          enum:
          - default
          - geojson
        description: Determine whether the location should be in EWKT (default) or
          GeoJSON format.
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Barrier real.
        required: true
      tags:
      - barrier-reals
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BarrierReal'
          description: ''
    put:
      operationId: barrier_reals_update
      summary: Update single Barrier Real
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Barrier real.
        required: true
      tags:
      - barrier-reals
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BarrierRealRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BarrierRealRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BarrierRealRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BarrierReal'
          description: ''
    patch:
      operationId: barrier_reals_partial_update
      summary: Partially update single Barrier Real
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Barrier real.
        required: true
      tags:
      - barrier-reals
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBarrierRealRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBarrierRealRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBarrierRealRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BarrierReal'
          description: ''
    delete:
      operationId: barrier_reals_destroy
      summary: Soft-delete single Barrier Real
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Barrier real.
        required: true
      tags:
      - barrier-reals
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /v1/barrier-reals/{id}/files/:
    post:
      operationId: barrier_reals_files_create
      summary: Add one or more files to Barrier Real
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Barrier real.
        required: true
      tags:
      - barrier-reals
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MultiFileUploadSchemaRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BarrierRealFileCreateResponse'
          description: ''
  /v1/barrier-reals/{id}/files/{file_pk}/:
    patch:
      operationId: barrier_reals_files_partial_update
      summary: Update single file from Barrier Real
      parameters:
      - in: path
        name: file_pk
        schema:
          type: string
          format: uuid
        description: File object UUID
        required: true
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Barrier real.
        required: true
      tags:
      - barrier-reals
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFileUploadSchemaRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BarrierRealFile'
          description: ''
    delete:
      operationId: barrier_reals_files_destroy
      summary: Delete single file from Barrier Real
      parameters:
      - in: path
        name: file_pk
        schema:
          type: string
          format: uuid
        description: File object UUID
        required: true
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Barrier real.
        required: true
      tags:
      - barrier-reals
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /v1/city-furniture-colors/:
    get:
      operationId: city_furniture_colors_list
      summary: Retrieve all CityFurnitureColors
      parameters:
      - in: query
        name: id
        schema:
          type: string
          format: uuid
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: rgb
        schema:
          type: string
      tags:
      - city-furniture-colors
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCityFurnitureColorList'
          description: ''
    post:
      operationId: city_furniture_colors_create
      summary: Create new CityFurnitureColor
      tags:
      - city-furniture-colors
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CityFurnitureColorRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CityFurnitureColorRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CityFurnitureColorRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CityFurnitureColor'
          description: ''
  /v1/city-furniture-colors/{id}/:
    get:
      operationId: city_furniture_colors_retrieve
      summary: Retrieve single CityFurnitureColor
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this City Furniture Color.
        required: true
      tags:
      - city-furniture-colors
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CityFurnitureColor'
          description: ''
    put:
      operationId: city_furniture_colors_update
      summary: Update single CityFurnitureColor
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this City Furniture Color.
        required: true
      tags:
      - city-furniture-colors
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CityFurnitureColorRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CityFurnitureColorRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CityFurnitureColorRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CityFurnitureColor'
          description: ''
    patch:
      operationId: city_furniture_colors_partial_update
      summary: Partially update single CityFurnitureColor
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this City Furniture Color.
        required: true
      tags:
      - city-furniture-colors
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCityFurnitureColorRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCityFurnitureColorRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCityFurnitureColorRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CityFurnitureColor'
          description: ''
    delete:
      operationId: city_furniture_colors_destroy
      summary: Soft-delete single CityFurnitureColor
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this City Furniture Color.
        required: true
      tags:
      - city-furniture-colors
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /v1/city-furniture-device-types/:
    get:
      operationId: city_furniture_device_types_list
      summary: Retrieve all CityFurnitureDeviceTypes
      parameters:
      - in: query
        name: class_type
        schema:
          type: integer
          title: City Furniture Class type
          enum:
          - 1000
          - 1010
          - 1020
          - 1030
        description: |-
          OGC CityGML City Furniture Class

          * `1000` - Traffic
          * `1010` - Communication
          * `1020` - Security
          * `1030` - Others
      - in: query
        name: code
        schema:
          type: string
      - in: query
        name: description_en
        schema:
          type: string
      - in: query
        name: description_fi
        schema:
          type: string
      - in: query
        name: description_sw
        schema:
          type: string
      - in: query
        name: function_type
        schema:
          type: integer
          title: City Furniture Function or Usage type
          enum:
          - 1000
          - 1010
          - 1020
          - 1030
          - 1040
          - 1050
          - 1060
          - 1070
          - 1080
          - 1090
          - 1100
          - 1110
          - 1120
          - 1130
          - 1140
          - 1150
          - 1160
          - 1170
          - 1180
          - 1190
          - 1200
          - 1210
          - 1220
          - 1230
          - 1240
          - 1250
          - 1260
          - 1270
          - 1280
          - 1290
          - 1300
          - 1310
          - 1320
          - 1330
          - 1340
          - 1350
          - 1360
          - 1370
          - 1380
          - 1390
          - 1400
          - 1410
          - 1420
          - 1430
          - 1440
          - 1450
          - 1470
          - 1480
          - 1490
          - 1500
          - 1510
          - 1520
          - 1530
          - 1540
        description: |-
          OGC CityGML City Furniture Function or Usage type

          * `1000` - Communication fixture
          * `1010` - Telephone box
          * `1020` - Postbox
          * `1030` - Emergency call fixture
          * `1040` - Fire detector
          * `1050` - Police call post
          * `1060` - Switching unit
          * `1070` - Road sign
          * `1080` - Traffic light
          * `1090` - Free-standing sign
          * `1100` - Free-standing warning sign
          * `1110` - Bus stop
          * `1120` - Milestone
          * `1130` - Rail level crossing
          * `1140` - Gate
          * `1150` - Streetlamp, latern or candelabra
          * `1160` - Column
          * `1170` - Lamp post
          * `1180` - Flagpole
          * `1190` - Street sink box
          * `1200` - Rubbish bin
          * `1210` - Clock
          * `1220` - Directional spot light
          * `1230` - Floodlight mast
          * `1240` - Windmill
          * `1250` - Solar cell
          * `1260` - Water wheel
          * `1270` - Pole
          * `1280` - Radio mast
          * `1290` - Aerial
          * `1300` - Radio telescope
          * `1310` - Chimney
          * `1320` - Marker
          * `1330` - Hydrant
          * `1340` - Upper corridor fire-hydrant
          * `1350` - Lower floor panel fire-hydrant
          * `1360` - Slidegate valve cap
          * `1370` - Entrance shaft
          * `1380` - Converter
          * `1390` - Stair
          * `1400` - Outside staircase
          * `1410` - Escalator
          * `1420` - Ramp
          * `1430` - Patio
          * `1440` - Fence
          * `1450` - Memorial/monument
          * `1470` - Wayside shrine
          * `1480` - Crossroads
          * `1490` - Cross on the summit of a mountain
          * `1500` - Fountain
          * `1510` - Block mark
          * `1520` - Boundary post
          * `1530` - Bench
          * `1540` - Others
      - in: query
        name: icon
        schema:
          type: string
      - in: query
        name: id
        schema:
          type: string
          format: uuid
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: size
        schema:
          type: string
      - in: query
        name: target_model
        schema:
          type: string
          nullable: true
          title: Target data model
          enum:
          - furniture_signpost
        description: |-
          City Furniture model that this Device Type is usable for.

          * `furniture_signpost` - Furniture signpost
      tags:
      - city-furniture-device-types
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCityFurnitureDeviceTypeList'
          description: ''
    post:
      operationId: city_furniture_device_types_create
      summary: Create new CityFurnitureDeviceType
      tags:
      - city-furniture-device-types
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CityFurnitureDeviceTypeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CityFurnitureDeviceTypeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CityFurnitureDeviceTypeRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CityFurnitureDeviceType'
          description: ''
  /v1/city-furniture-device-types/{id}/:
    get:
      operationId: city_furniture_device_types_retrieve
      summary: Retrieve single CityFurnitureDeviceType
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this City Furniture Device Type.
        required: true
      tags:
      - city-furniture-device-types
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CityFurnitureDeviceType'
          description: ''
    put:
      operationId: city_furniture_device_types_update
      summary: Update single CityFurnitureDeviceType
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this City Furniture Device Type.
        required: true
      tags:
      - city-furniture-device-types
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CityFurnitureDeviceTypeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CityFurnitureDeviceTypeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CityFurnitureDeviceTypeRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CityFurnitureDeviceType'
          description: ''
    patch:
      operationId: city_furniture_device_types_partial_update
      summary: Partially update single CityFurnitureDeviceType
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this City Furniture Device Type.
        required: true
      tags:
      - city-furniture-device-types
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCityFurnitureDeviceTypeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCityFurnitureDeviceTypeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCityFurnitureDeviceTypeRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CityFurnitureDeviceType'
          description: ''
    delete:
      operationId: city_furniture_device_types_destroy
      summary: Soft-delete single CityFurnitureDeviceType
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this City Furniture Device Type.
        required: true
      tags:
      - city-furniture-device-types
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /v1/city-furniture-targets/:
    get:
      operationId: city_furniture_targets_list
      summary: Retrieve all CityFurnitureTargets
      parameters:
      - in: query
        name: description
        schema:
          type: string
      - in: query
        name: id
        schema:
          type: string
          format: uuid
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name_en
        schema:
          type: string
      - in: query
        name: name_fi
        schema:
          type: string
      - in: query
        name: name_sw
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: source_id
        schema:
          type: string
      - in: query
        name: source_name
        schema:
          type: string
      tags:
      - city-furniture-targets
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCityFurnitureTargetList'
          description: ''
    post:
      operationId: city_furniture_targets_create
      summary: Create new CityFurnitureTarget
      tags:
      - city-furniture-targets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CityFurnitureTargetRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CityFurnitureTargetRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CityFurnitureTargetRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CityFurnitureTarget'
          description: ''
  /v1/city-furniture-targets/{id}/:
    get:
      operationId: city_furniture_targets_retrieve
      summary: Retrieve single CityFurnitureTarget
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this City Furniture Target.
        required: true
      tags:
      - city-furniture-targets
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CityFurnitureTarget'
          description: ''
    put:
      operationId: city_furniture_targets_update
      summary: Update single CityFurnitureTarget
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this City Furniture Target.
        required: true
      tags:
      - city-furniture-targets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CityFurnitureTargetRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CityFurnitureTargetRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CityFurnitureTargetRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CityFurnitureTarget'
          description: ''
    patch:
      operationId: city_furniture_targets_partial_update
      summary: Partially update single CityFurnitureTarget
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this City Furniture Target.
        required: true
      tags:
      - city-furniture-targets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCityFurnitureTargetRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCityFurnitureTargetRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCityFurnitureTargetRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CityFurnitureTarget'
          description: ''
    delete:
      operationId: city_furniture_targets_destroy
      summary: Soft-delete single CityFurnitureTarget
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this City Furniture Target.
        required: true
      tags:
      - city-furniture-targets
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /v1/furniture-signpost-plans/:
    get:
      operationId: furniture_signpost_plans_list
      summary: Retrieve all FurnitureSignpost Plans
      parameters:
      - in: query
        name: additional_material_url
        schema:
          type: string
      - in: query
        name: arrow_direction
        schema:
          type: integer
          nullable: true
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
        description: |-
          Direction of the arrow on this device in relation to the sign.

          * `1` - Up
          * `2` - Down
          * `3` - Left
          * `4` - Right
          * `5` - Top right
          * `6` - Bottom right
          * `7` - Top left
          * `8` - Bottom left
      - in: query
        name: color
        schema:
          type: string
          format: uuid
      - in: query
        name: content_responsible_entity
        schema:
          type: string
      - in: query
        name: created_at
        schema:
          type: string
          format: date-time
      - in: query
        name: created_by
        schema:
          type: string
          format: uuid
      - in: query
        name: deleted_at
        schema:
          type: string
          format: date-time
      - in: query
        name: deleted_by
        schema:
          type: string
          format: uuid
      - in: query
        name: device_type
        schema:
          type: string
          format: uuid
      - in: query
        name: direction
        schema:
          type: integer
      - in: query
        name: geo_format
        schema:
          type: string
          enum:
          - default
          - geojson
        description: Determine whether the location should be in EWKT (default) or
          GeoJSON format.
      - in: query
        name: height
        schema:
          type: number
      - in: query
        name: id
        schema:
          type: string
          format: uuid
      - in: query
        name: is_active
        schema:
          type: boolean
      - in: query
        name: lifecycle
        schema:
          type: integer
          enum:
          - 3
          - 4
          - 5
          - 6
        description: |-
          Lifecycle of the device, which describes the activity status of the device.

          * `3` - Active
          * `4` - Temporarily active
          * `5` - Temporarily inactive
          * `6` - Inactive
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: location
        schema:
          type: string
          format: EWKT
        description: Location (2D or 3D) to search devices
        examples:
          --: {}
          2DPolygonArea(Katajanokka):
            value: POLYGON ((25497733 6672927, 25497946 6673032, 25498653 6673034,
              25498987 6672708, 25498314 6672170, 25497651 6672629, 25497646 6672775,
              25497733 6672927))
            summary: 2D polygon area (Katajanokka)
      - in: query
        name: location_additional_info
        schema:
          type: string
      - in: query
        name: location_name_en
        schema:
          type: string
      - in: query
        name: location_name_fi
        schema:
          type: string
      - in: query
        name: location_name_sw
        schema:
          type: string
      - in: query
        name: mount_plan
        schema:
          type: string
          format: uuid
      - in: query
        name: mount_type
        schema:
          type: string
          format: uuid
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: operational_area
        schema:
          type: string
          format: uuid
      - in: query
        name: order
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: owner
        schema:
          type: string
          format: uuid
      - in: query
        name: parent
        schema:
          type: string
          format: uuid
      - in: query
        name: pictogram
        schema:
          type: string
      - in: query
        name: plan
        schema:
          type: string
          format: uuid
      - in: query
        name: responsible_entity
        schema:
          type: string
          format: uuid
      - in: query
        name: size
        schema:
          type: string
      - in: query
        name: source_id
        schema:
          type: string
      - in: query
        name: source_name
        schema:
          type: string
      - in: query
        name: target
        schema:
          type: string
          format: uuid
      - in: query
        name: text_content_en
        schema:
          type: string
      - in: query
        name: text_content_fi
        schema:
          type: string
      - in: query
        name: text_content_sw
        schema:
          type: string
      - in: query
        name: updated_at
        schema:
          type: string
          format: date-time
      - in: query
        name: updated_by
        schema:
          type: string
          format: uuid
      - in: query
        name: validity_period_end
        schema:
          type: string
          format: date
      - in: query
        name: validity_period_start
        schema:
          type: string
          format: date
      - in: query
        name: value
        schema:
          type: number
      tags:
      - furniture-signpost-plans
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFurnitureSignpostPlanList'
          description: ''
    post:
      operationId: furniture_signpost_plans_create
      summary: Create new FurnitureSignpost Plan
      tags:
      - furniture-signpost-plans
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FurnitureSignpostPlanRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FurnitureSignpostPlanRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FurnitureSignpostPlanRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FurnitureSignpostPlan'
          description: ''
  /v1/furniture-signpost-plans/{id}/:
    get:
      operationId: furniture_signpost_plans_retrieve
      summary: Retrieve single FurnitureSignpost Plan
      parameters:
      - in: query
        name: geo_format
        schema:
          type: string
          enum:
          - default
          - geojson
        description: Determine whether the location should be in EWKT (default) or
          GeoJSON format.
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Furniture Signpost Plan.
        required: true
      tags:
      - furniture-signpost-plans
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FurnitureSignpostPlan'
          description: ''
    put:
      operationId: furniture_signpost_plans_update
      summary: Update single FurnitureSignpost Plan
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Furniture Signpost Plan.
        required: true
      tags:
      - furniture-signpost-plans
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FurnitureSignpostPlanRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FurnitureSignpostPlanRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FurnitureSignpostPlanRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FurnitureSignpostPlan'
          description: ''
    patch:
      operationId: furniture_signpost_plans_partial_update
      summary: Partially update single FurnitureSignpost Plan
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Furniture Signpost Plan.
        required: true
      tags:
      - furniture-signpost-plans
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFurnitureSignpostPlanRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFurnitureSignpostPlanRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFurnitureSignpostPlanRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FurnitureSignpostPlan'
          description: ''
    delete:
      operationId: furniture_signpost_plans_destroy
      summary: Soft-delete single FurnitureSignpost Plan
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Furniture Signpost Plan.
        required: true
      tags:
      - furniture-signpost-plans
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /v1/furniture-signpost-plans/{id}/files/:
    post:
      operationId: furniture_signpost_plans_files_create
      summary: Add one or more files to Furniture Signpost Plan
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Furniture Signpost Plan.
        required: true
      tags:
      - furniture-signpost-plans
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MultiFileUploadSchemaRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FurnitureSignpostPlanFileCreateResponse'
          description: ''
  /v1/furniture-signpost-plans/{id}/files/{file_pk}/:
    patch:
      operationId: furniture_signpost_plans_files_partial_update
      summary: Update single file from Furniture Signpost Plan
      parameters:
      - in: path
        name: file_pk
        schema:
          type: string
          format: uuid
        description: File object UUID
        required: true
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Furniture Signpost Plan.
        required: true
      tags:
      - furniture-signpost-plans
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFileUploadSchemaRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FurnitureSignpostPlanFile'
          description: ''
    delete:
      operationId: furniture_signpost_plans_files_destroy
      summary: Delete single file from Furniture Signpost Plan
      parameters:
      - in: path
        name: file_pk
        schema:
          type: string
          format: uuid
        description: File object UUID
        required: true
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Furniture Signpost Plan.
        required: true
      tags:
      - furniture-signpost-plans
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /v1/furniture-signpost-reals/:
    get:
      operationId: furniture_signpost_reals_list
      summary: Retrieve all FurnitureSignpost Reals
      parameters:
      - in: query
        name: additional_material_url
        schema:
          type: string
      - in: query
        name: arrow_direction
        schema:
          type: integer
          nullable: true
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
        description: |-
          Direction of the arrow on this device in relation to the sign.

          * `1` - Up
          * `2` - Down
          * `3` - Left
          * `4` - Right
          * `5` - Top right
          * `6` - Bottom right
          * `7` - Top left
          * `8` - Bottom left
      - in: query
        name: color
        schema:
          type: string
          format: uuid
      - in: query
        name: condition
        schema:
          type: integer
          nullable: true
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
        description: |-
          Describes the condition of this device.

          * `1` - Very bad
          * `2` - Bad
          * `3` - Average
          * `4` - Good
          * `5` - Very good
      - in: query
        name: content_responsible_entity
        schema:
          type: string
      - in: query
        name: created_at
        schema:
          type: string
          format: date-time
      - in: query
        name: created_by
        schema:
          type: string
          format: uuid
      - in: query
        name: deleted_at
        schema:
          type: string
          format: date-time
      - in: query
        name: deleted_by
        schema:
          type: string
          format: uuid
      - in: query
        name: device_type
        schema:
          type: string
          format: uuid
      - in: query
        name: direction
        schema:
          type: integer
      - in: query
        name: furniture_signpost_plan
        schema:
          type: string
          format: uuid
      - in: query
        name: geo_format
        schema:
          type: string
          enum:
          - default
          - geojson
        description: Determine whether the location should be in EWKT (default) or
          GeoJSON format.
      - in: query
        name: height
        schema:
          type: number
      - in: query
        name: id
        schema:
          type: string
          format: uuid
      - in: query
        name: installation_date
        schema:
          type: string
          format: date
      - in: query
        name: installation_status
        schema:
          type: string
          nullable: true
          enum:
          - COVERED
          - FALLEN
          - IN_USE
          - MISSING
          - OTHER
        description: |-
          Describes this devices installation status.

          * `IN_USE` - In use
          * `COVERED` - Covered
          * `FALLEN` - Fallen
          * `MISSING` - Missing
          * `OTHER` - Other
      - in: query
        name: is_active
        schema:
          type: boolean
      - in: query
        name: lifecycle
        schema:
          type: integer
          enum:
          - 3
          - 4
          - 5
          - 6
        description: |-
          Lifecycle of the device, which describes the activity status of the device.

          * `3` - Active
          * `4` - Temporarily active
          * `5` - Temporarily inactive
          * `6` - Inactive
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: location
        schema:
          type: string
          format: EWKT
        description: Location (2D or 3D) to search devices
        examples:
          --: {}
          2DPolygonArea(Katajanokka):
            value: POLYGON ((25497733 6672927, 25497946 6673032, 25498653 6673034,
              25498987 6672708, 25498314 6672170, 25497651 6672629, 25497646 6672775,
              25497733 6672927))
            summary: 2D polygon area (Katajanokka)
      - in: query
        name: location_additional_info
        schema:
          type: string
      - in: query
        name: location_name_en
        schema:
          type: string
      - in: query
        name: location_name_fi
        schema:
          type: string
      - in: query
        name: location_name_sw
        schema:
          type: string
      - in: query
        name: mount_real
        schema:
          type: string
          format: uuid
      - in: query
        name: mount_type
        schema:
          type: string
          format: uuid
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: operational_area
        schema:
          type: string
          format: uuid
      - in: query
        name: order
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: owner
        schema:
          type: string
          format: uuid
      - in: query
        name: parent
        schema:
          type: string
          format: uuid
      - in: query
        name: pictogram
        schema:
          type: string
      - in: query
        name: responsible_entity
        schema:
          type: string
          format: uuid
      - in: query
        name: size
        schema:
          type: string
      - in: query
        name: source_id
        schema:
          type: string
      - in: query
        name: source_name
        schema:
          type: string
      - in: query
        name: target
        schema:
          type: string
          format: uuid
      - in: query
        name: text_content_en
        schema:
          type: string
      - in: query
        name: text_content_fi
        schema:
          type: string
      - in: query
        name: text_content_sw
        schema:
          type: string
      - in: query
        name: updated_at
        schema:
          type: string
          format: date-time
      - in: query
        name: updated_by
        schema:
          type: string
          format: uuid
      - in: query
        name: validity_period_end
        schema:
          type: string
          format: date
      - in: query
        name: validity_period_start
        schema:
          type: string
          format: date
      - in: query
        name: value
        schema:
          type: number
      tags:
      - furniture-signpost-reals
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFurnitureSignpostRealList'
          description: ''
    post:
      operationId: furniture_signpost_reals_create
      summary: Create new FurnitureSignpost Real
      tags:
      - furniture-signpost-reals
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FurnitureSignpostRealRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FurnitureSignpostRealRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FurnitureSignpostRealRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FurnitureSignpostReal'
          description: ''
  /v1/furniture-signpost-reals/{furniture_signpost_real_pk}/operations/:
    get:
      operationId: furniture_signpost_reals_operations_list
      summary: Retrieve all operations of a furniture signpost real
      parameters:
      - in: query
        name: created_at
        schema:
          type: string
          format: date-time
      - in: query
        name: created_by
        schema:
          type: string
          format: uuid
      - in: query
        name: furniture_signpost_real
        schema:
          type: string
          format: uuid
      - in: path
        name: furniture_signpost_real_pk
        schema:
          type: string
          format: uuid
        required: true
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: operation_date
        schema:
          type: string
          format: date
      - in: query
        name: operation_type
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: quality_requirements_fulfilled
        schema:
          type: boolean
      - in: query
        name: straightness_value
        schema:
          type: number
          format: float
      - in: query
        name: updated_at
        schema:
          type: string
          format: date-time
      - in: query
        name: updated_by
        schema:
          type: string
          format: uuid
      tags:
      - furniture-signpost-reals
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFurnitureSignpostRealOperationList'
          description: ''
    post:
      operationId: furniture_signpost_reals_operations_create
      summary: Add a new operation to a furniture signpost real
      parameters:
      - in: path
        name: furniture_signpost_real_pk
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - furniture-signpost-reals
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FurnitureSignpostRealOperationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FurnitureSignpostRealOperationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FurnitureSignpostRealOperationRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FurnitureSignpostRealOperation'
          description: ''
  /v1/furniture-signpost-reals/{furniture_signpost_real_pk}/operations/{id}/:
    get:
      operationId: furniture_signpost_reals_operations_retrieve
      summary: Retrieve an operation of a furniture signpost real
      parameters:
      - in: path
        name: furniture_signpost_real_pk
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Furniture Signpost Real
          operation.
        required: true
      tags:
      - furniture-signpost-reals
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FurnitureSignpostRealOperation'
          description: ''
    put:
      operationId: furniture_signpost_reals_operations_update
      summary: Update an operation of a furniture signpost real
      parameters:
      - in: path
        name: furniture_signpost_real_pk
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Furniture Signpost Real
          operation.
        required: true
      tags:
      - furniture-signpost-reals
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FurnitureSignpostRealOperationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FurnitureSignpostRealOperationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FurnitureSignpostRealOperationRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FurnitureSignpostRealOperation'
          description: ''
    patch:
      operationId: furniture_signpost_reals_operations_partial_update
      summary: Partially update an operation of a furniture signpost real
      parameters:
      - in: path
        name: furniture_signpost_real_pk
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Furniture Signpost Real
          operation.
        required: true
      tags:
      - furniture-signpost-reals
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFurnitureSignpostRealOperationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFurnitureSignpostRealOperationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFurnitureSignpostRealOperationRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FurnitureSignpostRealOperation'
          description: ''
    delete:
      operationId: furniture_signpost_reals_operations_destroy
      summary: Delete an operation of a furniture signpost real
      parameters:
      - in: path
        name: furniture_signpost_real_pk
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Furniture Signpost Real
          operation.
        required: true
      tags:
      - furniture-signpost-reals
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /v1/furniture-signpost-reals/{id}/:
    get:
      operationId: furniture_signpost_reals_retrieve
      summary: Retrieve single FurnitureSignpost Real
      parameters:
      - in: query
        name: geo_format
        schema:
          type: string
          enum:
          - default
          - geojson
        description: Determine whether the location should be in EWKT (default) or
          GeoJSON format.
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Furniture Signpost Real.
        required: true
      tags:
      - furniture-signpost-reals
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FurnitureSignpostReal'
          description: ''
    put:
      operationId: furniture_signpost_reals_update
      summary: Update single FurnitureSignpost Real
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Furniture Signpost Real.
        required: true
      tags:
      - furniture-signpost-reals
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FurnitureSignpostRealRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FurnitureSignpostRealRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FurnitureSignpostRealRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FurnitureSignpostReal'
          description: ''
    patch:
      operationId: furniture_signpost_reals_partial_update
      summary: Partially update single FurnitureSignpost Real
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Furniture Signpost Real.
        required: true
      tags:
      - furniture-signpost-reals
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFurnitureSignpostRealRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFurnitureSignpostRealRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFurnitureSignpostRealRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FurnitureSignpostReal'
          description: ''
    delete:
      operationId: furniture_signpost_reals_destroy
      summary: Soft-delete single FurnitureSignpost Real
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Furniture Signpost Real.
        required: true
      tags:
      - furniture-signpost-reals
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /v1/furniture-signpost-reals/{id}/files/:
    post:
      operationId: furniture_signpost_reals_files_create
      summary: Add one or more files to Furniture Signpost Real
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Furniture Signpost Real.
        required: true
      tags:
      - furniture-signpost-reals
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MultiFileUploadSchemaRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FurnitureSignpostRealFileCreateResponse'
          description: ''
  /v1/furniture-signpost-reals/{id}/files/{file_pk}/:
    patch:
      operationId: furniture_signpost_reals_files_partial_update
      summary: Update single file from Furniture Signpost Real
      parameters:
      - in: path
        name: file_pk
        schema:
          type: string
          format: uuid
        description: File object UUID
        required: true
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Furniture Signpost Real.
        required: true
      tags:
      - furniture-signpost-reals
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFileUploadSchemaRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FurnitureSignpostRealFile'
          description: ''
    delete:
      operationId: furniture_signpost_reals_files_destroy
      summary: Delete single file from Furniture Signpost Real
      parameters:
      - in: path
        name: file_pk
        schema:
          type: string
          format: uuid
        description: File object UUID
        required: true
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Furniture Signpost Real.
        required: true
      tags:
      - furniture-signpost-reals
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /v1/mount-plans/:
    get:
      operationId: mount_plans_list
      summary: Retrieve all Mount Plans
      parameters:
      - in: query
        name: base
        schema:
          type: string
      - in: query
        name: created_at
        schema:
          type: string
          format: date-time
      - in: query
        name: created_by
        schema:
          type: string
          format: uuid
      - in: query
        name: cross_bar_length
        schema:
          type: number
      - in: query
        name: deleted_at
        schema:
          type: string
          format: date-time
      - in: query
        name: deleted_by
        schema:
          type: string
          format: uuid
      - in: query
        name: electric_accountable
        schema:
          type: string
      - in: query
        name: geo_format
        schema:
          type: string
          enum:
          - default
          - geojson
        description: Determine whether the location should be in EWKT (default) or
          GeoJSON format.
      - in: query
        name: height
        schema:
          type: number
      - in: query
        name: id
        schema:
          type: string
          format: uuid
      - in: query
        name: is_active
        schema:
          type: boolean
      - in: query
        name: is_foldable
        schema:
          type: boolean
      - in: query
        name: is_replaced
        schema:
          type: string
          enum:
          - All
          - 'false'
          - 'true'
        description: |-
          Plan replacement

          * `All` - ALL
          * `true` - true
          * `false` - false
      - in: query
        name: lifecycle
        schema:
          type: integer
          enum:
          - 3
          - 4
          - 5
          - 6
        description: |-
          Lifecycle of the device, which describes the activity status of the device.

          * `3` - Active
          * `4` - Temporarily active
          * `5` - Temporarily inactive
          * `6` - Inactive
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: location
        schema:
          type: string
          format: EWKT
        description: Location (2D or 3D) to search devices
        examples:
          --: {}
          2DPolygonArea(Katajanokka):
            value: POLYGON ((25497733 6672927, 25497946 6673032, 25498653 6673034,
              25498987 6672708, 25498314 6672170, 25497651 6672629, 25497646 6672775,
              25497733 6672927))
            summary: 2D polygon area (Katajanokka)
      - in: query
        name: location_specifier
        schema:
          type: integer
          nullable: true
          enum:
          - 1
          - 2
          - 3
          - 4
          - 6
        description: |-
          Specifies where the mount is in relation to the road.

          * `1` - Right side
          * `2` - Left side
          * `3` - Above
          * `4` - Middle
          * `6` - Outside
      - in: query
        name: material
        schema:
          type: string
      - in: query
        name: mount_type
        schema:
          type: string
          format: uuid
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: owner
        schema:
          type: string
          format: uuid
      - in: query
        name: plan
        schema:
          type: string
          format: uuid
      - in: query
        name: portal_type
        schema:
          type: string
          format: uuid
      - in: query
        name: responsible_entity
        schema:
          type: string
          format: uuid
      - in: query
        name: road_name
        schema:
          type: string
      - in: query
        name: source_id
        schema:
          type: string
      - in: query
        name: source_name
        schema:
          type: string
      - in: query
        name: txt
        schema:
          type: string
      - in: query
        name: updated_at
        schema:
          type: string
          format: date-time
      - in: query
        name: updated_by
        schema:
          type: string
          format: uuid
      - in: query
        name: validity_period_end
        schema:
          type: string
          format: date
      - in: query
        name: validity_period_start
        schema:
          type: string
          format: date
      tags:
      - mount-plans
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMountPlanOutputList'
          description: ''
    post:
      operationId: mount_plans_create
      summary: Create new Mount Plan
      tags:
      - mount-plans
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MountPlanInputRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MountPlanInputRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MountPlanInputRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MountPlanInput'
          description: ''
  /v1/mount-plans/{id}/:
    get:
      operationId: mount_plans_retrieve
      summary: Retrieve single Mount Plan
      parameters:
      - in: query
        name: geo_format
        schema:
          type: string
          enum:
          - default
          - geojson
        description: Determine whether the location should be in EWKT (default) or
          GeoJSON format.
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Mount Plan.
        required: true
      tags:
      - mount-plans
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MountPlanOutput'
          description: ''
    put:
      operationId: mount_plans_update
      summary: Update single Mount Plan
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Mount Plan.
        required: true
      tags:
      - mount-plans
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MountPlanInputRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MountPlanInputRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MountPlanInputRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MountPlanInput'
          description: ''
    patch:
      operationId: mount_plans_partial_update
      summary: Partially update single Mount Plan
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Mount Plan.
        required: true
      tags:
      - mount-plans
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMountPlanInputRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMountPlanInputRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMountPlanInputRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MountPlanInput'
          description: ''
    delete:
      operationId: mount_plans_destroy
      summary: Soft-delete single Mount Plan
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Mount Plan.
        required: true
      tags:
      - mount-plans
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /v1/mount-plans/{id}/files/:
    post:
      operationId: mount_plans_files_create
      summary: Add one or more files to Mount Plan
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Mount Plan.
        required: true
      tags:
      - mount-plans
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MultiFileUploadSchemaRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MountPlanFileCreateResponse'
          description: ''
  /v1/mount-plans/{id}/files/{file_pk}/:
    patch:
      operationId: mount_plans_files_partial_update
      summary: Update single file from Mount Plan
      parameters:
      - in: path
        name: file_pk
        schema:
          type: string
          format: uuid
        description: File object UUID
        required: true
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Mount Plan.
        required: true
      tags:
      - mount-plans
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFileUploadSchemaRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MountPlanFile'
          description: ''
    delete:
      operationId: mount_plans_files_destroy
      summary: Delete single file from Mount Plan
      parameters:
      - in: path
        name: file_pk
        schema:
          type: string
          format: uuid
        description: File object UUID
        required: true
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Mount Plan.
        required: true
      tags:
      - mount-plans
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /v1/mount-reals/:
    get:
      operationId: mount_reals_list
      summary: Retrieve all Mount Reals
      parameters:
      - in: query
        name: attachment_url
        schema:
          type: string
      - in: query
        name: base
        schema:
          type: string
      - in: query
        name: condition
        schema:
          type: integer
          nullable: true
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
        description: |-
          Describes the condition of this device.

          * `1` - Very bad
          * `2` - Bad
          * `3` - Average
          * `4` - Good
          * `5` - Very good
      - in: query
        name: created_at
        schema:
          type: string
          format: date-time
      - in: query
        name: created_by
        schema:
          type: string
          format: uuid
      - in: query
        name: cross_bar_length
        schema:
          type: number
      - in: query
        name: deleted_at
        schema:
          type: string
          format: date-time
      - in: query
        name: deleted_by
        schema:
          type: string
          format: uuid
      - in: query
        name: diameter
        schema:
          type: number
      - in: query
        name: electric_accountable
        schema:
          type: string
      - in: query
        name: geo_format
        schema:
          type: string
          enum:
          - default
          - geojson
        description: Determine whether the location should be in EWKT (default) or
          GeoJSON format.
      - in: query
        name: height
        schema:
          type: number
      - in: query
        name: id
        schema:
          type: string
          format: uuid
      - in: query
        name: inspected_at
        schema:
          type: string
          format: date-time
      - in: query
        name: installation_date
        schema:
          type: string
          format: date
      - in: query
        name: installation_status
        schema:
          type: string
          nullable: true
          enum:
          - COVERED
          - FALLEN
          - IN_USE
          - MISSING
          - OTHER
        description: |-
          Describes this devices installation status.

          * `IN_USE` - In use
          * `COVERED` - Covered
          * `FALLEN` - Fallen
          * `MISSING` - Missing
          * `OTHER` - Other
      - in: query
        name: is_active
        schema:
          type: boolean
      - in: query
        name: is_foldable
        schema:
          type: boolean
      - in: query
        name: lifecycle
        schema:
          type: integer
          enum:
          - 3
          - 4
          - 5
          - 6
        description: |-
          Lifecycle of the device, which describes the activity status of the device.

          * `3` - Active
          * `4` - Temporarily active
          * `5` - Temporarily inactive
          * `6` - Inactive
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: location
        schema:
          type: string
          format: EWKT
        description: Location (2D or 3D) to search devices
        examples:
          --: {}
          2DPolygonArea(Katajanokka):
            value: POLYGON ((25497733 6672927, 25497946 6673032, 25498653 6673034,
              25498987 6672708, 25498314 6672170, 25497651 6672629, 25497646 6672775,
              25497733 6672927))
            summary: 2D polygon area (Katajanokka)
      - in: query
        name: location_specifier
        schema:
          type: integer
          nullable: true
          enum:
          - 1
          - 2
          - 3
          - 4
          - 6
        description: |-
          Specifies where the mount is in relation to the road.

          * `1` - Right side
          * `2` - Left side
          * `3` - Above
          * `4` - Middle
          * `6` - Outside
      - in: query
        name: material
        schema:
          type: string
      - in: query
        name: mount_plan
        schema:
          type: string
          format: uuid
      - in: query
        name: mount_type
        schema:
          type: string
          format: uuid
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: owner
        schema:
          type: string
          format: uuid
      - in: query
        name: portal_type
        schema:
          type: string
          format: uuid
      - in: query
        name: responsible_entity
        schema:
          type: string
          format: uuid
      - in: query
        name: road_name
        schema:
          type: string
      - in: query
        name: scanned_at
        schema:
          type: string
          format: date-time
      - in: query
        name: source_id
        schema:
          type: string
      - in: query
        name: source_name
        schema:
          type: string
      - in: query
        name: txt
        schema:
          type: string
      - in: query
        name: updated_at
        schema:
          type: string
          format: date-time
      - in: query
        name: updated_by
        schema:
          type: string
          format: uuid
      - in: query
        name: validity_period_end
        schema:
          type: string
          format: date
      - in: query
        name: validity_period_start
        schema:
          type: string
          format: date
      tags:
      - mount-reals
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMountRealList'
          description: ''
    post:
      operationId: mount_reals_create
      summary: Create new Mount Real
      tags:
      - mount-reals
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MountRealRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MountRealRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MountRealRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MountReal'
          description: ''
  /v1/mount-reals/{mount_real_pk}/operations/:
    get:
      operationId: mount_reals_operations_list
      summary: Retrieve all operations of a mount real
      parameters:
      - in: query
        name: created_at
        schema:
          type: string
          format: date-time
      - in: query
        name: created_by
        schema:
          type: string
          format: uuid
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: mount_real
        schema:
          type: string
          format: uuid
      - in: path
        name: mount_real_pk
        schema:
          type: string
          format: uuid
        required: true
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: operation_date
        schema:
          type: string
          format: date
      - in: query
        name: operation_type
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: quality_requirements_fulfilled
        schema:
          type: boolean
      - in: query
        name: straightness_value
        schema:
          type: number
          format: float
      - in: query
        name: updated_at
        schema:
          type: string
          format: date-time
      - in: query
        name: updated_by
        schema:
          type: string
          format: uuid
      tags:
      - mount-reals
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMountRealOperationList'
          description: ''
    post:
      operationId: mount_reals_operations_create
      summary: Add a new operation to a mount real
      parameters:
      - in: path
        name: mount_real_pk
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - mount-reals
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MountRealOperationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MountRealOperationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MountRealOperationRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MountRealOperation'
          description: ''
  /v1/mount-reals/{mount_real_pk}/operations/{id}/:
    get:
      operationId: mount_reals_operations_retrieve
      summary: Retrieve an operation of a mount real
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Mount real operation.
        required: true
      - in: path
        name: mount_real_pk
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - mount-reals
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MountRealOperation'
          description: ''
    put:
      operationId: mount_reals_operations_update
      summary: Update an operation of a mount real
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Mount real operation.
        required: true
      - in: path
        name: mount_real_pk
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - mount-reals
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MountRealOperationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MountRealOperationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MountRealOperationRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MountRealOperation'
          description: ''
    patch:
      operationId: mount_reals_operations_partial_update
      summary: Partially update an operation of a mount real
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Mount real operation.
        required: true
      - in: path
        name: mount_real_pk
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - mount-reals
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMountRealOperationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMountRealOperationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMountRealOperationRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MountRealOperation'
          description: ''
    delete:
      operationId: mount_reals_operations_destroy
      summary: Delete an operation of a mount real
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Mount real operation.
        required: true
      - in: path
        name: mount_real_pk
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - mount-reals
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /v1/mount-reals/{id}/:
    get:
      operationId: mount_reals_retrieve
      summary: Retrieve single Mount Real
      parameters:
      - in: query
        name: geo_format
        schema:
          type: string
          enum:
          - default
          - geojson
        description: Determine whether the location should be in EWKT (default) or
          GeoJSON format.
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Mount Real.
        required: true
      tags:
      - mount-reals
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MountReal'
          description: ''
    put:
      operationId: mount_reals_update
      summary: Update single Mount Real
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Mount Real.
        required: true
      tags:
      - mount-reals
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MountRealRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MountRealRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MountRealRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MountReal'
          description: ''
    patch:
      operationId: mount_reals_partial_update
      summary: Partially update single Mount Real
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Mount Real.
        required: true
      tags:
      - mount-reals
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMountRealRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMountRealRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMountRealRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MountReal'
          description: ''
    delete:
      operationId: mount_reals_destroy
      summary: Soft-delete single Mount Real
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Mount Real.
        required: true
      tags:
      - mount-reals
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /v1/mount-reals/{id}/files/:
    post:
      operationId: mount_reals_files_create
      summary: Add one or more files to Mount Real
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Mount Real.
        required: true
      tags:
      - mount-reals
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MultiFileUploadSchemaRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MountRealFileCreateResponse'
          description: ''
  /v1/mount-reals/{id}/files/{file_pk}/:
    patch:
      operationId: mount_reals_files_partial_update
      summary: Update single file from Mount Real
      parameters:
      - in: path
        name: file_pk
        schema:
          type: string
          format: uuid
        description: File object UUID
        required: true
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Mount Real.
        required: true
      tags:
      - mount-reals
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFileUploadSchemaRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MountRealFile'
          description: ''
    delete:
      operationId: mount_reals_files_destroy
      summary: Delete single file from Mount Real
      parameters:
      - in: path
        name: file_pk
        schema:
          type: string
          format: uuid
        description: File object UUID
        required: true
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Mount Real.
        required: true
      tags:
      - mount-reals
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /v1/mount-types/:
    get:
      operationId: mount_types_list
      summary: Retrieve all MountTypes
      parameters:
      - in: query
        name: code
        schema:
          type: string
      - in: query
        name: description
        schema:
          type: string
      - in: query
        name: description_fi
        schema:
          type: string
      - in: query
        name: digiroad_code
        schema:
          type: integer
      - in: query
        name: digiroad_description
        schema:
          type: string
      - in: query
        name: id
        schema:
          type: string
          format: uuid
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - mount-types
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMountTypeList'
          description: ''
    post:
      operationId: mount_types_create
      summary: Create new MountType
      tags:
      - mount-types
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MountTypeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MountTypeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MountTypeRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MountType'
          description: ''
  /v1/mount-types/{id}/:
    get:
      operationId: mount_types_retrieve
      summary: Retrieve single MountType
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Mount type.
        required: true
      tags:
      - mount-types
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MountType'
          description: ''
    put:
      operationId: mount_types_update
      summary: Update single MountType
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Mount type.
        required: true
      tags:
      - mount-types
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MountTypeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MountTypeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MountTypeRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MountType'
          description: ''
    patch:
      operationId: mount_types_partial_update
      summary: Partially update single MountType
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Mount type.
        required: true
      tags:
      - mount-types
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMountTypeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMountTypeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMountTypeRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MountType'
          description: ''
    delete:
      operationId: mount_types_destroy
      summary: Delete single MountType
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Mount type.
        required: true
      tags:
      - mount-types
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /v1/operation-types/:
    get:
      operationId: operation_types_list
      summary: Retrieve all Operation Type
      parameters:
      - in: query
        name: additional_sign
        schema:
          type: boolean
      - in: query
        name: barrier
        schema:
          type: boolean
      - in: query
        name: furniture_signpost
        schema:
          type: boolean
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: mount
        schema:
          type: boolean
      - in: query
        name: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: road_marking
        schema:
          type: boolean
      - in: query
        name: signpost
        schema:
          type: boolean
      - in: query
        name: traffic_light
        schema:
          type: boolean
      - in: query
        name: traffic_sign
        schema:
          type: boolean
      tags:
      - operation-types
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOperationTypeList'
          description: ''
    post:
      operationId: operation_types_create
      summary: Create new Operation Type
      tags:
      - operation-types
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OperationTypeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OperationTypeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OperationTypeRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationType'
          description: ''
  /v1/operation-types/{id}/:
    get:
      operationId: operation_types_retrieve
      summary: Retrieve single Operation Type
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Operation type.
        required: true
      tags:
      - operation-types
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationType'
          description: ''
    put:
      operationId: operation_types_update
      summary: Update single Operation Type
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Operation type.
        required: true
      tags:
      - operation-types
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OperationTypeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OperationTypeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OperationTypeRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationType'
          description: ''
    patch:
      operationId: operation_types_partial_update
      summary: Partially update single Operation Type
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Operation type.
        required: true
      tags:
      - operation-types
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOperationTypeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOperationTypeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOperationTypeRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationType'
          description: ''
    delete:
      operationId: operation_types_destroy
      summary: Delete single Operation Type
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Operation type.
        required: true
      tags:
      - operation-types
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /v1/operational-areas/:
    get:
      operationId: operational_areas_list
      summary: Retrieve all Operational Area
      parameters:
      - in: query
        name: area_type
        schema:
          type: string
      - in: query
        name: contractor
        schema:
          type: string
      - in: query
        name: end_date
        schema:
          type: string
          format: date
      - in: query
        name: id
        schema:
          type: string
          format: uuid
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: location
        schema:
          type: string
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: name_short
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: source_id
        schema:
          type: string
      - in: query
        name: source_name
        schema:
          type: string
      - in: query
        name: start_date
        schema:
          type: string
          format: date
      - in: query
        name: status
        schema:
          type: string
      - in: query
        name: task
        schema:
          type: string
      - in: query
        name: updated_date
        schema:
          type: string
          format: date
      tags:
      - operational-areas
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOperationalAreaList'
          description: ''
    post:
      operationId: operational_areas_create
      summary: Create new Operational Area
      tags:
      - operational-areas
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OperationalAreaRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OperationalAreaRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OperationalAreaRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationalArea'
          description: ''
  /v1/operational-areas/{id}/:
    get:
      operationId: operational_areas_retrieve
      summary: Retrieve single Operational Area
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Operational area.
        required: true
      tags:
      - operational-areas
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationalArea'
          description: ''
    put:
      operationId: operational_areas_update
      summary: Update single Operational Area
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Operational area.
        required: true
      tags:
      - operational-areas
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OperationalAreaRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OperationalAreaRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OperationalAreaRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationalArea'
          description: ''
    patch:
      operationId: operational_areas_partial_update
      summary: Partially update single Operational Area
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Operational area.
        required: true
      tags:
      - operational-areas
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOperationalAreaRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOperationalAreaRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOperationalAreaRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationalArea'
          description: ''
    delete:
      operationId: operational_areas_destroy
      summary: Delete single Operational Area
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Operational area.
        required: true
      tags:
      - operational-areas
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /v1/owners/:
    get:
      operationId: owners_list
      summary: Retrieve all Owners
      parameters:
      - in: query
        name: id
        schema:
          type: string
          format: uuid
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name_en
        schema:
          type: string
      - in: query
        name: name_fi
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - owners
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOwnerList'
          description: ''
    post:
      operationId: owners_create
      summary: Create new Owner
      tags:
      - owners
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OwnerRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OwnerRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OwnerRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Owner'
          description: ''
  /v1/owners/{id}/:
    get:
      operationId: owners_retrieve
      summary: Retrieve single Owner
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Owner.
        required: true
      tags:
      - owners
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Owner'
          description: ''
    put:
      operationId: owners_update
      summary: Update single Owner
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Owner.
        required: true
      tags:
      - owners
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OwnerRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OwnerRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OwnerRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Owner'
          description: ''
    patch:
      operationId: owners_partial_update
      summary: Partially update single Owner
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Owner.
        required: true
      tags:
      - owners
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOwnerRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOwnerRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOwnerRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Owner'
          description: ''
    delete:
      operationId: owners_destroy
      summary: Delete single Owner
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Owner.
        required: true
      tags:
      - owners
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /v1/plans/:
    get:
      operationId: plans_list
      summary: Retrieve all Plans
      parameters:
      - in: query
        name: created_at
        schema:
          type: string
          format: date-time
      - in: query
        name: created_by
        schema:
          type: string
          format: uuid
      - in: query
        name: decision_id
        schema:
          type: string
      - in: query
        name: deleted_at
        schema:
          type: string
          format: date-time
      - in: query
        name: deleted_by
        schema:
          type: string
          format: uuid
      - in: query
        name: derive_location
        schema:
          type: boolean
      - in: query
        name: diary_number
        schema:
          type: string
      - in: query
        name: drawing_number
        schema:
          type: string
      - in: query
        name: geo_format
        schema:
          type: string
          enum:
          - default
          - geojson
        description: Determine whether the location should be in EWKT (default) or
          GeoJSON format.
      - in: query
        name: id
        schema:
          type: string
          format: uuid
      - in: query
        name: is_active
        schema:
          type: boolean
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: location
        schema:
          type: string
          format: EWKT
        description: Location (2D or 3D) to search devices
        examples:
          --: {}
          2DPolygonArea(Katajanokka):
            value: POLYGON ((25497733 6672927, 25497946 6673032, 25498653 6673034,
              25498987 6672708, 25498314 6672170, 25497651 6672629, 25497646 6672775,
              25497733 6672927))
            summary: 2D polygon area (Katajanokka)
      - in: query
        name: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: source_id
        schema:
          type: string
      - in: query
        name: source_name
        schema:
          type: string
      - in: query
        name: updated_at
        schema:
          type: string
          format: date-time
      - in: query
        name: updated_by
        schema:
          type: string
          format: uuid
      tags:
      - plans
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPlanList'
          description: ''
    post:
      operationId: plans_create
      summary: Create new Plan
      tags:
      - plans
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlanRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PlanRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PlanRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plan'
          description: ''
  /v1/plans/{id}/:
    get:
      operationId: plans_retrieve
      summary: Retrieve single Plan
      parameters:
      - in: query
        name: geo_format
        schema:
          type: string
          enum:
          - default
          - geojson
        description: Determine whether the location should be in EWKT (default) or
          GeoJSON format.
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Plan.
        required: true
      tags:
      - plans
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plan'
          description: ''
    put:
      operationId: plans_update
      summary: Update single Plan
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Plan.
        required: true
      tags:
      - plans
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlanRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PlanRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PlanRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plan'
          description: ''
    patch:
      operationId: plans_partial_update
      summary: Partially update single Plan
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Plan.
        required: true
      tags:
      - plans
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPlanRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPlanRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPlanRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plan'
          description: ''
    delete:
      operationId: plans_destroy
      summary: Soft-delete single Plan
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Plan.
        required: true
      tags:
      - plans
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /v1/portal-types/:
    get:
      operationId: portal_types_list
      summary: Retrieve all PortalTypes
      parameters:
      - in: query
        name: build_type
        schema:
          type: string
      - in: query
        name: id
        schema:
          type: string
          format: uuid
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: model
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: structure
        schema:
          type: string
      tags:
      - portal-types
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPortalTypeList'
          description: ''
    post:
      operationId: portal_types_create
      summary: Create new PortalType
      tags:
      - portal-types
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PortalTypeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PortalTypeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PortalTypeRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortalType'
          description: ''
  /v1/portal-types/{id}/:
    get:
      operationId: portal_types_retrieve
      summary: Retrieve single PortalType
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Portal type.
        required: true
      tags:
      - portal-types
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortalType'
          description: ''
    put:
      operationId: portal_types_update
      summary: Update single PortalType
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Portal type.
        required: true
      tags:
      - portal-types
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PortalTypeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PortalTypeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PortalTypeRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortalType'
          description: ''
    patch:
      operationId: portal_types_partial_update
      summary: Partially update single PortalType
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Portal type.
        required: true
      tags:
      - portal-types
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPortalTypeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPortalTypeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPortalTypeRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortalType'
          description: ''
    delete:
      operationId: portal_types_destroy
      summary: Delete single PortalType
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Portal type.
        required: true
      tags:
      - portal-types
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /v1/responsible-entity/:
    get:
      operationId: responsible_entity_list
      summary: Retrieve all ResponsibleEntities
      parameters:
      - in: query
        name: external_id
        schema:
          type: string
      - in: query
        name: id
        schema:
          type: string
          format: uuid
      - in: query
        name: level
        schema:
          type: integer
      - in: query
        name: lft
        schema:
          type: integer
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: organization_level
        schema:
          type: integer
          enum:
          - 10
          - 20
          - 30
          - 50
        description: |-
          Describes the level of organization this is.

          * `10` - division
          * `20` - service
          * `30` - unit
          * `50` - project
      - in: query
        name: parent
        schema:
          type: string
          format: uuid
      - in: query
        name: rght
        schema:
          type: integer
      - in: query
        name: tree_id
        schema:
          type: integer
      tags:
      - responsible-entity
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponsibleEntityList'
          description: ''
    post:
      operationId: responsible_entity_create
      summary: Create new ResponsibleEntity
      tags:
      - responsible-entity
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResponsibleEntityRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResponsibleEntityRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResponsibleEntityRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponsibleEntity'
          description: ''
  /v1/responsible-entity/{id}/:
    get:
      operationId: responsible_entity_retrieve
      summary: Retrieve single ResponsibleEntity
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Responsible Entity.
        required: true
      tags:
      - responsible-entity
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponsibleEntity'
          description: ''
    put:
      operationId: responsible_entity_update
      summary: Update single ResponsibleEntity
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Responsible Entity.
        required: true
      tags:
      - responsible-entity
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResponsibleEntityRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResponsibleEntityRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResponsibleEntityRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponsibleEntity'
          description: ''
    patch:
      operationId: responsible_entity_partial_update
      summary: Partially update single ResponsibleEntity
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Responsible Entity.
        required: true
      tags:
      - responsible-entity
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedResponsibleEntityRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedResponsibleEntityRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedResponsibleEntityRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponsibleEntity'
          description: ''
    delete:
      operationId: responsible_entity_destroy
      summary: Delete single ResponsibleEntity
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Responsible Entity.
        required: true
      tags:
      - responsible-entity
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /v1/road-marking-plans/:
    get:
      operationId: road_marking_plans_list
      summary: Retrieve all RoadMarking Plans
      parameters:
      - in: query
        name: additional_info
        schema:
          type: string
      - in: query
        name: amount
        schema:
          type: string
      - in: query
        name: arrow_direction
        schema:
          type: integer
          nullable: true
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
        description: |-
          Direction of the arrow on the road.

          * `1` - Straight
          * `2` - Right
          * `3` - Right and straight
          * `4` - Left
          * `5` - Left and straight
          * `6` - Lane ends
          * `7` - Right and left
          * `8` - Straight, right and left
      - in: query
        name: color
        schema:
          type: integer
          nullable: true
          enum:
          - 1
          - 2
        description: |-
          * `1` - White
          * `2` - Yellow
      - in: query
        name: created_at
        schema:
          type: string
          format: date-time
      - in: query
        name: created_by
        schema:
          type: string
          format: uuid
      - in: query
        name: deleted_at
        schema:
          type: string
          format: date-time
      - in: query
        name: deleted_by
        schema:
          type: string
          format: uuid
      - in: query
        name: device_type
        schema:
          type: string
          format: uuid
      - in: query
        name: geo_format
        schema:
          type: string
          enum:
          - default
          - geojson
        description: Determine whether the location should be in EWKT (default) or
          GeoJSON format.
      - in: query
        name: id
        schema:
          type: string
          format: uuid
      - in: query
        name: is_active
        schema:
          type: boolean
      - in: query
        name: is_grinded
        schema:
          type: boolean
      - in: query
        name: is_raised
        schema:
          type: boolean
      - in: query
        name: is_replaced
        schema:
          type: string
          enum:
          - All
          - 'false'
          - 'true'
        description: |-
          Plan replacement

          * `All` - ALL
          * `true` - true
          * `false` - false
      - in: query
        name: lane_number
        schema:
          type: string
          nullable: true
          enum:
          - '11'
          - '21'
          - '31'
          - X2
          - X3
          - X4
          - X5
          - X6
          - X7
          - X8
          - X9
        description: |-
          Describes which lane of the road this road marking affects.

          * `11` - Main lane
          * `21` - Main lane
          * `31` - Lane allowing traffic to both directions
          * `X2` - First left additional lane
          * `X3` - First right additional lane
          * `X4` - Second left additional lane
          * `X5` - Second right additional lane
          * `X6` - Third left additional lane
          * `X7` - Third right additional lane
          * `X8` - Fourth left additional lane
          * `X9` - Fourth right additional lane
      - in: query
        name: lane_type
        schema:
          type: string
          nullable: true
          enum:
          - '1'
          - '10'
          - '11'
          - '2'
          - '20'
          - '21'
          - '22'
          - '3'
          - '4'
          - '5'
          - '6'
          - '7'
          - '8'
          - '9'
        description: |-
          The type of lane which this road marking affects.

          * `1` - Main lane
          * `2` - Fast lane
          * `3` - Turn right lane
          * `4` - Turn left lane
          * `5` - Auxiliary straight lane
          * `6` - Merge lane
          * `7` - Exit lane
          * `8` - Weaving lane
          * `9` - Public transport lane / taxi lane
          * `10` - Heavy vehicle lane
          * `11` - Reversible lane
          * `20` - Pedestrian and bike lane
          * `21` - Pedestrian lane
          * `22` - Bike lane
      - in: query
        name: length
        schema:
          type: integer
      - in: query
        name: lifecycle
        schema:
          type: integer
          enum:
          - 3
          - 4
          - 5
          - 6
        description: |-
          Lifecycle of the device, which describes the activity status of the device.

          * `3` - Active
          * `4` - Temporarily active
          * `5` - Temporarily inactive
          * `6` - Inactive
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: line_direction
        schema:
          type: string
          nullable: true
          enum:
          - BACKWARD
          - FORWARD
        description: |-
          * `FORWARD` - Forward
          * `BACKWARD` - Backward
      - in: query
        name: location
        schema:
          type: string
          format: EWKT
        description: Location (2D or 3D) to search devices
        examples:
          --: {}
          2DPolygonArea(Katajanokka):
            value: POLYGON ((25497733 6672927, 25497946 6673032, 25498653 6673034,
              25498987 6672708, 25498314 6672170, 25497651 6672629, 25497646 6672775,
              25497733 6672927))
            summary: 2D polygon area (Katajanokka)
      - in: query
        name: location_specifier
        schema:
          type: integer
          nullable: true
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
        description: |-
          Specifies where the road marking is in relation to the lane.

          * `1` - Both sides of road
          * `2` - Right side of lane
          * `3` - Left side of lane
          * `4` - Both sides of lane
          * `5` - Middle of lane
          * `6` - Left side of lane or road
      - in: query
        name: material
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: owner
        schema:
          type: string
          format: uuid
      - in: query
        name: plan
        schema:
          type: string
          format: uuid
      - in: query
        name: responsible_entity
        schema:
          type: string
          format: uuid
      - in: query
        name: road_name
        schema:
          type: string
      - in: query
        name: seasonal_validity_period_end
        schema:
          type: string
          format: date
      - in: query
        name: seasonal_validity_period_start
        schema:
          type: string
          format: date
      - in: query
        name: size
        schema:
          type: string
      - in: query
        name: source_id
        schema:
          type: string
      - in: query
        name: source_name
        schema:
          type: string
      - in: query
        name: symbol
        schema:
          type: string
      - in: query
        name: traffic_sign_plan
        schema:
          type: string
          format: uuid
      - in: query
        name: type_specifier
        schema:
          type: string
      - in: query
        name: updated_at
        schema:
          type: string
          format: date-time
      - in: query
        name: updated_by
        schema:
          type: string
          format: uuid
      - in: query
        name: validity_period_end
        schema:
          type: string
          format: date
      - in: query
        name: validity_period_start
        schema:
          type: string
          format: date
      - in: query
        name: value
        schema:
          type: string
      - in: query
        name: width
        schema:
          type: integer
      tags:
      - road-marking-plans
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRoadMarkingPlanOutputList'
          description: ''
    post:
      operationId: road_marking_plans_create
      summary: Create new RoadMarking Plan
      tags:
      - road-marking-plans
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoadMarkingPlanInputRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RoadMarkingPlanInputRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RoadMarkingPlanInputRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoadMarkingPlanInput'
          description: ''
  /v1/road-marking-plans/{id}/:
    get:
      operationId: road_marking_plans_retrieve
      summary: Retrieve single RoadMarking Plan
      parameters:
      - in: query
        name: geo_format
        schema:
          type: string
          enum:
          - default
          - geojson
        description: Determine whether the location should be in EWKT (default) or
          GeoJSON format.
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Road Marking Plan.
        required: true
      tags:
      - road-marking-plans
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoadMarkingPlanOutput'
          description: ''
    put:
      operationId: road_marking_plans_update
      summary: Update single RoadMarking Plan
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Road Marking Plan.
        required: true
      tags:
      - road-marking-plans
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoadMarkingPlanInputRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RoadMarkingPlanInputRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RoadMarkingPlanInputRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoadMarkingPlanInput'
          description: ''
    patch:
      operationId: road_marking_plans_partial_update
      summary: Partially update single RoadMarking Plan
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Road Marking Plan.
        required: true
      tags:
      - road-marking-plans
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRoadMarkingPlanInputRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedRoadMarkingPlanInputRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedRoadMarkingPlanInputRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoadMarkingPlanInput'
          description: ''
    delete:
      operationId: road_marking_plans_destroy
      summary: Soft-delete single RoadMarking Plan
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Road Marking Plan.
        required: true
      tags:
      - road-marking-plans
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /v1/road-marking-plans/{id}/files/:
    post:
      operationId: road_marking_plans_files_create
      summary: Add one or more files to RoadMarking Plan
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Road Marking Plan.
        required: true
      tags:
      - road-marking-plans
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MultiFileUploadSchemaRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoadMarkingPlanFileCreateResponse'
          description: ''
  /v1/road-marking-plans/{id}/files/{file_pk}/:
    patch:
      operationId: road_marking_plans_files_partial_update
      summary: Update single file from RoadMarking Plan
      parameters:
      - in: path
        name: file_pk
        schema:
          type: string
          format: uuid
        description: File object UUID
        required: true
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Road Marking Plan.
        required: true
      tags:
      - road-marking-plans
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFileUploadSchemaRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoadMarkingPlanFile'
          description: ''
    delete:
      operationId: road_marking_plans_files_destroy
      summary: Delete single file from RoadMarking Plan
      parameters:
      - in: path
        name: file_pk
        schema:
          type: string
          format: uuid
        description: File object UUID
        required: true
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Road Marking Plan.
        required: true
      tags:
      - road-marking-plans
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /v1/road-marking-reals/:
    get:
      operationId: road_marking_reals_list
      summary: Retrieve all RoadMarking Reals
      parameters:
      - in: query
        name: additional_info
        schema:
          type: string
      - in: query
        name: amount
        schema:
          type: string
      - in: query
        name: arrow_direction
        schema:
          type: integer
          nullable: true
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
        description: |-
          Direction of the arrow on the road.

          * `1` - Straight
          * `2` - Right
          * `3` - Right and straight
          * `4` - Left
          * `5` - Left and straight
          * `6` - Lane ends
          * `7` - Right and left
          * `8` - Straight, right and left
      - in: query
        name: color
        schema:
          type: integer
          nullable: true
          enum:
          - 1
          - 2
        description: |-
          * `1` - White
          * `2` - Yellow
      - in: query
        name: condition
        schema:
          type: integer
          nullable: true
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
        description: |-
          Describes the condition of this device.

          * `1` - Very bad
          * `2` - Bad
          * `3` - Average
          * `4` - Good
          * `5` - Very good
      - in: query
        name: created_at
        schema:
          type: string
          format: date-time
      - in: query
        name: created_by
        schema:
          type: string
          format: uuid
      - in: query
        name: deleted_at
        schema:
          type: string
          format: date-time
      - in: query
        name: deleted_by
        schema:
          type: string
          format: uuid
      - in: query
        name: device_type
        schema:
          type: string
          format: uuid
      - in: query
        name: geo_format
        schema:
          type: string
          enum:
          - default
          - geojson
        description: Determine whether the location should be in EWKT (default) or
          GeoJSON format.
      - in: query
        name: id
        schema:
          type: string
          format: uuid
      - in: query
        name: installation_date
        schema:
          type: string
          format: date
      - in: query
        name: installation_status
        schema:
          type: string
          nullable: true
          enum:
          - COVERED
          - FALLEN
          - IN_USE
          - MISSING
          - OTHER
        description: |-
          Describes this devices installation status.

          * `IN_USE` - In use
          * `COVERED` - Covered
          * `FALLEN` - Fallen
          * `MISSING` - Missing
          * `OTHER` - Other
      - in: query
        name: is_active
        schema:
          type: boolean
      - in: query
        name: is_grinded
        schema:
          type: boolean
      - in: query
        name: is_raised
        schema:
          type: boolean
      - in: query
        name: lane_number
        schema:
          type: string
          nullable: true
          enum:
          - '11'
          - '21'
          - '31'
          - X2
          - X3
          - X4
          - X5
          - X6
          - X7
          - X8
          - X9
        description: |-
          Describes which lane of the road this road marking affects.

          * `11` - Main lane
          * `21` - Main lane
          * `31` - Lane allowing traffic to both directions
          * `X2` - First left additional lane
          * `X3` - First right additional lane
          * `X4` - Second left additional lane
          * `X5` - Second right additional lane
          * `X6` - Third left additional lane
          * `X7` - Third right additional lane
          * `X8` - Fourth left additional lane
          * `X9` - Fourth right additional lane
      - in: query
        name: lane_type
        schema:
          type: string
          nullable: true
          enum:
          - '1'
          - '10'
          - '11'
          - '2'
          - '20'
          - '21'
          - '22'
          - '3'
          - '4'
          - '5'
          - '6'
          - '7'
          - '8'
          - '9'
        description: |-
          The type of lane which this road marking affects.

          * `1` - Main lane
          * `2` - Fast lane
          * `3` - Turn right lane
          * `4` - Turn left lane
          * `5` - Auxiliary straight lane
          * `6` - Merge lane
          * `7` - Exit lane
          * `8` - Weaving lane
          * `9` - Public transport lane / taxi lane
          * `10` - Heavy vehicle lane
          * `11` - Reversible lane
          * `20` - Pedestrian and bike lane
          * `21` - Pedestrian lane
          * `22` - Bike lane
      - in: query
        name: length
        schema:
          type: integer
      - in: query
        name: lifecycle
        schema:
          type: integer
          enum:
          - 3
          - 4
          - 5
          - 6
        description: |-
          Lifecycle of the device, which describes the activity status of the device.

          * `3` - Active
          * `4` - Temporarily active
          * `5` - Temporarily inactive
          * `6` - Inactive
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: line_direction
        schema:
          type: string
          nullable: true
          enum:
          - BACKWARD
          - FORWARD
        description: |-
          * `FORWARD` - Forward
          * `BACKWARD` - Backward
      - in: query
        name: location
        schema:
          type: string
          format: EWKT
        description: Location (2D or 3D) to search devices
        examples:
          --: {}
          2DPolygonArea(Katajanokka):
            value: POLYGON ((25497733 6672927, 25497946 6673032, 25498653 6673034,
              25498987 6672708, 25498314 6672170, 25497651 6672629, 25497646 6672775,
              25497733 6672927))
            summary: 2D polygon area (Katajanokka)
      - in: query
        name: location_specifier
        schema:
          type: integer
          nullable: true
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
        description: |-
          Specifies where the road marking is in relation to the lane.

          * `1` - Both sides of road
          * `2` - Right side of lane
          * `3` - Left side of lane
          * `4` - Both sides of lane
          * `5` - Middle of lane
          * `6` - Left side of lane or road
      - in: query
        name: material
        schema:
          type: string
      - in: query
        name: missing_traffic_sign_real_txt
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: owner
        schema:
          type: string
          format: uuid
      - in: query
        name: responsible_entity
        schema:
          type: string
          format: uuid
      - in: query
        name: road_marking_plan
        schema:
          type: string
          format: uuid
      - in: query
        name: road_name
        schema:
          type: string
      - in: query
        name: seasonal_validity_period_end
        schema:
          type: string
          format: date
      - in: query
        name: seasonal_validity_period_start
        schema:
          type: string
          format: date
      - in: query
        name: size
        schema:
          type: string
      - in: query
        name: source_id
        schema:
          type: string
      - in: query
        name: source_name
        schema:
          type: string
      - in: query
        name: symbol
        schema:
          type: string
      - in: query
        name: traffic_sign_real
        schema:
          type: string
          format: uuid
      - in: query
        name: type_specifier
        schema:
          type: string
      - in: query
        name: updated_at
        schema:
          type: string
          format: date-time
      - in: query
        name: updated_by
        schema:
          type: string
          format: uuid
      - in: query
        name: validity_period_end
        schema:
          type: string
          format: date
      - in: query
        name: validity_period_start
        schema:
          type: string
          format: date
      - in: query
        name: value
        schema:
          type: string
      - in: query
        name: width
        schema:
          type: integer
      tags:
      - road-marking-reals
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRoadMarkingRealList'
          description: ''
    post:
      operationId: road_marking_reals_create
      summary: Create new RoadMarking Real
      tags:
      - road-marking-reals
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoadMarkingRealRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RoadMarkingRealRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RoadMarkingRealRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoadMarkingReal'
          description: ''
  /v1/road-marking-reals/{id}/:
    get:
      operationId: road_marking_reals_retrieve
      summary: Retrieve single RoadMarking Real
      parameters:
      - in: query
        name: geo_format
        schema:
          type: string
          enum:
          - default
          - geojson
        description: Determine whether the location should be in EWKT (default) or
          GeoJSON format.
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Road Marking Real.
        required: true
      tags:
      - road-marking-reals
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoadMarkingReal'
          description: ''
    put:
      operationId: road_marking_reals_update
      summary: Update single RoadMarking Real
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Road Marking Real.
        required: true
      tags:
      - road-marking-reals
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoadMarkingRealRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RoadMarkingRealRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RoadMarkingRealRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoadMarkingReal'
          description: ''
    patch:
      operationId: road_marking_reals_partial_update
      summary: Partially update single RoadMarking Real
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Road Marking Real.
        required: true
      tags:
      - road-marking-reals
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRoadMarkingRealRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedRoadMarkingRealRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedRoadMarkingRealRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoadMarkingReal'
          description: ''
    delete:
      operationId: road_marking_reals_destroy
      summary: Soft-delete single RoadMarking Real
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Road Marking Real.
        required: true
      tags:
      - road-marking-reals
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /v1/road-marking-reals/{id}/files/:
    post:
      operationId: road_marking_reals_files_create
      summary: Add one or more files to RoadMarking Real
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Road Marking Real.
        required: true
      tags:
      - road-marking-reals
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MultiFileUploadSchemaRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoadMarkingRealFileCreateResponse'
          description: ''
  /v1/road-marking-reals/{id}/files/{file_pk}/:
    patch:
      operationId: road_marking_reals_files_partial_update
      summary: Update single file from RoadMarking Real
      parameters:
      - in: path
        name: file_pk
        schema:
          type: string
          format: uuid
        description: File object UUID
        required: true
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Road Marking Real.
        required: true
      tags:
      - road-marking-reals
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFileUploadSchemaRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoadMarkingRealFile'
          description: ''
    delete:
      operationId: road_marking_reals_files_destroy
      summary: Delete single file from RoadMarking Real
      parameters:
      - in: path
        name: file_pk
        schema:
          type: string
          format: uuid
        description: File object UUID
        required: true
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Road Marking Real.
        required: true
      tags:
      - road-marking-reals
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /v1/road-marking-reals/{road_marking_real_pk}/operations/:
    get:
      operationId: road_marking_reals_operations_list
      summary: Retrieve all operations of a road marking real
      parameters:
      - in: query
        name: created_at
        schema:
          type: string
          format: date-time
      - in: query
        name: created_by
        schema:
          type: string
          format: uuid
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: operation_date
        schema:
          type: string
          format: date
      - in: query
        name: operation_type
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: quality_requirements_fulfilled
        schema:
          type: boolean
      - in: query
        name: road_marking_real
        schema:
          type: string
          format: uuid
      - in: path
        name: road_marking_real_pk
        schema:
          type: string
          format: uuid
        required: true
      - in: query
        name: straightness_value
        schema:
          type: number
          format: float
      - in: query
        name: updated_at
        schema:
          type: string
          format: date-time
      - in: query
        name: updated_by
        schema:
          type: string
          format: uuid
      tags:
      - road-marking-reals
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRoadMarkingRealOperationList'
          description: ''
    post:
      operationId: road_marking_reals_operations_create
      summary: Add a new operation to a road marking real
      parameters:
      - in: path
        name: road_marking_real_pk
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - road-marking-reals
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoadMarkingRealOperationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RoadMarkingRealOperationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RoadMarkingRealOperationRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoadMarkingRealOperation'
          description: ''
  /v1/road-marking-reals/{road_marking_real_pk}/operations/{id}/:
    get:
      operationId: road_marking_reals_operations_retrieve
      summary: Retrieve an operation of a road marking real
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Road marking real operation.
        required: true
      - in: path
        name: road_marking_real_pk
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - road-marking-reals
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoadMarkingRealOperation'
          description: ''
    put:
      operationId: road_marking_reals_operations_update
      summary: Update an operation of a road marking real
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Road marking real operation.
        required: true
      - in: path
        name: road_marking_real_pk
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - road-marking-reals
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoadMarkingRealOperationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RoadMarkingRealOperationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RoadMarkingRealOperationRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoadMarkingRealOperation'
          description: ''
    patch:
      operationId: road_marking_reals_operations_partial_update
      summary: Partially update an operation of a road marking real
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Road marking real operation.
        required: true
      - in: path
        name: road_marking_real_pk
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - road-marking-reals
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRoadMarkingRealOperationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedRoadMarkingRealOperationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedRoadMarkingRealOperationRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoadMarkingRealOperation'
          description: ''
    delete:
      operationId: road_marking_reals_operations_destroy
      summary: Delete an operation of a road marking real
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Road marking real operation.
        required: true
      - in: path
        name: road_marking_real_pk
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - road-marking-reals
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /v1/signpost-plans/:
    get:
      operationId: signpost_plans_list
      summary: Retrieve all Signpost Plans
      parameters:
      - in: query
        name: attachment_class
        schema:
          type: string
      - in: query
        name: created_at
        schema:
          type: string
          format: date-time
      - in: query
        name: created_by
        schema:
          type: string
          format: uuid
      - in: query
        name: deleted_at
        schema:
          type: string
          format: date-time
      - in: query
        name: deleted_by
        schema:
          type: string
          format: uuid
      - in: query
        name: device_type
        schema:
          type: string
          format: uuid
      - in: query
        name: direction
        schema:
          type: integer
      - in: query
        name: electric_maintainer
        schema:
          type: string
      - in: query
        name: geo_format
        schema:
          type: string
          enum:
          - default
          - geojson
        description: Determine whether the location should be in EWKT (default) or
          GeoJSON format.
      - in: query
        name: height
        schema:
          type: number
      - in: query
        name: id
        schema:
          type: string
          format: uuid
      - in: query
        name: is_active
        schema:
          type: boolean
      - in: query
        name: is_replaced
        schema:
          type: string
          enum:
          - All
          - 'false'
          - 'true'
        description: |-
          Plan replacement

          * `All` - ALL
          * `true` - true
          * `false` - false
      - in: query
        name: lane_number
        schema:
          type: string
          nullable: true
          enum:
          - '11'
          - '21'
          - '31'
          - X2
          - X3
          - X4
          - X5
          - X6
          - X7
          - X8
          - X9
        description: |-
          Describes which lane of the road this sign affects.

          * `11` - Main lane
          * `21` - Main lane
          * `31` - Lane allowing traffic to both directions
          * `X2` - First left additional lane
          * `X3` - First right additional lane
          * `X4` - Second left additional lane
          * `X5` - Second right additional lane
          * `X6` - Third left additional lane
          * `X7` - Third right additional lane
          * `X8` - Fourth left additional lane
          * `X9` - Fourth right additional lane
      - in: query
        name: lane_type
        schema:
          type: string
          nullable: true
          enum:
          - '1'
          - '10'
          - '11'
          - '2'
          - '20'
          - '21'
          - '22'
          - '3'
          - '4'
          - '5'
          - '6'
          - '7'
          - '8'
          - '9'
        description: |-
          The type of lane which this sign affects.

          * `1` - Main lane
          * `2` - Fast lane
          * `3` - Turn right lane
          * `4` - Turn left lane
          * `5` - Auxiliary straight lane
          * `6` - Merge lane
          * `7` - Exit lane
          * `8` - Weaving lane
          * `9` - Public transport lane / taxi lane
          * `10` - Heavy vehicle lane
          * `11` - Reversible lane
          * `20` - Pedestrian and bike lane
          * `21` - Pedestrian lane
          * `22` - Bike lane
      - in: query
        name: lifecycle
        schema:
          type: integer
          enum:
          - 3
          - 4
          - 5
          - 6
        description: |-
          Lifecycle of the device, which describes the activity status of the device.

          * `3` - Active
          * `4` - Temporarily active
          * `5` - Temporarily inactive
          * `6` - Inactive
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: location
        schema:
          type: string
      - in: query
        name: location_specifier
        schema:
          type: integer
          nullable: true
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
        description: |-
          Specifies where the sign is in relation to the road.

          * `1` - Right side
          * `2` - Left side
          * `3` - Above
          * `4` - Middle
          * `5` - Vertical
          * `6` - Outside
      - in: query
        name: mount_plan
        schema:
          type: string
          format: uuid
      - in: query
        name: mount_type
        schema:
          type: string
          format: uuid
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: owner
        schema:
          type: string
          format: uuid
      - in: query
        name: parent
        schema:
          type: string
          format: uuid
      - in: query
        name: plan
        schema:
          type: string
          format: uuid
      - in: query
        name: reflection_class
        schema:
          type: string
          nullable: true
          title: Reflection
          enum:
          - R1
          - R2
          - R3
        description: |-
          * `R1` - r1
          * `R2` - r2
          * `R3` - r3
      - in: query
        name: responsible_entity
        schema:
          type: string
          format: uuid
      - in: query
        name: road_name
        schema:
          type: string
      - in: query
        name: seasonal_validity_period_end
        schema:
          type: string
          format: date
      - in: query
        name: seasonal_validity_period_start
        schema:
          type: string
          format: date
      - in: query
        name: size
        schema:
          type: string
          nullable: true
          enum:
          - L
          - M
          - S
        description: |-
          * `S` - Small
          * `M` - Medium
          * `L` - Large
      - in: query
        name: source_id
        schema:
          type: string
      - in: query
        name: source_name
        schema:
          type: string
      - in: query
        name: target_id
        schema:
          type: string
      - in: query
        name: target_txt
        schema:
          type: string
      - in: query
        name: txt
        schema:
          type: string
      - in: query
        name: updated_at
        schema:
          type: string
          format: date-time
      - in: query
        name: updated_by
        schema:
          type: string
          format: uuid
      - in: query
        name: validity_period_end
        schema:
          type: string
          format: date
      - in: query
        name: validity_period_start
        schema:
          type: string
          format: date
      - in: query
        name: value
        schema:
          type: number
      tags:
      - signpost-plans
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSignpostPlanOutputList'
          description: ''
    post:
      operationId: signpost_plans_create
      summary: Create new Signpost Plan
      tags:
      - signpost-plans
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignpostPlanInputRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SignpostPlanInputRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SignpostPlanInputRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignpostPlanInput'
          description: ''
  /v1/signpost-plans/{id}/:
    get:
      operationId: signpost_plans_retrieve
      summary: Retrieve single Signpost Plan
      parameters:
      - in: query
        name: geo_format
        schema:
          type: string
          enum:
          - default
          - geojson
        description: Determine whether the location should be in EWKT (default) or
          GeoJSON format.
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Signpost Plan.
        required: true
      - in: query
        name: location
        schema:
          type: string
          format: EWKT
        description: Location (2D or 3D) to search devices
        examples:
          --: {}
          2DPolygonArea(Katajanokka):
            value: POLYGON ((25497733 6672927, 25497946 6673032, 25498653 6673034,
              25498987 6672708, 25498314 6672170, 25497651 6672629, 25497646 6672775,
              25497733 6672927))
            summary: 2D polygon area (Katajanokka)
      tags:
      - signpost-plans
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignpostPlanOutput'
          description: ''
    put:
      operationId: signpost_plans_update
      summary: Update single Signpost Plan
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Signpost Plan.
        required: true
      tags:
      - signpost-plans
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignpostPlanInputRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SignpostPlanInputRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SignpostPlanInputRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignpostPlanInput'
          description: ''
    patch:
      operationId: signpost_plans_partial_update
      summary: Partially update single Signpost Plan
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Signpost Plan.
        required: true
      tags:
      - signpost-plans
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSignpostPlanInputRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSignpostPlanInputRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSignpostPlanInputRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignpostPlanInput'
          description: ''
    delete:
      operationId: signpost_plans_destroy
      summary: Soft-delete single Signpost Plan
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Signpost Plan.
        required: true
      tags:
      - signpost-plans
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /v1/signpost-plans/{id}/files/:
    post:
      operationId: signpost_plans_files_create
      summary: Add one or more files to Signpost Plan
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Signpost Plan.
        required: true
      tags:
      - signpost-plans
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MultiFileUploadSchemaRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignpostPlanFileCreateResponse'
          description: ''
  /v1/signpost-plans/{id}/files/{file_pk}/:
    patch:
      operationId: signpost_plans_files_partial_update
      summary: Update single file from Signpost Plan
      parameters:
      - in: path
        name: file_pk
        schema:
          type: string
          format: uuid
        description: File object UUID
        required: true
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Signpost Plan.
        required: true
      tags:
      - signpost-plans
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFileUploadSchemaRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignpostPlanFile'
          description: ''
    delete:
      operationId: signpost_plans_files_destroy
      summary: Delete single file from Signpost Plan
      parameters:
      - in: path
        name: file_pk
        schema:
          type: string
          format: uuid
        description: File object UUID
        required: true
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Signpost Plan.
        required: true
      tags:
      - signpost-plans
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /v1/signpost-reals/:
    get:
      operationId: signpost_reals_list
      summary: Retrieve all Signpost Reals
      parameters:
      - in: query
        name: attachment_class
        schema:
          type: string
      - in: query
        name: condition
        schema:
          type: integer
          nullable: true
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
        description: |-
          Describes the condition of this device.

          * `1` - Very bad
          * `2` - Bad
          * `3` - Average
          * `4` - Good
          * `5` - Very good
      - in: query
        name: created_at
        schema:
          type: string
          format: date-time
      - in: query
        name: created_by
        schema:
          type: string
          format: uuid
      - in: query
        name: deleted_at
        schema:
          type: string
          format: date-time
      - in: query
        name: deleted_by
        schema:
          type: string
          format: uuid
      - in: query
        name: device_type
        schema:
          type: string
          format: uuid
      - in: query
        name: direction
        schema:
          type: integer
      - in: query
        name: electric_maintainer
        schema:
          type: string
      - in: query
        name: geo_format
        schema:
          type: string
          enum:
          - default
          - geojson
        description: Determine whether the location should be in EWKT (default) or
          GeoJSON format.
      - in: query
        name: height
        schema:
          type: number
      - in: query
        name: id
        schema:
          type: string
          format: uuid
      - in: query
        name: installation_date
        schema:
          type: string
          format: date
      - in: query
        name: installation_status
        schema:
          type: string
          nullable: true
          enum:
          - COVERED
          - FALLEN
          - IN_USE
          - MISSING
          - OTHER
        description: |-
          Describes this devices installation status.

          * `IN_USE` - In use
          * `COVERED` - Covered
          * `FALLEN` - Fallen
          * `MISSING` - Missing
          * `OTHER` - Other
      - in: query
        name: is_active
        schema:
          type: boolean
      - in: query
        name: lane_number
        schema:
          type: string
          nullable: true
          enum:
          - '11'
          - '21'
          - '31'
          - X2
          - X3
          - X4
          - X5
          - X6
          - X7
          - X8
          - X9
        description: |-
          Describes which lane of the road this sign affects.

          * `11` - Main lane
          * `21` - Main lane
          * `31` - Lane allowing traffic to both directions
          * `X2` - First left additional lane
          * `X3` - First right additional lane
          * `X4` - Second left additional lane
          * `X5` - Second right additional lane
          * `X6` - Third left additional lane
          * `X7` - Third right additional lane
          * `X8` - Fourth left additional lane
          * `X9` - Fourth right additional lane
      - in: query
        name: lane_type
        schema:
          type: string
          nullable: true
          enum:
          - '1'
          - '10'
          - '11'
          - '2'
          - '20'
          - '21'
          - '22'
          - '3'
          - '4'
          - '5'
          - '6'
          - '7'
          - '8'
          - '9'
        description: |-
          The type of lane which this sign affects.

          * `1` - Main lane
          * `2` - Fast lane
          * `3` - Turn right lane
          * `4` - Turn left lane
          * `5` - Auxiliary straight lane
          * `6` - Merge lane
          * `7` - Exit lane
          * `8` - Weaving lane
          * `9` - Public transport lane / taxi lane
          * `10` - Heavy vehicle lane
          * `11` - Reversible lane
          * `20` - Pedestrian and bike lane
          * `21` - Pedestrian lane
          * `22` - Bike lane
      - in: query
        name: lifecycle
        schema:
          type: integer
          enum:
          - 3
          - 4
          - 5
          - 6
        description: |-
          Lifecycle of the device, which describes the activity status of the device.

          * `3` - Active
          * `4` - Temporarily active
          * `5` - Temporarily inactive
          * `6` - Inactive
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: location
        schema:
          type: string
          format: EWKT
        description: Location (2D or 3D) to search devices
        examples:
          --: {}
          2DPolygonArea(Katajanokka):
            value: POLYGON ((25497733 6672927, 25497946 6673032, 25498653 6673034,
              25498987 6672708, 25498314 6672170, 25497651 6672629, 25497646 6672775,
              25497733 6672927))
            summary: 2D polygon area (Katajanokka)
      - in: query
        name: location_specifier
        schema:
          type: integer
          nullable: true
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
        description: |-
          Specifies where the sign is in relation to the road.

          * `1` - Right side
          * `2` - Left side
          * `3` - Above
          * `4` - Middle
          * `5` - Vertical
          * `6` - Outside
      - in: query
        name: manufacturer
        schema:
          type: string
      - in: query
        name: material
        schema:
          type: string
      - in: query
        name: mount_real
        schema:
          type: string
          format: uuid
      - in: query
        name: mount_type
        schema:
          type: string
          format: uuid
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: organization
        schema:
          type: string
      - in: query
        name: owner
        schema:
          type: string
          format: uuid
      - in: query
        name: parent
        schema:
          type: string
          format: uuid
      - in: query
        name: reflection_class
        schema:
          type: string
          nullable: true
          title: Reflection
          enum:
          - R1
          - R2
          - R3
        description: |-
          * `R1` - r1
          * `R2` - r2
          * `R3` - r3
      - in: query
        name: responsible_entity
        schema:
          type: string
          format: uuid
      - in: query
        name: road_name
        schema:
          type: string
      - in: query
        name: scanned_at
        schema:
          type: string
          format: date-time
      - in: query
        name: seasonal_validity_period_end
        schema:
          type: string
          format: date
      - in: query
        name: seasonal_validity_period_start
        schema:
          type: string
          format: date
      - in: query
        name: signpost_plan
        schema:
          type: string
          format: uuid
      - in: query
        name: size
        schema:
          type: string
          nullable: true
          enum:
          - L
          - M
          - S
        description: |-
          * `S` - Small
          * `M` - Medium
          * `L` - Large
      - in: query
        name: source_id
        schema:
          type: string
      - in: query
        name: source_name
        schema:
          type: string
      - in: query
        name: target_id
        schema:
          type: string
      - in: query
        name: target_txt
        schema:
          type: string
      - in: query
        name: txt
        schema:
          type: string
      - in: query
        name: updated_at
        schema:
          type: string
          format: date-time
      - in: query
        name: updated_by
        schema:
          type: string
          format: uuid
      - in: query
        name: validity_period_end
        schema:
          type: string
          format: date
      - in: query
        name: validity_period_start
        schema:
          type: string
          format: date
      - in: query
        name: value
        schema:
          type: number
      tags:
      - signpost-reals
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSignpostRealList'
          description: ''
    post:
      operationId: signpost_reals_create
      summary: Create new Signpost Real
      tags:
      - signpost-reals
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignpostRealRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SignpostRealRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SignpostRealRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignpostReal'
          description: ''
  /v1/signpost-reals/{id}/:
    get:
      operationId: signpost_reals_retrieve
      summary: Retrieve single Signpost Real
      parameters:
      - in: query
        name: geo_format
        schema:
          type: string
          enum:
          - default
          - geojson
        description: Determine whether the location should be in EWKT (default) or
          GeoJSON format.
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Signpost Real.
        required: true
      tags:
      - signpost-reals
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignpostReal'
          description: ''
    put:
      operationId: signpost_reals_update
      summary: Update single Signpost Real
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Signpost Real.
        required: true
      tags:
      - signpost-reals
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignpostRealRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SignpostRealRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SignpostRealRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignpostReal'
          description: ''
    patch:
      operationId: signpost_reals_partial_update
      summary: Partially update single Signpost Real
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Signpost Real.
        required: true
      tags:
      - signpost-reals
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSignpostRealRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSignpostRealRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSignpostRealRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignpostReal'
          description: ''
    delete:
      operationId: signpost_reals_destroy
      summary: Soft-delete single Signpost Real
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Signpost Real.
        required: true
      tags:
      - signpost-reals
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /v1/signpost-reals/{id}/files/:
    post:
      operationId: signpost_reals_files_create
      summary: Add one or more files to Signpost Real
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Signpost Real.
        required: true
      tags:
      - signpost-reals
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MultiFileUploadSchemaRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignpostRealFileCreateResponse'
          description: ''
  /v1/signpost-reals/{id}/files/{file_pk}/:
    patch:
      operationId: signpost_reals_files_partial_update
      summary: Update single file from Signpost Real
      parameters:
      - in: path
        name: file_pk
        schema:
          type: string
          format: uuid
        description: File object UUID
        required: true
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Signpost Real.
        required: true
      tags:
      - signpost-reals
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFileUploadSchemaRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignpostRealFile'
          description: ''
    delete:
      operationId: signpost_reals_files_destroy
      summary: Delete single file from Signpost Real
      parameters:
      - in: path
        name: file_pk
        schema:
          type: string
          format: uuid
        description: File object UUID
        required: true
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Signpost Real.
        required: true
      tags:
      - signpost-reals
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /v1/signpost-reals/{signpost_real_pk}/operations/:
    get:
      operationId: signpost_reals_operations_list
      summary: Retrieve all operations of a signpost real
      parameters:
      - in: query
        name: created_at
        schema:
          type: string
          format: date-time
      - in: query
        name: created_by
        schema:
          type: string
          format: uuid
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: operation_date
        schema:
          type: string
          format: date
      - in: query
        name: operation_type
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: quality_requirements_fulfilled
        schema:
          type: boolean
      - in: query
        name: signpost_real
        schema:
          type: string
          format: uuid
      - in: path
        name: signpost_real_pk
        schema:
          type: string
          format: uuid
        required: true
      - in: query
        name: straightness_value
        schema:
          type: number
          format: float
      - in: query
        name: updated_at
        schema:
          type: string
          format: date-time
      - in: query
        name: updated_by
        schema:
          type: string
          format: uuid
      tags:
      - signpost-reals
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSignpostRealOperationList'
          description: ''
    post:
      operationId: signpost_reals_operations_create
      summary: Add a new operation to a signpost real
      parameters:
      - in: path
        name: signpost_real_pk
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - signpost-reals
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignpostRealOperationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SignpostRealOperationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SignpostRealOperationRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignpostRealOperation'
          description: ''
  /v1/signpost-reals/{signpost_real_pk}/operations/{id}/:
    get:
      operationId: signpost_reals_operations_retrieve
      summary: Retrieve an operation of a signpost real
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Signpost real operation.
        required: true
      - in: path
        name: signpost_real_pk
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - signpost-reals
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignpostRealOperation'
          description: ''
    put:
      operationId: signpost_reals_operations_update
      summary: Update an operation of a signpost real
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Signpost real operation.
        required: true
      - in: path
        name: signpost_real_pk
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - signpost-reals
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignpostRealOperationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SignpostRealOperationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SignpostRealOperationRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignpostRealOperation'
          description: ''
    patch:
      operationId: signpost_reals_operations_partial_update
      summary: Partially update an operation of a signpost real
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Signpost real operation.
        required: true
      - in: path
        name: signpost_real_pk
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - signpost-reals
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSignpostRealOperationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSignpostRealOperationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSignpostRealOperationRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignpostRealOperation'
          description: ''
    delete:
      operationId: signpost_reals_operations_destroy
      summary: Delete an operation of a signpost real
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Signpost real operation.
        required: true
      - in: path
        name: signpost_real_pk
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - signpost-reals
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /v1/traffic-control-device-types/:
    get:
      operationId: traffic_control_device_types_list
      summary: Retrieve all TrafficSign Codes
      parameters:
      - in: query
        name: code
        schema:
          type: string
      - in: query
        name: description
        schema:
          type: string
      - in: query
        name: icon
        schema:
          type: string
      - in: query
        name: id
        schema:
          type: string
          format: uuid
      - in: query
        name: legacy_code
        schema:
          type: string
      - in: query
        name: legacy_description
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: size
        schema:
          type: string
      - in: query
        name: target_model
        schema:
          type: string
          nullable: true
          title: Target data model
          enum:
          - additional_sign
          - barrier
          - other
          - road_marking
          - signpost
          - traffic_light
          - traffic_sign
        description: |-
          Target data model

          * `barrier` - Barrier
          * `road_marking` - Road marking
          * `signpost` - Signpost
          * `traffic_light` - Traffic light
          * `traffic_sign` - Traffic sign
          * `additional_sign` - Additional sign
          * `other` - Other
      - in: query
        name: traffic_sign_type
        schema:
          type: string
          enum:
          - A
          - B
          - C
          - D
          - E
          - F
          - G
          - H
          - I
        description: |-
          Traffic sign type

          * `A` - Warning sign
          * `B` - Priority or give-way sign
          * `C` - Prohibitory or restrictive sign
          * `D` - Mandatory sign
          * `E` - Regulatory sign
          * `F` - Information sign
          * `G` - Service sign
          * `H` - Additional sign
          * `I` - Other road sign
      - in: query
        name: type
        schema:
          type: string
          nullable: true
          enum:
          - longitudinal
          - other
          - transverse
        description: |-
          * `longitudinal` - Longitudinal
          * `transverse` - Transverse
          * `other` - Other road marking
      - in: query
        name: unit
        schema:
          type: string
      - in: query
        name: value
        schema:
          type: string
      tags:
      - traffic-control-device-types
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTrafficControlDeviceTypeList'
          description: ''
    post:
      operationId: traffic_control_device_types_create
      summary: Create new TrafficSign Code
      tags:
      - traffic-control-device-types
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrafficControlDeviceTypeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TrafficControlDeviceTypeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TrafficControlDeviceTypeRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrafficControlDeviceType'
          description: ''
  /v1/traffic-control-device-types/{id}/:
    get:
      operationId: traffic_control_device_types_retrieve
      summary: Retrieve single TrafficSign Code
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Traffic Control Device Type.
        required: true
      tags:
      - traffic-control-device-types
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrafficControlDeviceType'
          description: ''
    put:
      operationId: traffic_control_device_types_update
      summary: Update single TrafficSign Code
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Traffic Control Device Type.
        required: true
      tags:
      - traffic-control-device-types
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrafficControlDeviceTypeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TrafficControlDeviceTypeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TrafficControlDeviceTypeRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrafficControlDeviceType'
          description: ''
    patch:
      operationId: traffic_control_device_types_partial_update
      summary: Partially update single TrafficSign Code
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Traffic Control Device Type.
        required: true
      tags:
      - traffic-control-device-types
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTrafficControlDeviceTypeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTrafficControlDeviceTypeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTrafficControlDeviceTypeRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrafficControlDeviceType'
          description: ''
    delete:
      operationId: traffic_control_device_types_destroy
      summary: Delete single TrafficSign Code
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Traffic Control Device Type.
        required: true
      tags:
      - traffic-control-device-types
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /v1/traffic-light-plans/:
    get:
      operationId: traffic_light_plans_list
      summary: Retrieve all TrafficLight Plans
      parameters:
      - in: query
        name: created_at
        schema:
          type: string
          format: date-time
      - in: query
        name: created_by
        schema:
          type: string
          format: uuid
      - in: query
        name: deleted_at
        schema:
          type: string
          format: date-time
      - in: query
        name: deleted_by
        schema:
          type: string
          format: uuid
      - in: query
        name: device_type
        schema:
          type: string
          format: uuid
      - in: query
        name: direction
        schema:
          type: integer
      - in: query
        name: geo_format
        schema:
          type: string
          enum:
          - default
          - geojson
        description: Determine whether the location should be in EWKT (default) or
          GeoJSON format.
      - in: query
        name: height
        schema:
          type: number
      - in: query
        name: id
        schema:
          type: string
          format: uuid
      - in: query
        name: is_active
        schema:
          type: boolean
      - in: query
        name: is_replaced
        schema:
          type: string
          enum:
          - All
          - 'false'
          - 'true'
        description: |-
          Plan replacement

          * `All` - ALL
          * `true` - true
          * `false` - false
      - in: query
        name: lane_number
        schema:
          type: string
          nullable: true
          enum:
          - '11'
          - '21'
          - '31'
          - X2
          - X3
          - X4
          - X5
          - X6
          - X7
          - X8
          - X9
        description: |-
          Describes which lane of the road this traffic light affects.

          * `11` - Main lane
          * `21` - Main lane
          * `31` - Lane allowing traffic to both directions
          * `X2` - First left additional lane
          * `X3` - First right additional lane
          * `X4` - Second left additional lane
          * `X5` - Second right additional lane
          * `X6` - Third left additional lane
          * `X7` - Third right additional lane
          * `X8` - Fourth left additional lane
          * `X9` - Fourth right additional lane
      - in: query
        name: lane_type
        schema:
          type: string
          nullable: true
          enum:
          - '1'
          - '10'
          - '11'
          - '2'
          - '20'
          - '21'
          - '22'
          - '3'
          - '4'
          - '5'
          - '6'
          - '7'
          - '8'
          - '9'
        description: |-
          The type of lane which this traffic light affects.

          * `1` - Main lane
          * `2` - Fast lane
          * `3` - Turn right lane
          * `4` - Turn left lane
          * `5` - Auxiliary straight lane
          * `6` - Merge lane
          * `7` - Exit lane
          * `8` - Weaving lane
          * `9` - Public transport lane / taxi lane
          * `10` - Heavy vehicle lane
          * `11` - Reversible lane
          * `20` - Pedestrian and bike lane
          * `21` - Pedestrian lane
          * `22` - Bike lane
      - in: query
        name: lifecycle
        schema:
          type: integer
          enum:
          - 3
          - 4
          - 5
          - 6
        description: |-
          Lifecycle of the device, which describes the activity status of the device.

          * `3` - Active
          * `4` - Temporarily active
          * `5` - Temporarily inactive
          * `6` - Inactive
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: location
        schema:
          type: string
          format: EWKT
        description: Location (2D or 3D) to search devices
        examples:
          --: {}
          2DPolygonArea(Katajanokka):
            value: POLYGON ((25497733 6672927, 25497946 6673032, 25498653 6673034,
              25498987 6672708, 25498314 6672170, 25497651 6672629, 25497646 6672775,
              25497733 6672927))
            summary: 2D polygon area (Katajanokka)
      - in: query
        name: location_specifier
        schema:
          type: integer
          nullable: true
          enum:
          - 1
          - 2
          - 3
        description: |-
          Specifies where the traffic light is in relation to the road.

          * `1` - Right side of the road (relative to traffic direction)
          * `2` - Above the lanes
          * `3` - Island
      - in: query
        name: mount_plan
        schema:
          type: string
          format: uuid
      - in: query
        name: mount_type
        schema:
          type: string
          format: uuid
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: owner
        schema:
          type: string
          format: uuid
      - in: query
        name: plan
        schema:
          type: string
          format: uuid
      - in: query
        name: push_button
        schema:
          type: integer
          nullable: true
          enum:
          - 1
          - 2
        description: |-
          Describes if this traffic light has a push button attached.

          * `1` - No
          * `2` - Yes
      - in: query
        name: responsible_entity
        schema:
          type: string
          format: uuid
      - in: query
        name: road_name
        schema:
          type: string
      - in: query
        name: sound_beacon
        schema:
          type: integer
          nullable: true
          enum:
          - 1
          - 2
        description: |-
          Describes if this traffic light has a sound beacon attached.

          * `1` - No
          * `2` - Yes
      - in: query
        name: source_id
        schema:
          type: string
      - in: query
        name: source_name
        schema:
          type: string
      - in: query
        name: txt
        schema:
          type: string
      - in: query
        name: type
        schema:
          type: string
          nullable: true
          enum:
          - '1'
          - '10'
          - '11'
          - '4.1'
          - '4.2'
          - '5'
          - '8'
          - '9.1'
          - '9.2'
        description: |-
          Describes the type of traffic light this device is.

          * `1` - Traffic signal
          * `4.1` - Right-turn arrow signal
          * `4.2` - Left-turn arrow signal
          * `5` - Triangle signal
          * `8` - Public transport signal
          * `9.1` - Bicycle signal
          * `9.2` - Bicycle turn arrow signal
          * `10` - Pedestrian signal
          * `11` - Lane signal
      - in: query
        name: updated_at
        schema:
          type: string
          format: date-time
      - in: query
        name: updated_by
        schema:
          type: string
          format: uuid
      - in: query
        name: validity_period_end
        schema:
          type: string
          format: date
      - in: query
        name: validity_period_start
        schema:
          type: string
          format: date
      - in: query
        name: vehicle_recognition
        schema:
          type: integer
          nullable: true
          enum:
          - 1
          - 2
          - 3
          - 4
        description: |-
          Describes the type of vehicle recognition this traffic light has.

          * `1` - Loop sensor
          * `2` - Infrared sensor
          * `3` - Radar i.e. microwave sensor
          * `4` - Other
      tags:
      - traffic-light-plans
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTrafficLightPlanOutputList'
          description: ''
    post:
      operationId: traffic_light_plans_create
      summary: Create new TrafficLight Plan
      tags:
      - traffic-light-plans
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrafficLightPlanInputRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TrafficLightPlanInputRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TrafficLightPlanInputRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrafficLightPlanInput'
          description: ''
  /v1/traffic-light-plans/{id}/:
    get:
      operationId: traffic_light_plans_retrieve
      summary: Retrieve single TrafficLight Plan
      parameters:
      - in: query
        name: geo_format
        schema:
          type: string
          enum:
          - default
          - geojson
        description: Determine whether the location should be in EWKT (default) or
          GeoJSON format.
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Traffic Light Plan.
        required: true
      tags:
      - traffic-light-plans
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrafficLightPlanOutput'
          description: ''
    put:
      operationId: traffic_light_plans_update
      summary: Update single TrafficLight Plan
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Traffic Light Plan.
        required: true
      tags:
      - traffic-light-plans
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrafficLightPlanInputRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TrafficLightPlanInputRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TrafficLightPlanInputRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrafficLightPlanInput'
          description: ''
    patch:
      operationId: traffic_light_plans_partial_update
      summary: Partially update single TrafficLight Plan
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Traffic Light Plan.
        required: true
      tags:
      - traffic-light-plans
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTrafficLightPlanInputRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTrafficLightPlanInputRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTrafficLightPlanInputRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrafficLightPlanInput'
          description: ''
    delete:
      operationId: traffic_light_plans_destroy
      summary: Soft-delete single TrafficLight Plan
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Traffic Light Plan.
        required: true
      tags:
      - traffic-light-plans
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /v1/traffic-light-plans/{id}/files/:
    post:
      operationId: traffic_light_plans_files_create
      summary: Add one or more files to TrafficLight Plan
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Traffic Light Plan.
        required: true
      tags:
      - traffic-light-plans
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MultiFileUploadSchemaRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrafficLightPlanFileCreateResponse'
          description: ''
  /v1/traffic-light-plans/{id}/files/{file_pk}/:
    patch:
      operationId: traffic_light_plans_files_partial_update
      summary: Update single file from TrafficLight Plan
      parameters:
      - in: path
        name: file_pk
        schema:
          type: string
          format: uuid
        description: File object UUID
        required: true
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Traffic Light Plan.
        required: true
      tags:
      - traffic-light-plans
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFileUploadSchemaRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrafficLightPlanFile'
          description: ''
    delete:
      operationId: traffic_light_plans_files_destroy
      summary: Delete single file from TrafficLight Plan
      parameters:
      - in: path
        name: file_pk
        schema:
          type: string
          format: uuid
        description: File object UUID
        required: true
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Traffic Light Plan.
        required: true
      tags:
      - traffic-light-plans
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /v1/traffic-light-reals/:
    get:
      operationId: traffic_light_reals_list
      summary: Retrieve all TrafficLight Reals
      parameters:
      - in: query
        name: condition
        schema:
          type: integer
          nullable: true
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
        description: |-
          Describes the condition of this device.

          * `1` - Very bad
          * `2` - Bad
          * `3` - Average
          * `4` - Good
          * `5` - Very good
      - in: query
        name: created_at
        schema:
          type: string
          format: date-time
      - in: query
        name: created_by
        schema:
          type: string
          format: uuid
      - in: query
        name: deleted_at
        schema:
          type: string
          format: date-time
      - in: query
        name: deleted_by
        schema:
          type: string
          format: uuid
      - in: query
        name: device_type
        schema:
          type: string
          format: uuid
      - in: query
        name: direction
        schema:
          type: integer
      - in: query
        name: geo_format
        schema:
          type: string
          enum:
          - default
          - geojson
        description: Determine whether the location should be in EWKT (default) or
          GeoJSON format.
      - in: query
        name: height
        schema:
          type: number
      - in: query
        name: id
        schema:
          type: string
          format: uuid
      - in: query
        name: installation_date
        schema:
          type: string
          format: date
      - in: query
        name: installation_status
        schema:
          type: string
          nullable: true
          enum:
          - COVERED
          - FALLEN
          - IN_USE
          - MISSING
          - OTHER
        description: |-
          Describes this devices installation status.

          * `IN_USE` - In use
          * `COVERED` - Covered
          * `FALLEN` - Fallen
          * `MISSING` - Missing
          * `OTHER` - Other
      - in: query
        name: is_active
        schema:
          type: boolean
      - in: query
        name: lane_number
        schema:
          type: string
          nullable: true
          enum:
          - '11'
          - '21'
          - '31'
          - X2
          - X3
          - X4
          - X5
          - X6
          - X7
          - X8
          - X9
        description: |-
          Describes which lane of the road this traffic light affects.

          * `11` - Main lane
          * `21` - Main lane
          * `31` - Lane allowing traffic to both directions
          * `X2` - First left additional lane
          * `X3` - First right additional lane
          * `X4` - Second left additional lane
          * `X5` - Second right additional lane
          * `X6` - Third left additional lane
          * `X7` - Third right additional lane
          * `X8` - Fourth left additional lane
          * `X9` - Fourth right additional lane
      - in: query
        name: lane_type
        schema:
          type: string
          nullable: true
          enum:
          - '1'
          - '10'
          - '11'
          - '2'
          - '20'
          - '21'
          - '22'
          - '3'
          - '4'
          - '5'
          - '6'
          - '7'
          - '8'
          - '9'
        description: |-
          The type of lane which this traffic light affects.

          * `1` - Main lane
          * `2` - Fast lane
          * `3` - Turn right lane
          * `4` - Turn left lane
          * `5` - Auxiliary straight lane
          * `6` - Merge lane
          * `7` - Exit lane
          * `8` - Weaving lane
          * `9` - Public transport lane / taxi lane
          * `10` - Heavy vehicle lane
          * `11` - Reversible lane
          * `20` - Pedestrian and bike lane
          * `21` - Pedestrian lane
          * `22` - Bike lane
      - in: query
        name: lifecycle
        schema:
          type: integer
          enum:
          - 3
          - 4
          - 5
          - 6
        description: |-
          Lifecycle of the device, which describes the activity status of the device.

          * `3` - Active
          * `4` - Temporarily active
          * `5` - Temporarily inactive
          * `6` - Inactive
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: location
        schema:
          type: string
          format: EWKT
        description: Location (2D or 3D) to search devices
        examples:
          --: {}
          2DPolygonArea(Katajanokka):
            value: POLYGON ((25497733 6672927, 25497946 6673032, 25498653 6673034,
              25498987 6672708, 25498314 6672170, 25497651 6672629, 25497646 6672775,
              25497733 6672927))
            summary: 2D polygon area (Katajanokka)
      - in: query
        name: location_specifier
        schema:
          type: integer
          nullable: true
          enum:
          - 1
          - 2
          - 3
        description: |-
          Specifies where the traffic light is in relation to the road.

          * `1` - Right side of the road (relative to traffic direction)
          * `2` - Above the lanes
          * `3` - Island
      - in: query
        name: mount_real
        schema:
          type: string
          format: uuid
      - in: query
        name: mount_type
        schema:
          type: string
          format: uuid
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: owner
        schema:
          type: string
          format: uuid
      - in: query
        name: push_button
        schema:
          type: integer
          nullable: true
          enum:
          - 1
          - 2
        description: |-
          Describes if this traffic light has a push button attached.

          * `1` - No
          * `2` - Yes
      - in: query
        name: responsible_entity
        schema:
          type: string
          format: uuid
      - in: query
        name: road_name
        schema:
          type: string
      - in: query
        name: sound_beacon
        schema:
          type: integer
          nullable: true
          enum:
          - 1
          - 2
        description: |-
          Describes if this traffic light has a sound beacon attached.

          * `1` - No
          * `2` - Yes
      - in: query
        name: source_id
        schema:
          type: string
      - in: query
        name: source_name
        schema:
          type: string
      - in: query
        name: traffic_light_plan
        schema:
          type: string
          format: uuid
      - in: query
        name: txt
        schema:
          type: string
      - in: query
        name: type
        schema:
          type: string
          nullable: true
          enum:
          - '1'
          - '10'
          - '11'
          - '4.1'
          - '4.2'
          - '5'
          - '8'
          - '9.1'
          - '9.2'
        description: |-
          Describes the type of traffic light this device is.

          * `1` - Traffic signal
          * `4.1` - Right-turn arrow signal
          * `4.2` - Left-turn arrow signal
          * `5` - Triangle signal
          * `8` - Public transport signal
          * `9.1` - Bicycle signal
          * `9.2` - Bicycle turn arrow signal
          * `10` - Pedestrian signal
          * `11` - Lane signal
      - in: query
        name: updated_at
        schema:
          type: string
          format: date-time
      - in: query
        name: updated_by
        schema:
          type: string
          format: uuid
      - in: query
        name: validity_period_end
        schema:
          type: string
          format: date
      - in: query
        name: validity_period_start
        schema:
          type: string
          format: date
      - in: query
        name: vehicle_recognition
        schema:
          type: integer
          nullable: true
          enum:
          - 1
          - 2
          - 3
          - 4
        description: |-
          Describes the type of vehicle recognition this traffic light has.

          * `1` - Loop sensor
          * `2` - Infrared sensor
          * `3` - Radar i.e. microwave sensor
          * `4` - Other
      tags:
      - traffic-light-reals
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTrafficLightRealList'
          description: ''
    post:
      operationId: traffic_light_reals_create
      summary: Create new TrafficLight Real
      tags:
      - traffic-light-reals
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrafficLightRealRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TrafficLightRealRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TrafficLightRealRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrafficLightReal'
          description: ''
  /v1/traffic-light-reals/{id}/:
    get:
      operationId: traffic_light_reals_retrieve
      summary: Retrieve single TrafficLight Real
      parameters:
      - in: query
        name: geo_format
        schema:
          type: string
          enum:
          - default
          - geojson
        description: Determine whether the location should be in EWKT (default) or
          GeoJSON format.
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Traffic Light Real.
        required: true
      tags:
      - traffic-light-reals
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrafficLightReal'
          description: ''
    put:
      operationId: traffic_light_reals_update
      summary: Update single TrafficLight Real
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Traffic Light Real.
        required: true
      tags:
      - traffic-light-reals
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrafficLightRealRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TrafficLightRealRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TrafficLightRealRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrafficLightReal'
          description: ''
    patch:
      operationId: traffic_light_reals_partial_update
      summary: Partially update single TrafficLight Real
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Traffic Light Real.
        required: true
      tags:
      - traffic-light-reals
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTrafficLightRealRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTrafficLightRealRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTrafficLightRealRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrafficLightReal'
          description: ''
    delete:
      operationId: traffic_light_reals_destroy
      summary: Soft-delete single TrafficLight Real
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Traffic Light Real.
        required: true
      tags:
      - traffic-light-reals
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /v1/traffic-light-reals/{id}/files/:
    post:
      operationId: traffic_light_reals_files_create
      summary: Add one or more files to TrafficLight Real
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Traffic Light Real.
        required: true
      tags:
      - traffic-light-reals
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MultiFileUploadSchemaRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrafficLightRealFileCreateResponse'
          description: ''
  /v1/traffic-light-reals/{id}/files/{file_pk}/:
    patch:
      operationId: traffic_light_reals_files_partial_update
      summary: Update single file from TrafficLight Real
      parameters:
      - in: path
        name: file_pk
        schema:
          type: string
          format: uuid
        description: File object UUID
        required: true
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Traffic Light Real.
        required: true
      tags:
      - traffic-light-reals
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFileUploadSchemaRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrafficLightRealFile'
          description: ''
    delete:
      operationId: traffic_light_reals_files_destroy
      summary: Delete single file from TrafficLight Real
      parameters:
      - in: path
        name: file_pk
        schema:
          type: string
          format: uuid
        description: File object UUID
        required: true
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Traffic Light Real.
        required: true
      tags:
      - traffic-light-reals
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /v1/traffic-light-reals/{traffic_light_real_pk}/operations/:
    get:
      operationId: traffic_light_reals_operations_list
      summary: Retrieve all operations of a traffic light real
      parameters:
      - in: query
        name: created_at
        schema:
          type: string
          format: date-time
      - in: query
        name: created_by
        schema:
          type: string
          format: uuid
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: operation_date
        schema:
          type: string
          format: date
      - in: query
        name: operation_type
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: quality_requirements_fulfilled
        schema:
          type: boolean
      - in: query
        name: straightness_value
        schema:
          type: number
          format: float
      - in: query
        name: traffic_light_real
        schema:
          type: string
          format: uuid
      - in: path
        name: traffic_light_real_pk
        schema:
          type: string
          format: uuid
        required: true
      - in: query
        name: updated_at
        schema:
          type: string
          format: date-time
      - in: query
        name: updated_by
        schema:
          type: string
          format: uuid
      tags:
      - traffic-light-reals
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTrafficLightRealOperationList'
          description: ''
    post:
      operationId: traffic_light_reals_operations_create
      summary: Add a new operation to a traffic light real
      parameters:
      - in: path
        name: traffic_light_real_pk
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - traffic-light-reals
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrafficLightRealOperationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TrafficLightRealOperationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TrafficLightRealOperationRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrafficLightRealOperation'
          description: ''
  /v1/traffic-light-reals/{traffic_light_real_pk}/operations/{id}/:
    get:
      operationId: traffic_light_reals_operations_retrieve
      summary: Retrieve an operation of a traffic light real
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Traffic light real operation.
        required: true
      - in: path
        name: traffic_light_real_pk
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - traffic-light-reals
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrafficLightRealOperation'
          description: ''
    put:
      operationId: traffic_light_reals_operations_update
      summary: Update an operation of a traffic light real
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Traffic light real operation.
        required: true
      - in: path
        name: traffic_light_real_pk
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - traffic-light-reals
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrafficLightRealOperationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TrafficLightRealOperationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TrafficLightRealOperationRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrafficLightRealOperation'
          description: ''
    patch:
      operationId: traffic_light_reals_operations_partial_update
      summary: Partially update an operation of a traffic light real
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Traffic light real operation.
        required: true
      - in: path
        name: traffic_light_real_pk
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - traffic-light-reals
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTrafficLightRealOperationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTrafficLightRealOperationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTrafficLightRealOperationRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrafficLightRealOperation'
          description: ''
    delete:
      operationId: traffic_light_reals_operations_destroy
      summary: Delete an operation of a traffic light real
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Traffic light real operation.
        required: true
      - in: path
        name: traffic_light_real_pk
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - traffic-light-reals
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /v1/traffic-sign-plans/:
    get:
      operationId: traffic_sign_plans_list
      summary: Retrieve all TrafficSign Plans
      parameters:
      - in: query
        name: affect_area
        schema:
          type: string
      - in: query
        name: created_at
        schema:
          type: string
          format: date-time
      - in: query
        name: created_by
        schema:
          type: string
          format: uuid
      - in: query
        name: deleted_at
        schema:
          type: string
          format: date-time
      - in: query
        name: deleted_by
        schema:
          type: string
          format: uuid
      - in: query
        name: device_type
        schema:
          type: string
          format: uuid
      - in: query
        name: direction
        schema:
          type: integer
      - in: query
        name: geo_format
        schema:
          type: string
          enum:
          - default
          - geojson
        description: Determine whether the location should be in EWKT (default) or
          GeoJSON format.
      - in: query
        name: height
        schema:
          type: integer
      - in: query
        name: id
        schema:
          type: string
          format: uuid
      - in: query
        name: is_active
        schema:
          type: boolean
      - in: query
        name: is_replaced
        schema:
          type: string
          enum:
          - All
          - 'false'
          - 'true'
        description: |-
          Plan replacement

          * `All` - ALL
          * `true` - true
          * `false` - false
      - in: query
        name: lane_number
        schema:
          type: string
          nullable: true
          enum:
          - '11'
          - '21'
          - '31'
          - X2
          - X3
          - X4
          - X5
          - X6
          - X7
          - X8
          - X9
        description: |-
          Describes which lane of the road this sign affects.

          * `11` - Main lane
          * `21` - Main lane
          * `31` - Lane allowing traffic to both directions
          * `X2` - First left additional lane
          * `X3` - First right additional lane
          * `X4` - Second left additional lane
          * `X5` - Second right additional lane
          * `X6` - Third left additional lane
          * `X7` - Third right additional lane
          * `X8` - Fourth left additional lane
          * `X9` - Fourth right additional lane
      - in: query
        name: lane_type
        schema:
          type: string
          nullable: true
          enum:
          - '1'
          - '10'
          - '11'
          - '2'
          - '20'
          - '21'
          - '22'
          - '3'
          - '4'
          - '5'
          - '6'
          - '7'
          - '8'
          - '9'
        description: |-
          The type of lane which this sign affects.

          * `1` - Main lane
          * `2` - Fast lane
          * `3` - Turn right lane
          * `4` - Turn left lane
          * `5` - Auxiliary straight lane
          * `6` - Merge lane
          * `7` - Exit lane
          * `8` - Weaving lane
          * `9` - Public transport lane / taxi lane
          * `10` - Heavy vehicle lane
          * `11` - Reversible lane
          * `20` - Pedestrian and bike lane
          * `21` - Pedestrian lane
          * `22` - Bike lane
      - in: query
        name: lifecycle
        schema:
          type: integer
          enum:
          - 3
          - 4
          - 5
          - 6
        description: |-
          Lifecycle of the device, which describes the activity status of the device.

          * `3` - Active
          * `4` - Temporarily active
          * `5` - Temporarily inactive
          * `6` - Inactive
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: location
        schema:
          type: string
          format: EWKT
        description: Location (2D or 3D) to search devices
        examples:
          --: {}
          2DPolygonArea(Katajanokka):
            value: POLYGON ((25497733 6672927, 25497946 6673032, 25498653 6673034,
              25498987 6672708, 25498314 6672170, 25497651 6672629, 25497646 6672775,
              25497733 6672927))
            summary: 2D polygon area (Katajanokka)
      - in: query
        name: location_specifier
        schema:
          type: integer
          nullable: true
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
        description: |-
          Specifies where the sign is in relation to the road.

          * `1` - Right side
          * `2` - Left side
          * `3` - Above
          * `4` - Middle
          * `5` - Vertical
          * `6` - Outside
      - in: query
        name: mount_plan
        schema:
          type: string
          format: uuid
      - in: query
        name: mount_type
        schema:
          type: string
          format: uuid
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: operational_area
        schema:
          type: string
          format: uuid
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: owner
        schema:
          type: string
          format: uuid
      - in: query
        name: plan
        schema:
          type: string
          format: uuid
      - in: query
        name: reflection_class
        schema:
          type: string
          nullable: true
          title: Reflection
          enum:
          - R1
          - R2
          - R3
        description: |-
          * `R1` - r1
          * `R2` - r2
          * `R3` - r3
      - in: query
        name: responsible_entity
        schema:
          type: string
          format: uuid
      - in: query
        name: road_name
        schema:
          type: string
      - in: query
        name: seasonal_validity_period_end
        schema:
          type: string
          format: date
      - in: query
        name: seasonal_validity_period_start
        schema:
          type: string
          format: date
      - in: query
        name: size
        schema:
          type: string
          nullable: true
          enum:
          - L
          - M
          - S
        description: |-
          * `S` - Small
          * `M` - Medium
          * `L` - Large
      - in: query
        name: source_id
        schema:
          type: string
      - in: query
        name: source_name
        schema:
          type: string
      - in: query
        name: surface_class
        schema:
          type: string
          nullable: true
          title: Surface
          enum:
          - CONVEX
          - FLAT
        description: |-
          * `CONVEX` - Convex
          * `FLAT` - Flat
      - in: query
        name: txt
        schema:
          type: string
      - in: query
        name: updated_at
        schema:
          type: string
          format: date-time
      - in: query
        name: updated_by
        schema:
          type: string
          format: uuid
      - in: query
        name: validity_period_end
        schema:
          type: string
          format: date
      - in: query
        name: validity_period_start
        schema:
          type: string
          format: date
      - in: query
        name: value
        schema:
          type: number
      tags:
      - traffic-sign-plans
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTrafficSignPlanOutputList'
          description: ''
    post:
      operationId: traffic_sign_plans_create
      summary: Create new TrafficSign Plan
      tags:
      - traffic-sign-plans
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrafficSignPlanInputRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TrafficSignPlanInputRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TrafficSignPlanInputRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrafficSignPlanInput'
          description: ''
  /v1/traffic-sign-plans/{id}/:
    get:
      operationId: traffic_sign_plans_retrieve
      summary: Retrieve single TrafficSign Plan
      parameters:
      - in: query
        name: geo_format
        schema:
          type: string
          enum:
          - default
          - geojson
        description: Determine whether the location should be in EWKT (default) or
          GeoJSON format.
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Traffic Sign Plan.
        required: true
      tags:
      - traffic-sign-plans
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrafficSignPlanOutput'
          description: ''
    put:
      operationId: traffic_sign_plans_update
      summary: Update single TrafficSign Plan
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Traffic Sign Plan.
        required: true
      tags:
      - traffic-sign-plans
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrafficSignPlanInputRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TrafficSignPlanInputRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TrafficSignPlanInputRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrafficSignPlanInput'
          description: ''
    patch:
      operationId: traffic_sign_plans_partial_update
      summary: Partially update single TrafficSign Plan
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Traffic Sign Plan.
        required: true
      tags:
      - traffic-sign-plans
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTrafficSignPlanInputRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTrafficSignPlanInputRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTrafficSignPlanInputRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrafficSignPlanInput'
          description: ''
    delete:
      operationId: traffic_sign_plans_destroy
      summary: Soft-delete single TrafficSign Plan
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Traffic Sign Plan.
        required: true
      tags:
      - traffic-sign-plans
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /v1/traffic-sign-plans/{id}/files/:
    post:
      operationId: traffic_sign_plans_files_create
      summary: Add one or more files to TrafficSign Plan
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Traffic Sign Plan.
        required: true
      tags:
      - traffic-sign-plans
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MultiFileUploadSchemaRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrafficSignPlanFileCreateResponse'
          description: ''
  /v1/traffic-sign-plans/{id}/files/{file_pk}/:
    patch:
      operationId: traffic_sign_plans_files_partial_update
      summary: Update single file from TrafficSign Plan
      parameters:
      - in: path
        name: file_pk
        schema:
          type: string
          format: uuid
        description: File object UUID
        required: true
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Traffic Sign Plan.
        required: true
      tags:
      - traffic-sign-plans
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFileUploadSchemaRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrafficSignPlanFile'
          description: ''
    delete:
      operationId: traffic_sign_plans_files_destroy
      summary: Delete single file from TrafficSign Plan
      parameters:
      - in: path
        name: file_pk
        schema:
          type: string
          format: uuid
        description: File object UUID
        required: true
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Traffic Sign Plan.
        required: true
      tags:
      - traffic-sign-plans
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /v1/traffic-sign-reals/:
    get:
      operationId: traffic_sign_reals_list
      summary: Retrieve all TrafficSign Reals
      parameters:
      - in: query
        name: attachment_url
        schema:
          type: string
      - in: query
        name: condition
        schema:
          type: integer
          nullable: true
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
        description: |-
          Describes the condition of this device.

          * `1` - Very bad
          * `2` - Bad
          * `3` - Average
          * `4` - Good
          * `5` - Very good
      - in: query
        name: coverage_area
        schema:
          type: string
          format: uuid
      - in: query
        name: created_at
        schema:
          type: string
          format: date-time
      - in: query
        name: created_by
        schema:
          type: string
          format: uuid
      - in: query
        name: deleted_at
        schema:
          type: string
          format: date-time
      - in: query
        name: deleted_by
        schema:
          type: string
          format: uuid
      - in: query
        name: device_type
        schema:
          type: string
          format: uuid
      - in: query
        name: direction
        schema:
          type: integer
      - in: query
        name: geo_format
        schema:
          type: string
          enum:
          - default
          - geojson
        description: Determine whether the location should be in EWKT (default) or
          GeoJSON format.
      - in: query
        name: height
        schema:
          type: integer
      - in: query
        name: id
        schema:
          type: string
          format: uuid
      - in: query
        name: installation_date
        schema:
          type: string
          format: date
      - in: query
        name: installation_details
        schema:
          type: string
      - in: query
        name: installation_id
        schema:
          type: string
      - in: query
        name: installation_status
        schema:
          type: string
          nullable: true
          enum:
          - COVERED
          - FALLEN
          - IN_USE
          - MISSING
          - OTHER
        description: |-
          Describes this devices installation status.

          * `IN_USE` - In use
          * `COVERED` - Covered
          * `FALLEN` - Fallen
          * `MISSING` - Missing
          * `OTHER` - Other
      - in: query
        name: is_active
        schema:
          type: boolean
      - in: query
        name: lane_number
        schema:
          type: string
          nullable: true
          enum:
          - '11'
          - '21'
          - '31'
          - X2
          - X3
          - X4
          - X5
          - X6
          - X7
          - X8
          - X9
        description: |-
          Describes which lane of the road this sign affects.

          * `11` - Main lane
          * `21` - Main lane
          * `31` - Lane allowing traffic to both directions
          * `X2` - First left additional lane
          * `X3` - First right additional lane
          * `X4` - Second left additional lane
          * `X5` - Second right additional lane
          * `X6` - Third left additional lane
          * `X7` - Third right additional lane
          * `X8` - Fourth left additional lane
          * `X9` - Fourth right additional lane
      - in: query
        name: lane_type
        schema:
          type: string
          nullable: true
          enum:
          - '1'
          - '10'
          - '11'
          - '2'
          - '20'
          - '21'
          - '22'
          - '3'
          - '4'
          - '5'
          - '6'
          - '7'
          - '8'
          - '9'
        description: |-
          The type of lane which this sign affects.

          * `1` - Main lane
          * `2` - Fast lane
          * `3` - Turn right lane
          * `4` - Turn left lane
          * `5` - Auxiliary straight lane
          * `6` - Merge lane
          * `7` - Exit lane
          * `8` - Weaving lane
          * `9` - Public transport lane / taxi lane
          * `10` - Heavy vehicle lane
          * `11` - Reversible lane
          * `20` - Pedestrian and bike lane
          * `21` - Pedestrian lane
          * `22` - Bike lane
      - in: query
        name: legacy_code
        schema:
          type: string
      - in: query
        name: lifecycle
        schema:
          type: integer
          enum:
          - 3
          - 4
          - 5
          - 6
        description: |-
          Lifecycle of the device, which describes the activity status of the device.

          * `3` - Active
          * `4` - Temporarily active
          * `5` - Temporarily inactive
          * `6` - Inactive
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: location
        schema:
          type: string
          format: EWKT
        description: Location (2D or 3D) to search devices
        examples:
          --: {}
          2DPolygonArea(Katajanokka):
            value: POLYGON ((25497733 6672927, 25497946 6673032, 25498653 6673034,
              25498987 6672708, 25498314 6672170, 25497651 6672629, 25497646 6672775,
              25497733 6672927))
            summary: 2D polygon area (Katajanokka)
      - in: query
        name: location_specifier
        schema:
          type: integer
          nullable: true
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
        description: |-
          Specifies where the sign is in relation to the road.

          * `1` - Right side
          * `2` - Left side
          * `3` - Above
          * `4` - Middle
          * `5` - Vertical
          * `6` - Outside
      - in: query
        name: manufacturer
        schema:
          type: string
      - in: query
        name: mount_real
        schema:
          type: string
          format: uuid
      - in: query
        name: mount_type
        schema:
          type: string
          format: uuid
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: operation
        schema:
          type: string
      - in: query
        name: operational_area
        schema:
          type: string
          format: uuid
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: owner
        schema:
          type: string
          format: uuid
      - in: query
        name: permit_decision_id
        schema:
          type: string
      - in: query
        name: reflection_class
        schema:
          type: string
          nullable: true
          title: Reflection
          enum:
          - R1
          - R2
          - R3
        description: |-
          * `R1` - r1
          * `R2` - r2
          * `R3` - r3
      - in: query
        name: responsible_entity
        schema:
          type: string
          format: uuid
      - in: query
        name: rfid
        schema:
          type: string
      - in: query
        name: road_name
        schema:
          type: string
      - in: query
        name: scanned_at
        schema:
          type: string
          format: date-time
      - in: query
        name: seasonal_validity_period_end
        schema:
          type: string
          format: date
      - in: query
        name: seasonal_validity_period_start
        schema:
          type: string
          format: date
      - in: query
        name: size
        schema:
          type: string
          nullable: true
          enum:
          - L
          - M
          - S
        description: |-
          * `S` - Small
          * `M` - Medium
          * `L` - Large
      - in: query
        name: source_id
        schema:
          type: string
      - in: query
        name: source_name
        schema:
          type: string
      - in: query
        name: surface_class
        schema:
          type: string
          nullable: true
          title: Surface
          enum:
          - CONVEX
          - FLAT
        description: |-
          * `CONVEX` - Convex
          * `FLAT` - Flat
      - in: query
        name: traffic_sign_plan
        schema:
          type: string
          format: uuid
      - in: query
        name: txt
        schema:
          type: string
      - in: query
        name: updated_at
        schema:
          type: string
          format: date-time
      - in: query
        name: updated_by
        schema:
          type: string
          format: uuid
      - in: query
        name: validity_period_end
        schema:
          type: string
          format: date
      - in: query
        name: validity_period_start
        schema:
          type: string
          format: date
      - in: query
        name: value
        schema:
          type: number
      tags:
      - traffic-sign-reals
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTrafficSignRealList'
          description: ''
    post:
      operationId: traffic_sign_reals_create
      summary: Create new TrafficSign Real
      tags:
      - traffic-sign-reals
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrafficSignRealRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TrafficSignRealRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TrafficSignRealRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrafficSignReal'
          description: ''
  /v1/traffic-sign-reals/{id}/:
    get:
      operationId: traffic_sign_reals_retrieve
      summary: Retrieve single TrafficSign Real
      parameters:
      - in: query
        name: geo_format
        schema:
          type: string
          enum:
          - default
          - geojson
        description: Determine whether the location should be in EWKT (default) or
          GeoJSON format.
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Traffic Sign Real.
        required: true
      tags:
      - traffic-sign-reals
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrafficSignReal'
          description: ''
    put:
      operationId: traffic_sign_reals_update
      summary: Update single TrafficSign Real
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Traffic Sign Real.
        required: true
      tags:
      - traffic-sign-reals
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrafficSignRealRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TrafficSignRealRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TrafficSignRealRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrafficSignReal'
          description: ''
    patch:
      operationId: traffic_sign_reals_partial_update
      summary: Partially update single TrafficSign Real
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Traffic Sign Real.
        required: true
      tags:
      - traffic-sign-reals
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTrafficSignRealRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTrafficSignRealRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTrafficSignRealRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrafficSignReal'
          description: ''
    delete:
      operationId: traffic_sign_reals_destroy
      summary: Soft-delete single TrafficSign Real
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Traffic Sign Real.
        required: true
      tags:
      - traffic-sign-reals
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /v1/traffic-sign-reals/{id}/files/:
    post:
      operationId: traffic_sign_reals_files_create
      summary: Add one or more files to TrafficSign Real
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Traffic Sign Real.
        required: true
      tags:
      - traffic-sign-reals
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MultiFileUploadSchemaRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrafficSignRealFileCreateResponse'
          description: ''
  /v1/traffic-sign-reals/{id}/files/{file_pk}/:
    patch:
      operationId: traffic_sign_reals_files_partial_update
      summary: Update single file from TrafficSign Real
      parameters:
      - in: path
        name: file_pk
        schema:
          type: string
          format: uuid
        description: File object UUID
        required: true
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Traffic Sign Real.
        required: true
      tags:
      - traffic-sign-reals
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFileUploadSchemaRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrafficSignRealFile'
          description: ''
    delete:
      operationId: traffic_sign_reals_files_destroy
      summary: Delete single file from TrafficSign Real
      parameters:
      - in: path
        name: file_pk
        schema:
          type: string
          format: uuid
        description: File object UUID
        required: true
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Traffic Sign Real.
        required: true
      tags:
      - traffic-sign-reals
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /v1/traffic-sign-reals/{traffic_sign_real_pk}/operations/:
    get:
      operationId: traffic_sign_reals_operations_list
      summary: Retrieve all operations of a traffic sign real
      parameters:
      - in: query
        name: created_at
        schema:
          type: string
          format: date-time
      - in: query
        name: created_by
        schema:
          type: string
          format: uuid
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: operation_date
        schema:
          type: string
          format: date
      - in: query
        name: operation_type
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: quality_requirements_fulfilled
        schema:
          type: boolean
      - in: query
        name: straightness_value
        schema:
          type: number
          format: float
      - in: query
        name: traffic_sign_real
        schema:
          type: string
          format: uuid
      - in: path
        name: traffic_sign_real_pk
        schema:
          type: string
          format: uuid
        required: true
      - in: query
        name: updated_at
        schema:
          type: string
          format: date-time
      - in: query
        name: updated_by
        schema:
          type: string
          format: uuid
      tags:
      - traffic-sign-reals
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTrafficSignRealOperationList'
          description: ''
    post:
      operationId: traffic_sign_reals_operations_create
      summary: Add a new operation to a traffic sign real
      parameters:
      - in: path
        name: traffic_sign_real_pk
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - traffic-sign-reals
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrafficSignRealOperationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TrafficSignRealOperationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TrafficSignRealOperationRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrafficSignRealOperation'
          description: ''
  /v1/traffic-sign-reals/{traffic_sign_real_pk}/operations/{id}/:
    get:
      operationId: traffic_sign_reals_operations_retrieve
      summary: Retrieve an operation of a traffic sign real
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Traffic sign real operation.
        required: true
      - in: path
        name: traffic_sign_real_pk
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - traffic-sign-reals
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrafficSignRealOperation'
          description: ''
    put:
      operationId: traffic_sign_reals_operations_update
      summary: Update an operation of a traffic sign real
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Traffic sign real operation.
        required: true
      - in: path
        name: traffic_sign_real_pk
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - traffic-sign-reals
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrafficSignRealOperationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TrafficSignRealOperationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TrafficSignRealOperationRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrafficSignRealOperation'
          description: ''
    patch:
      operationId: traffic_sign_reals_operations_partial_update
      summary: Partially update an operation of a traffic sign real
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Traffic sign real operation.
        required: true
      - in: path
        name: traffic_sign_real_pk
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - traffic-sign-reals
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTrafficSignRealOperationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTrafficSignRealOperationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTrafficSignRealOperationRequest'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrafficSignRealOperation'
          description: ''
    delete:
      operationId: traffic_sign_reals_operations_destroy
      summary: Delete an operation of a traffic sign real
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Traffic sign real operation.
        required: true
      - in: path
        name: traffic_sign_real_pk
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - traffic-sign-reals
      security:
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    AdditionalSignPlanFile:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        file:
          type: string
          format: uri
        additional_sign_plan:
          type: string
          format: uuid
      required:
      - additional_sign_plan
      - file
      - id
    AdditionalSignPlanFileCreateResponse:
      type: object
      properties:
        files:
          type: array
          items:
            $ref: '#/components/schemas/AdditionalSignPlanFile'
      required:
      - files
    AdditionalSignPlanInput:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        replaces:
          type: string
          format: uuid
          nullable: true
          description: ID to the device plan that this device is replacing
        location:
          type: string
          format: EWKT
          example: SRID=3879;POINT Z (25496751.5 6673129.5 1.5)
        device_type:
          type: string
          format: uuid
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        lifecycle:
          enum:
          - 3
          - 4
          - 5
          - 6
          type: integer
          description: |-
            Lifecycle of the device, which describes the activity status of the device.

            * `3` - Active
            * `4` - Temporarily active
            * `5` - Temporarily inactive
            * `6` - Inactive
        source_id:
          type: string
          nullable: true
          description: ID of the device in the source where this device was imported
            from.
          maxLength: 64
        source_name:
          type: string
          nullable: true
          description: Name of the source for where this device was imported from.
          maxLength: 254
        order:
          type: integer
          maximum: 32767
          minimum: -32768
          description: The order of the sign in relation to the signs at the same
            point. Order from top to bottom, from left to right starting at 1.
        content_s:
          type: object
          additionalProperties: {}
          nullable: true
          title: Content
          description: Additional sign content as JSON document
        missing_content:
          type: boolean
          description: Content (content_s) is not available although the device type
            content schema requires it.
        additional_information:
          type: string
          description: Additional information related to this device.
        height:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: The height of the sign from the ground, measured from the bottom
            in centimeters.
        size:
          enum:
          - S
          - M
          - L
          - ''
          - null
          type: string
          description: |-
            * `S` - Small
            * `M` - Medium
            * `L` - Large
          nullable: true
        direction:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: The direction a person is facing when looking perpendicular
            to the sign. The value is in degrees from 0 to 359, where 0 is north,
            90 is east, etc.
        reflection_class:
          enum:
          - R1
          - R2
          - R3
          - ''
          - null
          type: string
          description: |-
            * `R1` - r1
            * `R2` - r2
            * `R3` - r3
          nullable: true
          title: Reflection
        surface_class:
          enum:
          - CONVEX
          - FLAT
          - ''
          - null
          type: string
          description: |-
            * `CONVEX` - Convex
            * `FLAT` - Flat
          nullable: true
          title: Surface
        color:
          enum:
          - 1
          - 2
          - null
          type: integer
          description: |-
            * `1` - Blue
            * `2` - Yellow
          nullable: true
        road_name:
          type: string
          nullable: true
          description: Name of the road this sign is installed at.
          maxLength: 254
        lane_number:
          enum:
          - '11'
          - '21'
          - '31'
          - X2
          - X3
          - X4
          - X5
          - X6
          - X7
          - X8
          - X9
          - ''
          - null
          type: string
          nullable: true
          description: |-
            Describes which lane of the road this sign affects.

            * `11` - Main lane
            * `21` - Main lane
            * `31` - Lane allowing traffic to both directions
            * `X2` - First left additional lane
            * `X3` - First right additional lane
            * `X4` - Second left additional lane
            * `X5` - Second right additional lane
            * `X6` - Third left additional lane
            * `X7` - Third right additional lane
            * `X8` - Fourth left additional lane
            * `X9` - Fourth right additional lane
        lane_type:
          enum:
          - '1'
          - '2'
          - '3'
          - '4'
          - '5'
          - '6'
          - '7'
          - '8'
          - '9'
          - '10'
          - '11'
          - '20'
          - '21'
          - '22'
          - ''
          - null
          type: string
          nullable: true
          description: |-
            The type of lane which this sign affects.

            * `1` - Main lane
            * `2` - Fast lane
            * `3` - Turn right lane
            * `4` - Turn left lane
            * `5` - Auxiliary straight lane
            * `6` - Merge lane
            * `7` - Exit lane
            * `8` - Weaving lane
            * `9` - Public transport lane / taxi lane
            * `10` - Heavy vehicle lane
            * `11` - Reversible lane
            * `20` - Pedestrian and bike lane
            * `21` - Pedestrian lane
            * `22` - Bike lane
        location_specifier:
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - null
          type: integer
          nullable: true
          description: |-
            Specifies where the sign is in relation to the road.

            * `1` - Right side
            * `2` - Left side
            * `3` - Above
            * `4` - Middle
            * `5` - Vertical
            * `6` - Outside
        validity_period_start:
          type: string
          format: date
          nullable: true
          description: Date on which this sign becomes active.
        validity_period_end:
          type: string
          format: date
          nullable: true
          description: Date after which this sign becomes inactive.
        seasonal_validity_period_start:
          type: string
          format: date
          nullable: true
          description: Date on which this sign becomes seasonally active.
        seasonal_validity_period_end:
          type: string
          format: date
          nullable: true
          description: Date after which this sign becomes seasonally inactive.
        created_by:
          type: string
          format: uuid
          readOnly: true
          nullable: true
        updated_by:
          type: string
          format: uuid
          readOnly: true
          nullable: true
        owner:
          type: string
          format: uuid
          description: Owner who orders and is responsible for the maintenance of
            the device.
        responsible_entity:
          type: string
          format: uuid
          nullable: true
          description: Organization or project that this device is assigned to.
        parent:
          type: string
          format: uuid
          nullable: true
          title: Parent Traffic Sign Plan
          description: The traffic sign to which this additional sign is associated.
        mount_plan:
          type: string
          format: uuid
          nullable: true
          description: Mount that this sign is mounted on.
        plan:
          type: string
          format: uuid
          nullable: true
          description: Plan which this Additional Sign Plan is a part of.
      required:
      - created_at
      - created_by
      - id
      - location
      - owner
      - updated_at
      - updated_by
    AdditionalSignPlanInputRequest:
      type: object
      properties:
        replaces:
          type: string
          format: uuid
          nullable: true
          description: ID to the device plan that this device is replacing
        location:
          type: string
          format: EWKT
          example: SRID=3879;POINT Z (25496751.5 6673129.5 1.5)
          minLength: 1
        device_type:
          type: string
          format: uuid
          nullable: true
        lifecycle:
          enum:
          - 3
          - 4
          - 5
          - 6
          type: integer
          description: |-
            Lifecycle of the device, which describes the activity status of the device.

            * `3` - Active
            * `4` - Temporarily active
            * `5` - Temporarily inactive
            * `6` - Inactive
        source_id:
          type: string
          nullable: true
          description: ID of the device in the source where this device was imported
            from.
          maxLength: 64
        source_name:
          type: string
          nullable: true
          description: Name of the source for where this device was imported from.
          maxLength: 254
        order:
          type: integer
          maximum: 32767
          minimum: -32768
          description: The order of the sign in relation to the signs at the same
            point. Order from top to bottom, from left to right starting at 1.
        content_s:
          type: object
          additionalProperties: {}
          nullable: true
          title: Content
          description: Additional sign content as JSON document
        missing_content:
          type: boolean
          description: Content (content_s) is not available although the device type
            content schema requires it.
        additional_information:
          type: string
          description: Additional information related to this device.
        height:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: The height of the sign from the ground, measured from the bottom
            in centimeters.
        size:
          enum:
          - S
          - M
          - L
          - ''
          - null
          type: string
          description: |-
            * `S` - Small
            * `M` - Medium
            * `L` - Large
          nullable: true
        direction:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: The direction a person is facing when looking perpendicular
            to the sign. The value is in degrees from 0 to 359, where 0 is north,
            90 is east, etc.
        reflection_class:
          enum:
          - R1
          - R2
          - R3
          - ''
          - null
          type: string
          description: |-
            * `R1` - r1
            * `R2` - r2
            * `R3` - r3
          nullable: true
          title: Reflection
        surface_class:
          enum:
          - CONVEX
          - FLAT
          - ''
          - null
          type: string
          description: |-
            * `CONVEX` - Convex
            * `FLAT` - Flat
          nullable: true
          title: Surface
        color:
          enum:
          - 1
          - 2
          - null
          type: integer
          description: |-
            * `1` - Blue
            * `2` - Yellow
          nullable: true
        road_name:
          type: string
          nullable: true
          description: Name of the road this sign is installed at.
          maxLength: 254
        lane_number:
          enum:
          - '11'
          - '21'
          - '31'
          - X2
          - X3
          - X4
          - X5
          - X6
          - X7
          - X8
          - X9
          - ''
          - null
          type: string
          nullable: true
          description: |-
            Describes which lane of the road this sign affects.

            * `11` - Main lane
            * `21` - Main lane
            * `31` - Lane allowing traffic to both directions
            * `X2` - First left additional lane
            * `X3` - First right additional lane
            * `X4` - Second left additional lane
            * `X5` - Second right additional lane
            * `X6` - Third left additional lane
            * `X7` - Third right additional lane
            * `X8` - Fourth left additional lane
            * `X9` - Fourth right additional lane
        lane_type:
          enum:
          - '1'
          - '2'
          - '3'
          - '4'
          - '5'
          - '6'
          - '7'
          - '8'
          - '9'
          - '10'
          - '11'
          - '20'
          - '21'
          - '22'
          - ''
          - null
          type: string
          nullable: true
          description: |-
            The type of lane which this sign affects.

            * `1` - Main lane
            * `2` - Fast lane
            * `3` - Turn right lane
            * `4` - Turn left lane
            * `5` - Auxiliary straight lane
            * `6` - Merge lane
            * `7` - Exit lane
            * `8` - Weaving lane
            * `9` - Public transport lane / taxi lane
            * `10` - Heavy vehicle lane
            * `11` - Reversible lane
            * `20` - Pedestrian and bike lane
            * `21` - Pedestrian lane
            * `22` - Bike lane
        location_specifier:
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - null
          type: integer
          nullable: true
          description: |-
            Specifies where the sign is in relation to the road.

            * `1` - Right side
            * `2` - Left side
            * `3` - Above
            * `4` - Middle
            * `5` - Vertical
            * `6` - Outside
        validity_period_start:
          type: string
          format: date
          nullable: true
          description: Date on which this sign becomes active.
        validity_period_end:
          type: string
          format: date
          nullable: true
          description: Date after which this sign becomes inactive.
        seasonal_validity_period_start:
          type: string
          format: date
          nullable: true
          description: Date on which this sign becomes seasonally active.
        seasonal_validity_period_end:
          type: string
          format: date
          nullable: true
          description: Date after which this sign becomes seasonally inactive.
        owner:
          type: string
          format: uuid
          description: Owner who orders and is responsible for the maintenance of
            the device.
        responsible_entity:
          type: string
          format: uuid
          nullable: true
          description: Organization or project that this device is assigned to.
        parent:
          type: string
          format: uuid
          nullable: true
          title: Parent Traffic Sign Plan
          description: The traffic sign to which this additional sign is associated.
        mount_plan:
          type: string
          format: uuid
          nullable: true
          description: Mount that this sign is mounted on.
        plan:
          type: string
          format: uuid
          nullable: true
          description: Plan which this Additional Sign Plan is a part of.
      required:
      - location
      - owner
    AdditionalSignPlanOutput:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        replaces:
          type: string
          format: uuid
          nullable: true
          description: ID of the device plan that this device plan has replaced
          readOnly: true
        replaced_by:
          type: string
          format: uuid
          nullable: true
          description: ID of the device plan that has replaced this device plan
          readOnly: true
        is_replaced:
          type: boolean
          description: Whether this device plan has been replaced by another device
            plan
          readOnly: true
        location:
          type: string
          format: EWKT
          example: SRID=3879;POINT Z (25496751.5 6673129.5 1.5)
        device_type:
          type: string
          format: uuid
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        lifecycle:
          enum:
          - 3
          - 4
          - 5
          - 6
          type: integer
          description: |-
            Lifecycle of the device, which describes the activity status of the device.

            * `3` - Active
            * `4` - Temporarily active
            * `5` - Temporarily inactive
            * `6` - Inactive
        source_id:
          type: string
          nullable: true
          description: ID of the device in the source where this device was imported
            from.
          maxLength: 64
        source_name:
          type: string
          nullable: true
          description: Name of the source for where this device was imported from.
          maxLength: 254
        order:
          type: integer
          maximum: 32767
          minimum: -32768
          description: The order of the sign in relation to the signs at the same
            point. Order from top to bottom, from left to right starting at 1.
        content_s:
          type: object
          additionalProperties: {}
          nullable: true
          title: Content
          description: Additional sign content as JSON document
        missing_content:
          type: boolean
          description: Content (content_s) is not available although the device type
            content schema requires it.
        additional_information:
          type: string
          description: Additional information related to this device.
        height:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: The height of the sign from the ground, measured from the bottom
            in centimeters.
        size:
          enum:
          - S
          - M
          - L
          - ''
          - null
          type: string
          description: |-
            * `S` - Small
            * `M` - Medium
            * `L` - Large
          nullable: true
        direction:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: The direction a person is facing when looking perpendicular
            to the sign. The value is in degrees from 0 to 359, where 0 is north,
            90 is east, etc.
        reflection_class:
          enum:
          - R1
          - R2
          - R3
          - ''
          - null
          type: string
          description: |-
            * `R1` - r1
            * `R2` - r2
            * `R3` - r3
          nullable: true
          title: Reflection
        surface_class:
          enum:
          - CONVEX
          - FLAT
          - ''
          - null
          type: string
          description: |-
            * `CONVEX` - Convex
            * `FLAT` - Flat
          nullable: true
          title: Surface
        color:
          enum:
          - 1
          - 2
          - null
          type: integer
          description: |-
            * `1` - Blue
            * `2` - Yellow
          nullable: true
        road_name:
          type: string
          nullable: true
          description: Name of the road this sign is installed at.
          maxLength: 254
        lane_number:
          enum:
          - '11'
          - '21'
          - '31'
          - X2
          - X3
          - X4
          - X5
          - X6
          - X7
          - X8
          - X9
          - ''
          - null
          type: string
          nullable: true
          description: |-
            Describes which lane of the road this sign affects.

            * `11` - Main lane
            * `21` - Main lane
            * `31` - Lane allowing traffic to both directions
            * `X2` - First left additional lane
            * `X3` - First right additional lane
            * `X4` - Second left additional lane
            * `X5` - Second right additional lane
            * `X6` - Third left additional lane
            * `X7` - Third right additional lane
            * `X8` - Fourth left additional lane
            * `X9` - Fourth right additional lane
        lane_type:
          enum:
          - '1'
          - '2'
          - '3'
          - '4'
          - '5'
          - '6'
          - '7'
          - '8'
          - '9'
          - '10'
          - '11'
          - '20'
          - '21'
          - '22'
          - ''
          - null
          type: string
          nullable: true
          description: |-
            The type of lane which this sign affects.

            * `1` - Main lane
            * `2` - Fast lane
            * `3` - Turn right lane
            * `4` - Turn left lane
            * `5` - Auxiliary straight lane
            * `6` - Merge lane
            * `7` - Exit lane
            * `8` - Weaving lane
            * `9` - Public transport lane / taxi lane
            * `10` - Heavy vehicle lane
            * `11` - Reversible lane
            * `20` - Pedestrian and bike lane
            * `21` - Pedestrian lane
            * `22` - Bike lane
        location_specifier:
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - null
          type: integer
          nullable: true
          description: |-
            Specifies where the sign is in relation to the road.

            * `1` - Right side
            * `2` - Left side
            * `3` - Above
            * `4` - Middle
            * `5` - Vertical
            * `6` - Outside
        validity_period_start:
          type: string
          format: date
          nullable: true
          description: Date on which this sign becomes active.
        validity_period_end:
          type: string
          format: date
          nullable: true
          description: Date after which this sign becomes inactive.
        seasonal_validity_period_start:
          type: string
          format: date
          nullable: true
          description: Date on which this sign becomes seasonally active.
        seasonal_validity_period_end:
          type: string
          format: date
          nullable: true
          description: Date after which this sign becomes seasonally inactive.
        created_by:
          type: string
          format: uuid
          readOnly: true
          nullable: true
        updated_by:
          type: string
          format: uuid
          readOnly: true
          nullable: true
        owner:
          type: string
          format: uuid
          description: Owner who orders and is responsible for the maintenance of
            the device.
        responsible_entity:
          type: string
          format: uuid
          nullable: true
          description: Organization or project that this device is assigned to.
        parent:
          type: string
          format: uuid
          nullable: true
          title: Parent Traffic Sign Plan
          description: The traffic sign to which this additional sign is associated.
        mount_plan:
          type: string
          format: uuid
          nullable: true
          description: Mount that this sign is mounted on.
        plan:
          type: string
          format: uuid
          nullable: true
          description: Plan which this Additional Sign Plan is a part of.
      required:
      - created_at
      - created_by
      - id
      - is_replaced
      - location
      - owner
      - replaced_by
      - replaces
      - updated_at
      - updated_by
    AdditionalSignReal:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        location:
          type: string
          format: EWKT
          example: SRID=3879;POINT Z (25496751.5 6673129.5 1.5)
        device_type:
          type: string
          format: uuid
          nullable: true
        operations:
          type: array
          items:
            $ref: '#/components/schemas/AdditionalSignRealOperation'
          readOnly: true
        plan_decision_id:
          type: string
          description: Year and verdict section separated with a dash
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        lifecycle:
          enum:
          - 3
          - 4
          - 5
          - 6
          type: integer
          description: |-
            Lifecycle of the device, which describes the activity status of the device.

            * `3` - Active
            * `4` - Temporarily active
            * `5` - Temporarily inactive
            * `6` - Inactive
        installation_date:
          type: string
          format: date
          nullable: true
          description: Date on which this device was installed on.
        installation_status:
          enum:
          - IN_USE
          - COVERED
          - FALLEN
          - MISSING
          - OTHER
          - ''
          - null
          type: string
          nullable: true
          description: |-
            Describes this devices installation status.

            * `IN_USE` - In use
            * `COVERED` - Covered
            * `FALLEN` - Fallen
            * `MISSING` - Missing
            * `OTHER` - Other
        condition:
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - null
          type: integer
          nullable: true
          description: |-
            Describes the condition of this device.

            * `1` - Very bad
            * `2` - Bad
            * `3` - Average
            * `4` - Good
            * `5` - Very good
        source_id:
          type: string
          nullable: true
          description: ID of the device in the source where this device was imported
            from.
          maxLength: 64
        source_name:
          type: string
          nullable: true
          description: Name of the source for where this device was imported from.
          maxLength: 254
        order:
          type: integer
          maximum: 32767
          minimum: -32768
          description: The order of the sign in relation to the signs at the same
            point. Order from top to bottom, from left to right starting at 1.
        content_s:
          type: object
          additionalProperties: {}
          nullable: true
          title: Content
          description: Additional sign content as JSON document
        missing_content:
          type: boolean
          description: Content (content_s) is not available although the device type
            content schema requires it.
        additional_information:
          type: string
          description: Additional information related to this device.
        height:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: The height of the sign from the ground, measured from the bottom
            in centimeters.
        size:
          enum:
          - S
          - M
          - L
          - ''
          - null
          type: string
          description: |-
            * `S` - Small
            * `M` - Medium
            * `L` - Large
          nullable: true
        direction:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: The direction a person is facing when looking perpendicular
            to the sign. The value is in degrees from 0 to 359, where 0 is north,
            90 is east, etc.
        reflection_class:
          enum:
          - R1
          - R2
          - R3
          - ''
          - null
          type: string
          description: |-
            * `R1` - r1
            * `R2` - r2
            * `R3` - r3
          nullable: true
          title: Reflection
        surface_class:
          enum:
          - CONVEX
          - FLAT
          - ''
          - null
          type: string
          description: |-
            * `CONVEX` - Convex
            * `FLAT` - Flat
          nullable: true
          title: Surface
        color:
          enum:
          - 1
          - 2
          - null
          type: integer
          description: |-
            * `1` - Blue
            * `2` - Yellow
          nullable: true
        road_name:
          type: string
          nullable: true
          description: Name of the road this sign is installed at.
          maxLength: 254
        lane_number:
          enum:
          - '11'
          - '21'
          - '31'
          - X2
          - X3
          - X4
          - X5
          - X6
          - X7
          - X8
          - X9
          - ''
          - null
          type: string
          nullable: true
          description: |-
            Describes which lane of the road this sign affects.

            * `11` - Main lane
            * `21` - Main lane
            * `31` - Lane allowing traffic to both directions
            * `X2` - First left additional lane
            * `X3` - First right additional lane
            * `X4` - Second left additional lane
            * `X5` - Second right additional lane
            * `X6` - Third left additional lane
            * `X7` - Third right additional lane
            * `X8` - Fourth left additional lane
            * `X9` - Fourth right additional lane
        lane_type:
          enum:
          - '1'
          - '2'
          - '3'
          - '4'
          - '5'
          - '6'
          - '7'
          - '8'
          - '9'
          - '10'
          - '11'
          - '20'
          - '21'
          - '22'
          - ''
          - null
          type: string
          nullable: true
          description: |-
            The type of lane which this sign affects.

            * `1` - Main lane
            * `2` - Fast lane
            * `3` - Turn right lane
            * `4` - Turn left lane
            * `5` - Auxiliary straight lane
            * `6` - Merge lane
            * `7` - Exit lane
            * `8` - Weaving lane
            * `9` - Public transport lane / taxi lane
            * `10` - Heavy vehicle lane
            * `11` - Reversible lane
            * `20` - Pedestrian and bike lane
            * `21` - Pedestrian lane
            * `22` - Bike lane
        location_specifier:
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - null
          type: integer
          nullable: true
          description: |-
            Specifies where the sign is in relation to the road.

            * `1` - Right side
            * `2` - Left side
            * `3` - Above
            * `4` - Middle
            * `5` - Vertical
            * `6` - Outside
        validity_period_start:
          type: string
          format: date
          nullable: true
          description: Date on which this sign becomes active.
        validity_period_end:
          type: string
          format: date
          nullable: true
          description: Date after which this sign becomes inactive.
        seasonal_validity_period_start:
          type: string
          format: date
          nullable: true
          description: Date on which this sign becomes seasonally active.
        seasonal_validity_period_end:
          type: string
          format: date
          nullable: true
          description: Date after which this sign becomes seasonally inactive.
        installation_id:
          type: string
          nullable: true
          description: The id number of the installation record.
          maxLength: 254
        installation_details:
          type: string
          nullable: true
          description: Additional details about the installation.
          maxLength: 254
        installed_by:
          type: string
          nullable: true
          description: Name of the organization who installed this sign.
          maxLength: 254
        manufacturer:
          type: string
          nullable: true
          description: Name of the organization that manufactured this sign.
          maxLength: 254
        rfid:
          type: string
          nullable: true
          description: RFID tag of the sign (if any).
          maxLength: 254
        permit_decision_id:
          type: string
          nullable: true
          description: The id number of the installation permit.
          maxLength: 254
        operation:
          type: string
          nullable: true
          description: Maintenance operations done to the sign, e.g. washing, straightening
            or painting.
          maxLength: 64
        scanned_at:
          type: string
          format: date-time
          nullable: true
          description: Date and time on which this sign was last scanned at.
        attachment_url:
          type: string
          format: uri
          nullable: true
          description: URL to a file attachment related to this sign.
          maxLength: 500
        created_by:
          type: string
          format: uuid
          readOnly: true
          nullable: true
        updated_by:
          type: string
          format: uuid
          readOnly: true
          nullable: true
        owner:
          type: string
          format: uuid
          description: Owner who orders and is responsible for the maintenance of
            the device.
        responsible_entity:
          type: string
          format: uuid
          nullable: true
          description: Organization or project that this device is assigned to.
        parent:
          type: string
          format: uuid
          nullable: true
          title: Parent Traffic Sign Real
          description: The traffic sign to which this additional sign is associated.
        additional_sign_plan:
          type: string
          format: uuid
          nullable: true
          description: The plan for this Additional Sign.
        mount_real:
          type: string
          format: uuid
          nullable: true
          description: Mount that this sign is mounted on.
        coverage_area:
          type: string
          format: uuid
          nullable: true
          description: Coverage area that this sign belongs to.
      required:
      - created_at
      - created_by
      - id
      - location
      - operations
      - owner
      - plan_decision_id
      - updated_at
      - updated_by
    AdditionalSignRealFile:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        file:
          type: string
          format: uri
        additional_sign_real:
          type: string
          format: uuid
      required:
      - additional_sign_real
      - file
      - id
    AdditionalSignRealFileCreateResponse:
      type: object
      properties:
        files:
          type: array
          items:
            $ref: '#/components/schemas/AdditionalSignRealFile'
      required:
      - files
    AdditionalSignRealOperation:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        operation_type:
          type: string
          readOnly: true
        operation_type_id:
          type: integer
        operation_date:
          type: string
          format: date
      required:
      - id
      - operation_date
      - operation_type
      - operation_type_id
    AdditionalSignRealOperationRequest:
      type: object
      properties:
        operation_type_id:
          type: integer
        operation_date:
          type: string
          format: date
      required:
      - operation_date
      - operation_type_id
    AdditionalSignRealRequest:
      type: object
      properties:
        location:
          type: string
          format: EWKT
          example: SRID=3879;POINT Z (25496751.5 6673129.5 1.5)
          minLength: 1
        device_type:
          type: string
          format: uuid
          nullable: true
        lifecycle:
          enum:
          - 3
          - 4
          - 5
          - 6
          type: integer
          description: |-
            Lifecycle of the device, which describes the activity status of the device.

            * `3` - Active
            * `4` - Temporarily active
            * `5` - Temporarily inactive
            * `6` - Inactive
        installation_date:
          type: string
          format: date
          nullable: true
          description: Date on which this device was installed on.
        installation_status:
          enum:
          - IN_USE
          - COVERED
          - FALLEN
          - MISSING
          - OTHER
          - ''
          - null
          type: string
          nullable: true
          description: |-
            Describes this devices installation status.

            * `IN_USE` - In use
            * `COVERED` - Covered
            * `FALLEN` - Fallen
            * `MISSING` - Missing
            * `OTHER` - Other
        condition:
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - null
          type: integer
          nullable: true
          description: |-
            Describes the condition of this device.

            * `1` - Very bad
            * `2` - Bad
            * `3` - Average
            * `4` - Good
            * `5` - Very good
        source_id:
          type: string
          nullable: true
          description: ID of the device in the source where this device was imported
            from.
          maxLength: 64
        source_name:
          type: string
          nullable: true
          description: Name of the source for where this device was imported from.
          maxLength: 254
        order:
          type: integer
          maximum: 32767
          minimum: -32768
          description: The order of the sign in relation to the signs at the same
            point. Order from top to bottom, from left to right starting at 1.
        content_s:
          type: object
          additionalProperties: {}
          nullable: true
          title: Content
          description: Additional sign content as JSON document
        missing_content:
          type: boolean
          description: Content (content_s) is not available although the device type
            content schema requires it.
        additional_information:
          type: string
          description: Additional information related to this device.
        height:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: The height of the sign from the ground, measured from the bottom
            in centimeters.
        size:
          enum:
          - S
          - M
          - L
          - ''
          - null
          type: string
          description: |-
            * `S` - Small
            * `M` - Medium
            * `L` - Large
          nullable: true
        direction:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: The direction a person is facing when looking perpendicular
            to the sign. The value is in degrees from 0 to 359, where 0 is north,
            90 is east, etc.
        reflection_class:
          enum:
          - R1
          - R2
          - R3
          - ''
          - null
          type: string
          description: |-
            * `R1` - r1
            * `R2` - r2
            * `R3` - r3
          nullable: true
          title: Reflection
        surface_class:
          enum:
          - CONVEX
          - FLAT
          - ''
          - null
          type: string
          description: |-
            * `CONVEX` - Convex
            * `FLAT` - Flat
          nullable: true
          title: Surface
        color:
          enum:
          - 1
          - 2
          - null
          type: integer
          description: |-
            * `1` - Blue
            * `2` - Yellow
          nullable: true
        road_name:
          type: string
          nullable: true
          description: Name of the road this sign is installed at.
          maxLength: 254
        lane_number:
          enum:
          - '11'
          - '21'
          - '31'
          - X2
          - X3
          - X4
          - X5
          - X6
          - X7
          - X8
          - X9
          - ''
          - null
          type: string
          nullable: true
          description: |-
            Describes which lane of the road this sign affects.

            * `11` - Main lane
            * `21` - Main lane
            * `31` - Lane allowing traffic to both directions
            * `X2` - First left additional lane
            * `X3` - First right additional lane
            * `X4` - Second left additional lane
            * `X5` - Second right additional lane
            * `X6` - Third left additional lane
            * `X7` - Third right additional lane
            * `X8` - Fourth left additional lane
            * `X9` - Fourth right additional lane
        lane_type:
          enum:
          - '1'
          - '2'
          - '3'
          - '4'
          - '5'
          - '6'
          - '7'
          - '8'
          - '9'
          - '10'
          - '11'
          - '20'
          - '21'
          - '22'
          - ''
          - null
          type: string
          nullable: true
          description: |-
            The type of lane which this sign affects.

            * `1` - Main lane
            * `2` - Fast lane
            * `3` - Turn right lane
            * `4` - Turn left lane
            * `5` - Auxiliary straight lane
            * `6` - Merge lane
            * `7` - Exit lane
            * `8` - Weaving lane
            * `9` - Public transport lane / taxi lane
            * `10` - Heavy vehicle lane
            * `11` - Reversible lane
            * `20` - Pedestrian and bike lane
            * `21` - Pedestrian lane
            * `22` - Bike lane
        location_specifier:
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - null
          type: integer
          nullable: true
          description: |-
            Specifies where the sign is in relation to the road.

            * `1` - Right side
            * `2` - Left side
            * `3` - Above
            * `4` - Middle
            * `5` - Vertical
            * `6` - Outside
        validity_period_start:
          type: string
          format: date
          nullable: true
          description: Date on which this sign becomes active.
        validity_period_end:
          type: string
          format: date
          nullable: true
          description: Date after which this sign becomes inactive.
        seasonal_validity_period_start:
          type: string
          format: date
          nullable: true
          description: Date on which this sign becomes seasonally active.
        seasonal_validity_period_end:
          type: string
          format: date
          nullable: true
          description: Date after which this sign becomes seasonally inactive.
        installation_id:
          type: string
          nullable: true
          description: The id number of the installation record.
          maxLength: 254
        installation_details:
          type: string
          nullable: true
          description: Additional details about the installation.
          maxLength: 254
        installed_by:
          type: string
          nullable: true
          description: Name of the organization who installed this sign.
          maxLength: 254
        manufacturer:
          type: string
          nullable: true
          description: Name of the organization that manufactured this sign.
          maxLength: 254
        rfid:
          type: string
          nullable: true
          description: RFID tag of the sign (if any).
          maxLength: 254
        permit_decision_id:
          type: string
          nullable: true
          description: The id number of the installation permit.
          maxLength: 254
        operation:
          type: string
          nullable: true
          description: Maintenance operations done to the sign, e.g. washing, straightening
            or painting.
          maxLength: 64
        scanned_at:
          type: string
          format: date-time
          nullable: true
          description: Date and time on which this sign was last scanned at.
        attachment_url:
          type: string
          format: uri
          nullable: true
          description: URL to a file attachment related to this sign.
          maxLength: 500
        owner:
          type: string
          format: uuid
          description: Owner who orders and is responsible for the maintenance of
            the device.
        responsible_entity:
          type: string
          format: uuid
          nullable: true
          description: Organization or project that this device is assigned to.
        parent:
          type: string
          format: uuid
          nullable: true
          title: Parent Traffic Sign Real
          description: The traffic sign to which this additional sign is associated.
        additional_sign_plan:
          type: string
          format: uuid
          nullable: true
          description: The plan for this Additional Sign.
        mount_real:
          type: string
          format: uuid
          nullable: true
          description: Mount that this sign is mounted on.
        coverage_area:
          type: string
          format: uuid
          nullable: true
          description: Coverage area that this sign belongs to.
      required:
      - location
      - owner
    BarrierPlanFile:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        file:
          type: string
          format: uri
        barrier_plan:
          type: string
          format: uuid
      required:
      - barrier_plan
      - file
      - id
    BarrierPlanFileCreateResponse:
      type: object
      properties:
        files:
          type: array
          items:
            $ref: '#/components/schemas/BarrierPlanFile'
      required:
      - files
    BarrierPlanInput:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        replaces:
          type: string
          format: uuid
          nullable: true
          description: ID to the device plan that this device is replacing
        location:
          type: string
          format: EWKT
          example: SRID=3879;MULTIPOLYGON Z (((25497733.5 6672927.5 0, 25497946.5
            6673032.5 0, 25498653.5 6673034.5 0, 25498987.5 6672708.5 0, 25498314.5
            6672170.5 0, 25497651.5 6672629.5 0, 25497646.5 6672775.5 0, 25497733.5
            6672927.5 0)))
        device_type:
          type: string
          format: uuid
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        lifecycle:
          enum:
          - 3
          - 4
          - 5
          - 6
          type: integer
          description: |-
            Lifecycle of the device, which describes the activity status of the device.

            * `3` - Active
            * `4` - Temporarily active
            * `5` - Temporarily inactive
            * `6` - Inactive
        source_id:
          type: string
          nullable: true
          description: ID of the device in the source where this device was imported
            from.
          maxLength: 64
        source_name:
          type: string
          nullable: true
          description: Name of the source for where this device was imported from.
          maxLength: 254
        road_name:
          type: string
          description: Name of the road this barrier is installed at.
          maxLength: 254
        lane_number:
          enum:
          - '11'
          - '21'
          - '31'
          - X2
          - X3
          - X4
          - X5
          - X6
          - X7
          - X8
          - X9
          - ''
          - null
          type: string
          nullable: true
          description: |-
            Describes which lane of the road this barrier affects.

            * `11` - Main lane
            * `21` - Main lane
            * `31` - Lane allowing traffic to both directions
            * `X2` - First left additional lane
            * `X3` - First right additional lane
            * `X4` - Second left additional lane
            * `X5` - Second right additional lane
            * `X6` - Third left additional lane
            * `X7` - Third right additional lane
            * `X8` - Fourth left additional lane
            * `X9` - Fourth right additional lane
        lane_type:
          enum:
          - '1'
          - '2'
          - '3'
          - '4'
          - '5'
          - '6'
          - '7'
          - '8'
          - '9'
          - '10'
          - '11'
          - '20'
          - '21'
          - '22'
          - ''
          - null
          type: string
          nullable: true
          description: |-
            The type of lane which this barrier affects.

            * `1` - Main lane
            * `2` - Fast lane
            * `3` - Turn right lane
            * `4` - Turn left lane
            * `5` - Auxiliary straight lane
            * `6` - Merge lane
            * `7` - Exit lane
            * `8` - Weaving lane
            * `9` - Public transport lane / taxi lane
            * `10` - Heavy vehicle lane
            * `11` - Reversible lane
            * `20` - Pedestrian and bike lane
            * `21` - Pedestrian lane
            * `22` - Bike lane
        location_specifier:
          enum:
          - 1
          - 2
          - 3
          - null
          type: integer
          nullable: true
          description: |-
            Specifies where the barrier is in relation to the road.

            * `1` - Middle of road or lane
            * `2` - Right of road or lane
            * `3` - Left of road or lane
        connection_type:
          enum:
          - 1
          - 2
          type: integer
          description: |-
            Describes if the barrier is open or closed.

            * `1` - Closed
            * `2` - Open out
        material:
          type: string
          nullable: true
          description: Describes the material that the barrier is made of.
          maxLength: 254
        is_electric:
          type: boolean
        reflective:
          enum:
          - 'YES'
          - 'NO'
          - RED_YELLOW
          - ''
          - null
          type: string
          description: |-
            * `YES` - Yes
            * `NO` - No
            * `RED_YELLOW` - Red-yellow
          nullable: true
        validity_period_start:
          type: string
          format: date
          nullable: true
          description: Date on which this barrier becomes active.
        validity_period_end:
          type: string
          format: date
          nullable: true
          description: Date after which this barrier becomes inactive.
        length:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: Length of the barrier in centimeters.
        count:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        txt:
          type: string
          nullable: true
          description: Text written on the barrier.
        created_by:
          type: string
          format: uuid
          readOnly: true
          nullable: true
        updated_by:
          type: string
          format: uuid
          readOnly: true
          nullable: true
        owner:
          type: string
          format: uuid
          description: Owner who orders and is responsible for the maintenance of
            the device.
        responsible_entity:
          type: string
          format: uuid
          nullable: true
          description: Organization or project that this device is assigned to.
        plan:
          type: string
          format: uuid
          nullable: true
          description: Plan which this Barrier Plan is a part of.
      required:
      - created_at
      - created_by
      - id
      - location
      - owner
      - road_name
      - updated_at
      - updated_by
    BarrierPlanInputRequest:
      type: object
      properties:
        replaces:
          type: string
          format: uuid
          nullable: true
          description: ID to the device plan that this device is replacing
        location:
          type: string
          format: EWKT
          example: SRID=3879;MULTIPOLYGON Z (((25497733.5 6672927.5 0, 25497946.5
            6673032.5 0, 25498653.5 6673034.5 0, 25498987.5 6672708.5 0, 25498314.5
            6672170.5 0, 25497651.5 6672629.5 0, 25497646.5 6672775.5 0, 25497733.5
            6672927.5 0)))
          minLength: 1
        device_type:
          type: string
          format: uuid
          nullable: true
        lifecycle:
          enum:
          - 3
          - 4
          - 5
          - 6
          type: integer
          description: |-
            Lifecycle of the device, which describes the activity status of the device.

            * `3` - Active
            * `4` - Temporarily active
            * `5` - Temporarily inactive
            * `6` - Inactive
        source_id:
          type: string
          nullable: true
          description: ID of the device in the source where this device was imported
            from.
          maxLength: 64
        source_name:
          type: string
          nullable: true
          description: Name of the source for where this device was imported from.
          maxLength: 254
        road_name:
          type: string
          minLength: 1
          description: Name of the road this barrier is installed at.
          maxLength: 254
        lane_number:
          enum:
          - '11'
          - '21'
          - '31'
          - X2
          - X3
          - X4
          - X5
          - X6
          - X7
          - X8
          - X9
          - ''
          - null
          type: string
          nullable: true
          description: |-
            Describes which lane of the road this barrier affects.

            * `11` - Main lane
            * `21` - Main lane
            * `31` - Lane allowing traffic to both directions
            * `X2` - First left additional lane
            * `X3` - First right additional lane
            * `X4` - Second left additional lane
            * `X5` - Second right additional lane
            * `X6` - Third left additional lane
            * `X7` - Third right additional lane
            * `X8` - Fourth left additional lane
            * `X9` - Fourth right additional lane
        lane_type:
          enum:
          - '1'
          - '2'
          - '3'
          - '4'
          - '5'
          - '6'
          - '7'
          - '8'
          - '9'
          - '10'
          - '11'
          - '20'
          - '21'
          - '22'
          - ''
          - null
          type: string
          nullable: true
          description: |-
            The type of lane which this barrier affects.

            * `1` - Main lane
            * `2` - Fast lane
            * `3` - Turn right lane
            * `4` - Turn left lane
            * `5` - Auxiliary straight lane
            * `6` - Merge lane
            * `7` - Exit lane
            * `8` - Weaving lane
            * `9` - Public transport lane / taxi lane
            * `10` - Heavy vehicle lane
            * `11` - Reversible lane
            * `20` - Pedestrian and bike lane
            * `21` - Pedestrian lane
            * `22` - Bike lane
        location_specifier:
          enum:
          - 1
          - 2
          - 3
          - null
          type: integer
          nullable: true
          description: |-
            Specifies where the barrier is in relation to the road.

            * `1` - Middle of road or lane
            * `2` - Right of road or lane
            * `3` - Left of road or lane
        connection_type:
          enum:
          - 1
          - 2
          type: integer
          description: |-
            Describes if the barrier is open or closed.

            * `1` - Closed
            * `2` - Open out
        material:
          type: string
          nullable: true
          description: Describes the material that the barrier is made of.
          maxLength: 254
        is_electric:
          type: boolean
        reflective:
          enum:
          - 'YES'
          - 'NO'
          - RED_YELLOW
          - ''
          - null
          type: string
          description: |-
            * `YES` - Yes
            * `NO` - No
            * `RED_YELLOW` - Red-yellow
          nullable: true
        validity_period_start:
          type: string
          format: date
          nullable: true
          description: Date on which this barrier becomes active.
        validity_period_end:
          type: string
          format: date
          nullable: true
          description: Date after which this barrier becomes inactive.
        length:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: Length of the barrier in centimeters.
        count:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        txt:
          type: string
          nullable: true
          description: Text written on the barrier.
        owner:
          type: string
          format: uuid
          description: Owner who orders and is responsible for the maintenance of
            the device.
        responsible_entity:
          type: string
          format: uuid
          nullable: true
          description: Organization or project that this device is assigned to.
        plan:
          type: string
          format: uuid
          nullable: true
          description: Plan which this Barrier Plan is a part of.
      required:
      - location
      - owner
      - road_name
    BarrierPlanOutput:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        replaces:
          type: string
          format: uuid
          nullable: true
          description: ID of the device plan that this device plan has replaced
          readOnly: true
        replaced_by:
          type: string
          format: uuid
          nullable: true
          description: ID of the device plan that has replaced this device plan
          readOnly: true
        is_replaced:
          type: boolean
          description: Whether this device plan has been replaced by another device
            plan
          readOnly: true
        location:
          type: string
          format: EWKT
          example: SRID=3879;MULTIPOLYGON Z (((25497733.5 6672927.5 0, 25497946.5
            6673032.5 0, 25498653.5 6673034.5 0, 25498987.5 6672708.5 0, 25498314.5
            6672170.5 0, 25497651.5 6672629.5 0, 25497646.5 6672775.5 0, 25497733.5
            6672927.5 0)))
        files:
          type: array
          items:
            $ref: '#/components/schemas/BarrierPlanFile'
          readOnly: true
        device_type:
          type: string
          format: uuid
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        lifecycle:
          enum:
          - 3
          - 4
          - 5
          - 6
          type: integer
          description: |-
            Lifecycle of the device, which describes the activity status of the device.

            * `3` - Active
            * `4` - Temporarily active
            * `5` - Temporarily inactive
            * `6` - Inactive
        source_id:
          type: string
          nullable: true
          description: ID of the device in the source where this device was imported
            from.
          maxLength: 64
        source_name:
          type: string
          nullable: true
          description: Name of the source for where this device was imported from.
          maxLength: 254
        road_name:
          type: string
          description: Name of the road this barrier is installed at.
          maxLength: 254
        lane_number:
          enum:
          - '11'
          - '21'
          - '31'
          - X2
          - X3
          - X4
          - X5
          - X6
          - X7
          - X8
          - X9
          - ''
          - null
          type: string
          nullable: true
          description: |-
            Describes which lane of the road this barrier affects.

            * `11` - Main lane
            * `21` - Main lane
            * `31` - Lane allowing traffic to both directions
            * `X2` - First left additional lane
            * `X3` - First right additional lane
            * `X4` - Second left additional lane
            * `X5` - Second right additional lane
            * `X6` - Third left additional lane
            * `X7` - Third right additional lane
            * `X8` - Fourth left additional lane
            * `X9` - Fourth right additional lane
        lane_type:
          enum:
          - '1'
          - '2'
          - '3'
          - '4'
          - '5'
          - '6'
          - '7'
          - '8'
          - '9'
          - '10'
          - '11'
          - '20'
          - '21'
          - '22'
          - ''
          - null
          type: string
          nullable: true
          description: |-
            The type of lane which this barrier affects.

            * `1` - Main lane
            * `2` - Fast lane
            * `3` - Turn right lane
            * `4` - Turn left lane
            * `5` - Auxiliary straight lane
            * `6` - Merge lane
            * `7` - Exit lane
            * `8` - Weaving lane
            * `9` - Public transport lane / taxi lane
            * `10` - Heavy vehicle lane
            * `11` - Reversible lane
            * `20` - Pedestrian and bike lane
            * `21` - Pedestrian lane
            * `22` - Bike lane
        location_specifier:
          enum:
          - 1
          - 2
          - 3
          - null
          type: integer
          nullable: true
          description: |-
            Specifies where the barrier is in relation to the road.

            * `1` - Middle of road or lane
            * `2` - Right of road or lane
            * `3` - Left of road or lane
        connection_type:
          enum:
          - 1
          - 2
          type: integer
          description: |-
            Describes if the barrier is open or closed.

            * `1` - Closed
            * `2` - Open out
        material:
          type: string
          nullable: true
          description: Describes the material that the barrier is made of.
          maxLength: 254
        is_electric:
          type: boolean
        reflective:
          enum:
          - 'YES'
          - 'NO'
          - RED_YELLOW
          - ''
          - null
          type: string
          description: |-
            * `YES` - Yes
            * `NO` - No
            * `RED_YELLOW` - Red-yellow
          nullable: true
        validity_period_start:
          type: string
          format: date
          nullable: true
          description: Date on which this barrier becomes active.
        validity_period_end:
          type: string
          format: date
          nullable: true
          description: Date after which this barrier becomes inactive.
        length:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: Length of the barrier in centimeters.
        count:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        txt:
          type: string
          nullable: true
          description: Text written on the barrier.
        created_by:
          type: string
          format: uuid
          readOnly: true
          nullable: true
        updated_by:
          type: string
          format: uuid
          readOnly: true
          nullable: true
        owner:
          type: string
          format: uuid
          description: Owner who orders and is responsible for the maintenance of
            the device.
        responsible_entity:
          type: string
          format: uuid
          nullable: true
          description: Organization or project that this device is assigned to.
        plan:
          type: string
          format: uuid
          nullable: true
          description: Plan which this Barrier Plan is a part of.
      required:
      - created_at
      - created_by
      - files
      - id
      - is_replaced
      - location
      - owner
      - replaced_by
      - replaces
      - road_name
      - updated_at
      - updated_by
    BarrierReal:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        location:
          type: string
          format: EWKT
          example: SRID=3879;MULTIPOLYGON Z (((25497733.5 6672927.5 0, 25497946.5
            6673032.5 0, 25498653.5 6673034.5 0, 25498987.5 6672708.5 0, 25498314.5
            6672170.5 0, 25497651.5 6672629.5 0, 25497646.5 6672775.5 0, 25497733.5
            6672927.5 0)))
        files:
          type: array
          items:
            $ref: '#/components/schemas/BarrierRealFile'
          readOnly: true
        device_type:
          type: string
          format: uuid
          nullable: true
        operations:
          type: array
          items:
            $ref: '#/components/schemas/BarrierRealOperation'
          readOnly: true
        plan_decision_id:
          type: string
          description: Year and verdict section separated with a dash
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        lifecycle:
          enum:
          - 3
          - 4
          - 5
          - 6
          type: integer
          description: |-
            Lifecycle of the device, which describes the activity status of the device.

            * `3` - Active
            * `4` - Temporarily active
            * `5` - Temporarily inactive
            * `6` - Inactive
        installation_date:
          type: string
          format: date
          nullable: true
          description: Date on which this device was installed on.
        installation_status:
          enum:
          - IN_USE
          - COVERED
          - FALLEN
          - MISSING
          - OTHER
          - ''
          - null
          type: string
          nullable: true
          description: |-
            Describes this devices installation status.

            * `IN_USE` - In use
            * `COVERED` - Covered
            * `FALLEN` - Fallen
            * `MISSING` - Missing
            * `OTHER` - Other
        condition:
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - null
          type: integer
          nullable: true
          description: |-
            Describes the condition of this device.

            * `1` - Very bad
            * `2` - Bad
            * `3` - Average
            * `4` - Good
            * `5` - Very good
        source_id:
          type: string
          nullable: true
          description: ID of the device in the source where this device was imported
            from.
          maxLength: 64
        source_name:
          type: string
          nullable: true
          description: Name of the source for where this device was imported from.
          maxLength: 254
        road_name:
          type: string
          description: Name of the road this barrier is installed at.
          maxLength: 254
        lane_number:
          enum:
          - '11'
          - '21'
          - '31'
          - X2
          - X3
          - X4
          - X5
          - X6
          - X7
          - X8
          - X9
          - ''
          - null
          type: string
          nullable: true
          description: |-
            Describes which lane of the road this barrier affects.

            * `11` - Main lane
            * `21` - Main lane
            * `31` - Lane allowing traffic to both directions
            * `X2` - First left additional lane
            * `X3` - First right additional lane
            * `X4` - Second left additional lane
            * `X5` - Second right additional lane
            * `X6` - Third left additional lane
            * `X7` - Third right additional lane
            * `X8` - Fourth left additional lane
            * `X9` - Fourth right additional lane
        lane_type:
          enum:
          - '1'
          - '2'
          - '3'
          - '4'
          - '5'
          - '6'
          - '7'
          - '8'
          - '9'
          - '10'
          - '11'
          - '20'
          - '21'
          - '22'
          - ''
          - null
          type: string
          nullable: true
          description: |-
            The type of lane which this barrier affects.

            * `1` - Main lane
            * `2` - Fast lane
            * `3` - Turn right lane
            * `4` - Turn left lane
            * `5` - Auxiliary straight lane
            * `6` - Merge lane
            * `7` - Exit lane
            * `8` - Weaving lane
            * `9` - Public transport lane / taxi lane
            * `10` - Heavy vehicle lane
            * `11` - Reversible lane
            * `20` - Pedestrian and bike lane
            * `21` - Pedestrian lane
            * `22` - Bike lane
        location_specifier:
          enum:
          - 1
          - 2
          - 3
          - null
          type: integer
          nullable: true
          description: |-
            Specifies where the barrier is in relation to the road.

            * `1` - Middle of road or lane
            * `2` - Right of road or lane
            * `3` - Left of road or lane
        connection_type:
          enum:
          - 1
          - 2
          type: integer
          description: |-
            Describes if the barrier is open or closed.

            * `1` - Closed
            * `2` - Open out
        material:
          type: string
          nullable: true
          description: Describes the material that the barrier is made of.
          maxLength: 254
        is_electric:
          type: boolean
        reflective:
          enum:
          - 'YES'
          - 'NO'
          - RED_YELLOW
          - ''
          - null
          type: string
          description: |-
            * `YES` - Yes
            * `NO` - No
            * `RED_YELLOW` - Red-yellow
          nullable: true
        validity_period_start:
          type: string
          format: date
          nullable: true
          description: Date on which this barrier becomes active.
        validity_period_end:
          type: string
          format: date
          nullable: true
          description: Date after which this barrier becomes inactive.
        length:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: Length of the barrier in centimeters.
        count:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        txt:
          type: string
          nullable: true
          description: Text written on the barrier.
        created_by:
          type: string
          format: uuid
          readOnly: true
          nullable: true
        updated_by:
          type: string
          format: uuid
          readOnly: true
          nullable: true
        owner:
          type: string
          format: uuid
          description: Owner who orders and is responsible for the maintenance of
            the device.
        responsible_entity:
          type: string
          format: uuid
          nullable: true
          description: Organization or project that this device is assigned to.
        barrier_plan:
          type: string
          format: uuid
          nullable: true
          description: The plan for this barrier.
      required:
      - created_at
      - created_by
      - files
      - id
      - location
      - operations
      - owner
      - plan_decision_id
      - road_name
      - updated_at
      - updated_by
    BarrierRealFile:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        file:
          type: string
          format: uri
        barrier_real:
          type: string
          format: uuid
      required:
      - barrier_real
      - file
      - id
    BarrierRealFileCreateResponse:
      type: object
      properties:
        files:
          type: array
          items:
            $ref: '#/components/schemas/BarrierRealFile'
      required:
      - files
    BarrierRealFileRequest:
      type: object
      properties:
        file:
          type: string
          format: binary
        barrier_real:
          type: string
          format: uuid
      required:
      - barrier_real
      - file
    BarrierRealOperation:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        operation_type:
          type: string
          readOnly: true
        operation_type_id:
          type: integer
        operation_date:
          type: string
          format: date
      required:
      - id
      - operation_date
      - operation_type
      - operation_type_id
    BarrierRealOperationRequest:
      type: object
      properties:
        operation_type_id:
          type: integer
        operation_date:
          type: string
          format: date
      required:
      - operation_date
      - operation_type_id
    BarrierRealRequest:
      type: object
      properties:
        location:
          type: string
          format: EWKT
          example: SRID=3879;MULTIPOLYGON Z (((25497733.5 6672927.5 0, 25497946.5
            6673032.5 0, 25498653.5 6673034.5 0, 25498987.5 6672708.5 0, 25498314.5
            6672170.5 0, 25497651.5 6672629.5 0, 25497646.5 6672775.5 0, 25497733.5
            6672927.5 0)))
          minLength: 1
        device_type:
          type: string
          format: uuid
          nullable: true
        lifecycle:
          enum:
          - 3
          - 4
          - 5
          - 6
          type: integer
          description: |-
            Lifecycle of the device, which describes the activity status of the device.

            * `3` - Active
            * `4` - Temporarily active
            * `5` - Temporarily inactive
            * `6` - Inactive
        installation_date:
          type: string
          format: date
          nullable: true
          description: Date on which this device was installed on.
        installation_status:
          enum:
          - IN_USE
          - COVERED
          - FALLEN
          - MISSING
          - OTHER
          - ''
          - null
          type: string
          nullable: true
          description: |-
            Describes this devices installation status.

            * `IN_USE` - In use
            * `COVERED` - Covered
            * `FALLEN` - Fallen
            * `MISSING` - Missing
            * `OTHER` - Other
        condition:
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - null
          type: integer
          nullable: true
          description: |-
            Describes the condition of this device.

            * `1` - Very bad
            * `2` - Bad
            * `3` - Average
            * `4` - Good
            * `5` - Very good
        source_id:
          type: string
          nullable: true
          description: ID of the device in the source where this device was imported
            from.
          maxLength: 64
        source_name:
          type: string
          nullable: true
          description: Name of the source for where this device was imported from.
          maxLength: 254
        road_name:
          type: string
          minLength: 1
          description: Name of the road this barrier is installed at.
          maxLength: 254
        lane_number:
          enum:
          - '11'
          - '21'
          - '31'
          - X2
          - X3
          - X4
          - X5
          - X6
          - X7
          - X8
          - X9
          - ''
          - null
          type: string
          nullable: true
          description: |-
            Describes which lane of the road this barrier affects.

            * `11` - Main lane
            * `21` - Main lane
            * `31` - Lane allowing traffic to both directions
            * `X2` - First left additional lane
            * `X3` - First right additional lane
            * `X4` - Second left additional lane
            * `X5` - Second right additional lane
            * `X6` - Third left additional lane
            * `X7` - Third right additional lane
            * `X8` - Fourth left additional lane
            * `X9` - Fourth right additional lane
        lane_type:
          enum:
          - '1'
          - '2'
          - '3'
          - '4'
          - '5'
          - '6'
          - '7'
          - '8'
          - '9'
          - '10'
          - '11'
          - '20'
          - '21'
          - '22'
          - ''
          - null
          type: string
          nullable: true
          description: |-
            The type of lane which this barrier affects.

            * `1` - Main lane
            * `2` - Fast lane
            * `3` - Turn right lane
            * `4` - Turn left lane
            * `5` - Auxiliary straight lane
            * `6` - Merge lane
            * `7` - Exit lane
            * `8` - Weaving lane
            * `9` - Public transport lane / taxi lane
            * `10` - Heavy vehicle lane
            * `11` - Reversible lane
            * `20` - Pedestrian and bike lane
            * `21` - Pedestrian lane
            * `22` - Bike lane
        location_specifier:
          enum:
          - 1
          - 2
          - 3
          - null
          type: integer
          nullable: true
          description: |-
            Specifies where the barrier is in relation to the road.

            * `1` - Middle of road or lane
            * `2` - Right of road or lane
            * `3` - Left of road or lane
        connection_type:
          enum:
          - 1
          - 2
          type: integer
          description: |-
            Describes if the barrier is open or closed.

            * `1` - Closed
            * `2` - Open out
        material:
          type: string
          nullable: true
          description: Describes the material that the barrier is made of.
          maxLength: 254
        is_electric:
          type: boolean
        reflective:
          enum:
          - 'YES'
          - 'NO'
          - RED_YELLOW
          - ''
          - null
          type: string
          description: |-
            * `YES` - Yes
            * `NO` - No
            * `RED_YELLOW` - Red-yellow
          nullable: true
        validity_period_start:
          type: string
          format: date
          nullable: true
          description: Date on which this barrier becomes active.
        validity_period_end:
          type: string
          format: date
          nullable: true
          description: Date after which this barrier becomes inactive.
        length:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: Length of the barrier in centimeters.
        count:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        txt:
          type: string
          nullable: true
          description: Text written on the barrier.
        owner:
          type: string
          format: uuid
          description: Owner who orders and is responsible for the maintenance of
            the device.
        responsible_entity:
          type: string
          format: uuid
          nullable: true
          description: Organization or project that this device is assigned to.
        barrier_plan:
          type: string
          format: uuid
          nullable: true
          description: The plan for this barrier.
      required:
      - location
      - owner
      - road_name
    CityFurnitureColor:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          description: Name of the color in Helsinki Design System or Manual.
          maxLength: 64
        rgb:
          type: string
          description: RGB Hex value of the color
          pattern: ^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$
          maxLength: 25
      required:
      - id
      - name
    CityFurnitureColorRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          description: Name of the color in Helsinki Design System or Manual.
          maxLength: 64
        rgb:
          type: string
          minLength: 1
          description: RGB Hex value of the color
          pattern: ^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$
          maxLength: 25
      required:
      - name
    CityFurnitureDeviceType:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        code:
          type: string
          description: Code of the Device Type in the Helsinki Design Manual.
          maxLength: 32
        class_type:
          enum:
          - 1000
          - 1010
          - 1020
          - 1030
          type: integer
          title: City Furniture Class type
          description: |-
            OGC CityGML City Furniture Class

            * `1000` - Traffic
            * `1010` - Communication
            * `1020` - Security
            * `1030` - Others
        function_type:
          enum:
          - 1000
          - 1010
          - 1020
          - 1030
          - 1040
          - 1050
          - 1060
          - 1070
          - 1080
          - 1090
          - 1100
          - 1110
          - 1120
          - 1130
          - 1140
          - 1150
          - 1160
          - 1170
          - 1180
          - 1190
          - 1200
          - 1210
          - 1220
          - 1230
          - 1240
          - 1250
          - 1260
          - 1270
          - 1280
          - 1290
          - 1300
          - 1310
          - 1320
          - 1330
          - 1340
          - 1350
          - 1360
          - 1370
          - 1380
          - 1390
          - 1400
          - 1410
          - 1420
          - 1430
          - 1440
          - 1450
          - 1470
          - 1480
          - 1490
          - 1500
          - 1510
          - 1520
          - 1530
          - 1540
          type: integer
          title: City Furniture Function or Usage type
          description: |-
            OGC CityGML City Furniture Function or Usage type

            * `1000` - Communication fixture
            * `1010` - Telephone box
            * `1020` - Postbox
            * `1030` - Emergency call fixture
            * `1040` - Fire detector
            * `1050` - Police call post
            * `1060` - Switching unit
            * `1070` - Road sign
            * `1080` - Traffic light
            * `1090` - Free-standing sign
            * `1100` - Free-standing warning sign
            * `1110` - Bus stop
            * `1120` - Milestone
            * `1130` - Rail level crossing
            * `1140` - Gate
            * `1150` - Streetlamp, latern or candelabra
            * `1160` - Column
            * `1170` - Lamp post
            * `1180` - Flagpole
            * `1190` - Street sink box
            * `1200` - Rubbish bin
            * `1210` - Clock
            * `1220` - Directional spot light
            * `1230` - Floodlight mast
            * `1240` - Windmill
            * `1250` - Solar cell
            * `1260` - Water wheel
            * `1270` - Pole
            * `1280` - Radio mast
            * `1290` - Aerial
            * `1300` - Radio telescope
            * `1310` - Chimney
            * `1320` - Marker
            * `1330` - Hydrant
            * `1340` - Upper corridor fire-hydrant
            * `1350` - Lower floor panel fire-hydrant
            * `1360` - Slidegate valve cap
            * `1370` - Entrance shaft
            * `1380` - Converter
            * `1390` - Stair
            * `1400` - Outside staircase
            * `1410` - Escalator
            * `1420` - Ramp
            * `1430` - Patio
            * `1440` - Fence
            * `1450` - Memorial/monument
            * `1470` - Wayside shrine
            * `1480` - Crossroads
            * `1490` - Cross on the summit of a mountain
            * `1500` - Fountain
            * `1510` - Block mark
            * `1520` - Boundary post
            * `1530` - Bench
            * `1540` - Others
        icon:
          type: string
          description: Icon of the actual device
          maxLength: 100
        description_fi:
          type: string
          nullable: true
          title: Finnish Description
          description: Description of the Device Type in Finnish.
          maxLength: 254
        description_sw:
          type: string
          nullable: true
          title: Swedish Description
          description: Description of the Device Type in Swedish.
          maxLength: 254
        description_en:
          type: string
          nullable: true
          title: English Description
          description: Description of the Device Type in English.
          maxLength: 254
        size:
          type: string
          description: Standard size of the Device Type.
          maxLength: 50
        target_model:
          enum:
          - furniture_signpost
          - ''
          - null
          type: string
          nullable: true
          title: Target data model
          description: |-
            City Furniture model that this Device Type is usable for.

            * `furniture_signpost` - Furniture signpost
      required:
      - class_type
      - code
      - function_type
      - id
    CityFurnitureDeviceTypeRequest:
      type: object
      properties:
        code:
          type: string
          minLength: 1
          description: Code of the Device Type in the Helsinki Design Manual.
          maxLength: 32
        class_type:
          enum:
          - 1000
          - 1010
          - 1020
          - 1030
          type: integer
          title: City Furniture Class type
          description: |-
            OGC CityGML City Furniture Class

            * `1000` - Traffic
            * `1010` - Communication
            * `1020` - Security
            * `1030` - Others
        function_type:
          enum:
          - 1000
          - 1010
          - 1020
          - 1030
          - 1040
          - 1050
          - 1060
          - 1070
          - 1080
          - 1090
          - 1100
          - 1110
          - 1120
          - 1130
          - 1140
          - 1150
          - 1160
          - 1170
          - 1180
          - 1190
          - 1200
          - 1210
          - 1220
          - 1230
          - 1240
          - 1250
          - 1260
          - 1270
          - 1280
          - 1290
          - 1300
          - 1310
          - 1320
          - 1330
          - 1340
          - 1350
          - 1360
          - 1370
          - 1380
          - 1390
          - 1400
          - 1410
          - 1420
          - 1430
          - 1440
          - 1450
          - 1470
          - 1480
          - 1490
          - 1500
          - 1510
          - 1520
          - 1530
          - 1540
          type: integer
          title: City Furniture Function or Usage type
          description: |-
            OGC CityGML City Furniture Function or Usage type

            * `1000` - Communication fixture
            * `1010` - Telephone box
            * `1020` - Postbox
            * `1030` - Emergency call fixture
            * `1040` - Fire detector
            * `1050` - Police call post
            * `1060` - Switching unit
            * `1070` - Road sign
            * `1080` - Traffic light
            * `1090` - Free-standing sign
            * `1100` - Free-standing warning sign
            * `1110` - Bus stop
            * `1120` - Milestone
            * `1130` - Rail level crossing
            * `1140` - Gate
            * `1150` - Streetlamp, latern or candelabra
            * `1160` - Column
            * `1170` - Lamp post
            * `1180` - Flagpole
            * `1190` - Street sink box
            * `1200` - Rubbish bin
            * `1210` - Clock
            * `1220` - Directional spot light
            * `1230` - Floodlight mast
            * `1240` - Windmill
            * `1250` - Solar cell
            * `1260` - Water wheel
            * `1270` - Pole
            * `1280` - Radio mast
            * `1290` - Aerial
            * `1300` - Radio telescope
            * `1310` - Chimney
            * `1320` - Marker
            * `1330` - Hydrant
            * `1340` - Upper corridor fire-hydrant
            * `1350` - Lower floor panel fire-hydrant
            * `1360` - Slidegate valve cap
            * `1370` - Entrance shaft
            * `1380` - Converter
            * `1390` - Stair
            * `1400` - Outside staircase
            * `1410` - Escalator
            * `1420` - Ramp
            * `1430` - Patio
            * `1440` - Fence
            * `1450` - Memorial/monument
            * `1470` - Wayside shrine
            * `1480` - Crossroads
            * `1490` - Cross on the summit of a mountain
            * `1500` - Fountain
            * `1510` - Block mark
            * `1520` - Boundary post
            * `1530` - Bench
            * `1540` - Others
        icon:
          type: string
          description: Icon of the actual device
          maxLength: 100
        description_fi:
          type: string
          nullable: true
          title: Finnish Description
          description: Description of the Device Type in Finnish.
          maxLength: 254
        description_sw:
          type: string
          nullable: true
          title: Swedish Description
          description: Description of the Device Type in Swedish.
          maxLength: 254
        description_en:
          type: string
          nullable: true
          title: English Description
          description: Description of the Device Type in English.
          maxLength: 254
        size:
          type: string
          description: Standard size of the Device Type.
          maxLength: 50
        target_model:
          enum:
          - furniture_signpost
          - ''
          - null
          type: string
          nullable: true
          title: Target data model
          description: |-
            City Furniture model that this Device Type is usable for.

            * `furniture_signpost` - Furniture signpost
      required:
      - class_type
      - code
      - function_type
    CityFurnitureTarget:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        source_id:
          type: string
          nullable: true
          description: ID of the device in the source where this device was imported
            from.
          maxLength: 64
        source_name:
          type: string
          nullable: true
          description: Name of the source for where this device was imported from.
          maxLength: 254
        name_fi:
          type: string
          title: Finnish name
          description: Name of the target in Finnish.
          maxLength: 254
        name_sw:
          type: string
          nullable: true
          title: Swedish name
          description: Name of the target in Swedish.
          maxLength: 254
        name_en:
          type: string
          nullable: true
          title: English name
          description: Name of the target in English.
          maxLength: 254
        description:
          type: string
          nullable: true
          description: Description of the target.
          maxLength: 254
      required:
      - id
      - name_fi
    CityFurnitureTargetRequest:
      type: object
      properties:
        source_id:
          type: string
          nullable: true
          description: ID of the device in the source where this device was imported
            from.
          maxLength: 64
        source_name:
          type: string
          nullable: true
          description: Name of the source for where this device was imported from.
          maxLength: 254
        name_fi:
          type: string
          minLength: 1
          title: Finnish name
          description: Name of the target in Finnish.
          maxLength: 254
        name_sw:
          type: string
          nullable: true
          title: Swedish name
          description: Name of the target in Swedish.
          maxLength: 254
        name_en:
          type: string
          nullable: true
          title: English name
          description: Name of the target in English.
          maxLength: 254
        description:
          type: string
          nullable: true
          description: Description of the target.
          maxLength: 254
      required:
      - name_fi
    FurnitureSignpostPlan:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        location:
          type: string
          format: EWKT
          example: SRID=3879;POINT Z (25496751.5 6673129.5 1.5)
        files:
          type: array
          items:
            $ref: '#/components/schemas/FurnitureSignpostPlanFile'
          readOnly: true
        device_type:
          type: string
          format: uuid
        target_name:
          type: string
          readOnly: true
        device_type_description:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        lifecycle:
          enum:
          - 3
          - 4
          - 5
          - 6
          type: integer
          description: |-
            Lifecycle of the device, which describes the activity status of the device.

            * `3` - Active
            * `4` - Temporarily active
            * `5` - Temporarily inactive
            * `6` - Inactive
        source_id:
          type: string
          nullable: true
          description: ID of the device in the source where this device was imported
            from.
          maxLength: 64
        source_name:
          type: string
          nullable: true
          description: Name of the source for where this device was imported from.
          maxLength: 254
        location_name_fi:
          type: string
          nullable: true
          title: Finnish location name
          description: Verbose name for the furniture signposts location in Finnish,
            e.g. street, park or island.
          maxLength: 254
        location_name_sw:
          type: string
          nullable: true
          title: Swedish location name
          description: Verbose name for the furniture signposts location in Swedish,
            e.g. street, park or island.
          maxLength: 254
        location_name_en:
          type: string
          nullable: true
          title: English location name
          description: Verbose name for the furniture signposts location in English,
            e.g. street, park or island.
          maxLength: 254
        direction:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: The direction a person is facing when looking perpendicular
            to the sign. The value is in degrees from 0 to 359, where 0 is north,
            90 is east, etc.
        location_additional_info:
          type: string
          nullable: true
          title: Additional location info
          description: Additional information about the install location.
          maxLength: 254
        size:
          type: string
          nullable: true
          description: Size of the signpost. Enter only if device has a non-standard
            size.
          maxLength: 254
        height:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          nullable: true
          description: The height of the sign from the ground, measured from the bottom
            in centimeters.
        order:
          type: integer
          maximum: 32767
          minimum: -32768
          description: The order of the sign in relation to the signs at the same
            point. Order from top to bottom, from left to right starting at 1.
        arrow_direction:
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - null
          type: integer
          nullable: true
          description: |-
            Direction of the arrow on this device in relation to the sign.

            * `1` - Up
            * `2` - Down
            * `3` - Left
            * `4` - Right
            * `5` - Top right
            * `6` - Bottom right
            * `7` - Top left
            * `8` - Bottom left
        pictogram:
          type: string
          nullable: true
          description: Description of the pictogram on the sign.
          maxLength: 254
        value:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
          title: Furniture signpost value
          description: Numeric value on the sign.
        text_content_fi:
          type: string
          nullable: true
          title: Finnish text content
          description: Content of the sign in Finnish.
        text_content_sw:
          type: string
          nullable: true
          title: Swedish text content
          description: Content of the sign in Swedish.
        text_content_en:
          type: string
          nullable: true
          title: English text content
          description: Content of the sign in English.
        content_responsible_entity:
          type: string
          nullable: true
          title: Content's responsible entity
          description: Entity responsible for the device's content.
          maxLength: 254
        validity_period_start:
          type: string
          format: date
          nullable: true
          description: Date on which this device becomes active.
        validity_period_end:
          type: string
          format: date
          nullable: true
          description: Date after which this device becomes inactive.
        additional_material_url:
          type: string
          nullable: true
          description: Additional material about the device. This should be publicly
            available.
          maxLength: 254
        created_by:
          type: string
          format: uuid
          readOnly: true
          nullable: true
        updated_by:
          type: string
          format: uuid
          readOnly: true
          nullable: true
        owner:
          type: string
          format: uuid
          description: Owner who orders and is responsible for the maintenance of
            the device.
        responsible_entity:
          type: string
          format: uuid
          nullable: true
          description: Organization or project that this device is assigned to.
        color:
          type: string
          format: uuid
          nullable: true
          description: Color of the device from Helsinki Design Manual.
        target:
          type: string
          format: uuid
          nullable: true
          description: Target subject, which this device relates to.
        mount_plan:
          type: string
          format: uuid
          nullable: true
          description: Mount that this device is mounted on.
        parent:
          type: string
          format: uuid
          nullable: true
          title: Parent Furniture Signpost Plan
          description: Furniture Signpost inside which this device is located.
        plan:
          type: string
          format: uuid
          nullable: true
          description: Plan which this Device Plan is a part of.
      required:
      - created_at
      - created_by
      - device_type
      - device_type_description
      - files
      - id
      - location
      - owner
      - target_name
      - updated_at
      - updated_by
    FurnitureSignpostPlanFile:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        file:
          type: string
          format: uri
        furniture_signpost_plan:
          type: string
          format: uuid
      required:
      - file
      - furniture_signpost_plan
      - id
    FurnitureSignpostPlanFileCreateResponse:
      type: object
      properties:
        files:
          type: array
          items:
            $ref: '#/components/schemas/FurnitureSignpostPlanFile'
      required:
      - files
    FurnitureSignpostPlanFileRequest:
      type: object
      properties:
        file:
          type: string
          format: binary
        furniture_signpost_plan:
          type: string
          format: uuid
      required:
      - file
      - furniture_signpost_plan
    FurnitureSignpostPlanRequest:
      type: object
      properties:
        location:
          type: string
          format: EWKT
          example: SRID=3879;POINT Z (25496751.5 6673129.5 1.5)
          minLength: 1
        device_type:
          type: string
          format: uuid
        lifecycle:
          enum:
          - 3
          - 4
          - 5
          - 6
          type: integer
          description: |-
            Lifecycle of the device, which describes the activity status of the device.

            * `3` - Active
            * `4` - Temporarily active
            * `5` - Temporarily inactive
            * `6` - Inactive
        source_id:
          type: string
          nullable: true
          description: ID of the device in the source where this device was imported
            from.
          maxLength: 64
        source_name:
          type: string
          nullable: true
          description: Name of the source for where this device was imported from.
          maxLength: 254
        location_name_fi:
          type: string
          nullable: true
          title: Finnish location name
          description: Verbose name for the furniture signposts location in Finnish,
            e.g. street, park or island.
          maxLength: 254
        location_name_sw:
          type: string
          nullable: true
          title: Swedish location name
          description: Verbose name for the furniture signposts location in Swedish,
            e.g. street, park or island.
          maxLength: 254
        location_name_en:
          type: string
          nullable: true
          title: English location name
          description: Verbose name for the furniture signposts location in English,
            e.g. street, park or island.
          maxLength: 254
        direction:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: The direction a person is facing when looking perpendicular
            to the sign. The value is in degrees from 0 to 359, where 0 is north,
            90 is east, etc.
        location_additional_info:
          type: string
          nullable: true
          title: Additional location info
          description: Additional information about the install location.
          maxLength: 254
        size:
          type: string
          nullable: true
          description: Size of the signpost. Enter only if device has a non-standard
            size.
          maxLength: 254
        height:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          nullable: true
          description: The height of the sign from the ground, measured from the bottom
            in centimeters.
        order:
          type: integer
          maximum: 32767
          minimum: -32768
          description: The order of the sign in relation to the signs at the same
            point. Order from top to bottom, from left to right starting at 1.
        arrow_direction:
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - null
          type: integer
          nullable: true
          description: |-
            Direction of the arrow on this device in relation to the sign.

            * `1` - Up
            * `2` - Down
            * `3` - Left
            * `4` - Right
            * `5` - Top right
            * `6` - Bottom right
            * `7` - Top left
            * `8` - Bottom left
        pictogram:
          type: string
          nullable: true
          description: Description of the pictogram on the sign.
          maxLength: 254
        value:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
          title: Furniture signpost value
          description: Numeric value on the sign.
        text_content_fi:
          type: string
          nullable: true
          title: Finnish text content
          description: Content of the sign in Finnish.
        text_content_sw:
          type: string
          nullable: true
          title: Swedish text content
          description: Content of the sign in Swedish.
        text_content_en:
          type: string
          nullable: true
          title: English text content
          description: Content of the sign in English.
        content_responsible_entity:
          type: string
          nullable: true
          title: Content's responsible entity
          description: Entity responsible for the device's content.
          maxLength: 254
        validity_period_start:
          type: string
          format: date
          nullable: true
          description: Date on which this device becomes active.
        validity_period_end:
          type: string
          format: date
          nullable: true
          description: Date after which this device becomes inactive.
        additional_material_url:
          type: string
          nullable: true
          description: Additional material about the device. This should be publicly
            available.
          maxLength: 254
        owner:
          type: string
          format: uuid
          description: Owner who orders and is responsible for the maintenance of
            the device.
        responsible_entity:
          type: string
          format: uuid
          nullable: true
          description: Organization or project that this device is assigned to.
        color:
          type: string
          format: uuid
          nullable: true
          description: Color of the device from Helsinki Design Manual.
        target:
          type: string
          format: uuid
          nullable: true
          description: Target subject, which this device relates to.
        mount_plan:
          type: string
          format: uuid
          nullable: true
          description: Mount that this device is mounted on.
        parent:
          type: string
          format: uuid
          nullable: true
          title: Parent Furniture Signpost Plan
          description: Furniture Signpost inside which this device is located.
        plan:
          type: string
          format: uuid
          nullable: true
          description: Plan which this Device Plan is a part of.
      required:
      - device_type
      - location
      - owner
    FurnitureSignpostReal:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        location:
          type: string
          format: EWKT
          example: SRID=3879;POINT Z (25496751.5 6673129.5 1.5)
        files:
          type: array
          items:
            $ref: '#/components/schemas/FurnitureSignpostRealFile'
          readOnly: true
        device_type:
          type: string
          format: uuid
        operations:
          type: array
          items:
            $ref: '#/components/schemas/FurnitureSignpostRealOperation'
          readOnly: true
        target_name:
          type: string
          readOnly: true
        device_type_description:
          type: string
          readOnly: true
        plan_decision_id:
          type: string
          description: Year and verdict section separated with a dash
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        lifecycle:
          enum:
          - 3
          - 4
          - 5
          - 6
          type: integer
          description: |-
            Lifecycle of the device, which describes the activity status of the device.

            * `3` - Active
            * `4` - Temporarily active
            * `5` - Temporarily inactive
            * `6` - Inactive
        installation_date:
          type: string
          format: date
          nullable: true
          description: Date on which this device was installed on.
        installation_status:
          enum:
          - IN_USE
          - COVERED
          - FALLEN
          - MISSING
          - OTHER
          - ''
          - null
          type: string
          nullable: true
          description: |-
            Describes this devices installation status.

            * `IN_USE` - In use
            * `COVERED` - Covered
            * `FALLEN` - Fallen
            * `MISSING` - Missing
            * `OTHER` - Other
        condition:
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - null
          type: integer
          nullable: true
          description: |-
            Describes the condition of this device.

            * `1` - Very bad
            * `2` - Bad
            * `3` - Average
            * `4` - Good
            * `5` - Very good
        source_id:
          type: string
          nullable: true
          description: ID of the device in the source where this device was imported
            from.
          maxLength: 64
        source_name:
          type: string
          nullable: true
          description: Name of the source for where this device was imported from.
          maxLength: 254
        location_name_fi:
          type: string
          nullable: true
          title: Finnish location name
          description: Verbose name for the furniture signposts location in Finnish,
            e.g. street, park or island.
          maxLength: 254
        location_name_sw:
          type: string
          nullable: true
          title: Swedish location name
          description: Verbose name for the furniture signposts location in Swedish,
            e.g. street, park or island.
          maxLength: 254
        location_name_en:
          type: string
          nullable: true
          title: English location name
          description: Verbose name for the furniture signposts location in English,
            e.g. street, park or island.
          maxLength: 254
        direction:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: The direction a person is facing when looking perpendicular
            to the sign. The value is in degrees from 0 to 359, where 0 is north,
            90 is east, etc.
        location_additional_info:
          type: string
          nullable: true
          title: Additional location info
          description: Additional information about the install location.
          maxLength: 254
        size:
          type: string
          nullable: true
          description: Size of the signpost. Enter only if device has a non-standard
            size.
          maxLength: 254
        height:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          nullable: true
          description: The height of the sign from the ground, measured from the bottom
            in centimeters.
        order:
          type: integer
          maximum: 32767
          minimum: -32768
          description: The order of the sign in relation to the signs at the same
            point. Order from top to bottom, from left to right starting at 1.
        arrow_direction:
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - null
          type: integer
          nullable: true
          description: |-
            Direction of the arrow on this device in relation to the sign.

            * `1` - Up
            * `2` - Down
            * `3` - Left
            * `4` - Right
            * `5` - Top right
            * `6` - Bottom right
            * `7` - Top left
            * `8` - Bottom left
        pictogram:
          type: string
          nullable: true
          description: Description of the pictogram on the sign.
          maxLength: 254
        value:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
          title: Furniture signpost value
          description: Numeric value on the sign.
        text_content_fi:
          type: string
          nullable: true
          title: Finnish text content
          description: Content of the sign in Finnish.
        text_content_sw:
          type: string
          nullable: true
          title: Swedish text content
          description: Content of the sign in Swedish.
        text_content_en:
          type: string
          nullable: true
          title: English text content
          description: Content of the sign in English.
        content_responsible_entity:
          type: string
          nullable: true
          title: Content's responsible entity
          description: Entity responsible for the device's content.
          maxLength: 254
        validity_period_start:
          type: string
          format: date
          nullable: true
          description: Date on which this device becomes active.
        validity_period_end:
          type: string
          format: date
          nullable: true
          description: Date after which this device becomes inactive.
        additional_material_url:
          type: string
          nullable: true
          description: Additional material about the device. This should be publicly
            available.
          maxLength: 254
        created_by:
          type: string
          format: uuid
          readOnly: true
          nullable: true
        updated_by:
          type: string
          format: uuid
          readOnly: true
          nullable: true
        owner:
          type: string
          format: uuid
          description: Owner who orders and is responsible for the maintenance of
            the device.
        responsible_entity:
          type: string
          format: uuid
          nullable: true
          description: Organization or project that this device is assigned to.
        color:
          type: string
          format: uuid
          nullable: true
          description: Color of the device from Helsinki Design Manual.
        target:
          type: string
          format: uuid
          nullable: true
          description: Target subject, which this device relates to.
        furniture_signpost_plan:
          type: string
          format: uuid
          nullable: true
          description: The plan for this device.
        parent:
          type: string
          format: uuid
          nullable: true
          title: Parent Furniture Signpost Real
          description: Furniture Signpost inside which this device is located.
        mount_real:
          type: string
          format: uuid
          nullable: true
          description: Mount that this device is mounted on.
      required:
      - created_at
      - created_by
      - device_type
      - device_type_description
      - files
      - id
      - location
      - operations
      - owner
      - plan_decision_id
      - target_name
      - updated_at
      - updated_by
    FurnitureSignpostRealFile:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        file:
          type: string
          format: uri
        furniture_signpost_real:
          type: string
          format: uuid
      required:
      - file
      - furniture_signpost_real
      - id
    FurnitureSignpostRealFileCreateResponse:
      type: object
      properties:
        files:
          type: array
          items:
            $ref: '#/components/schemas/FurnitureSignpostRealFile'
      required:
      - files
    FurnitureSignpostRealFileRequest:
      type: object
      properties:
        file:
          type: string
          format: binary
        furniture_signpost_real:
          type: string
          format: uuid
      required:
      - file
      - furniture_signpost_real
    FurnitureSignpostRealOperation:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        operation_type:
          type: string
          readOnly: true
        operation_type_id:
          type: integer
        operation_date:
          type: string
          format: date
      required:
      - id
      - operation_date
      - operation_type
      - operation_type_id
    FurnitureSignpostRealOperationRequest:
      type: object
      properties:
        operation_type_id:
          type: integer
        operation_date:
          type: string
          format: date
      required:
      - operation_date
      - operation_type_id
    FurnitureSignpostRealRequest:
      type: object
      properties:
        location:
          type: string
          format: EWKT
          example: SRID=3879;POINT Z (25496751.5 6673129.5 1.5)
          minLength: 1
        device_type:
          type: string
          format: uuid
        lifecycle:
          enum:
          - 3
          - 4
          - 5
          - 6
          type: integer
          description: |-
            Lifecycle of the device, which describes the activity status of the device.

            * `3` - Active
            * `4` - Temporarily active
            * `5` - Temporarily inactive
            * `6` - Inactive
        installation_date:
          type: string
          format: date
          nullable: true
          description: Date on which this device was installed on.
        installation_status:
          enum:
          - IN_USE
          - COVERED
          - FALLEN
          - MISSING
          - OTHER
          - ''
          - null
          type: string
          nullable: true
          description: |-
            Describes this devices installation status.

            * `IN_USE` - In use
            * `COVERED` - Covered
            * `FALLEN` - Fallen
            * `MISSING` - Missing
            * `OTHER` - Other
        condition:
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - null
          type: integer
          nullable: true
          description: |-
            Describes the condition of this device.

            * `1` - Very bad
            * `2` - Bad
            * `3` - Average
            * `4` - Good
            * `5` - Very good
        source_id:
          type: string
          nullable: true
          description: ID of the device in the source where this device was imported
            from.
          maxLength: 64
        source_name:
          type: string
          nullable: true
          description: Name of the source for where this device was imported from.
          maxLength: 254
        location_name_fi:
          type: string
          nullable: true
          title: Finnish location name
          description: Verbose name for the furniture signposts location in Finnish,
            e.g. street, park or island.
          maxLength: 254
        location_name_sw:
          type: string
          nullable: true
          title: Swedish location name
          description: Verbose name for the furniture signposts location in Swedish,
            e.g. street, park or island.
          maxLength: 254
        location_name_en:
          type: string
          nullable: true
          title: English location name
          description: Verbose name for the furniture signposts location in English,
            e.g. street, park or island.
          maxLength: 254
        direction:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: The direction a person is facing when looking perpendicular
            to the sign. The value is in degrees from 0 to 359, where 0 is north,
            90 is east, etc.
        location_additional_info:
          type: string
          nullable: true
          title: Additional location info
          description: Additional information about the install location.
          maxLength: 254
        size:
          type: string
          nullable: true
          description: Size of the signpost. Enter only if device has a non-standard
            size.
          maxLength: 254
        height:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          nullable: true
          description: The height of the sign from the ground, measured from the bottom
            in centimeters.
        order:
          type: integer
          maximum: 32767
          minimum: -32768
          description: The order of the sign in relation to the signs at the same
            point. Order from top to bottom, from left to right starting at 1.
        arrow_direction:
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - null
          type: integer
          nullable: true
          description: |-
            Direction of the arrow on this device in relation to the sign.

            * `1` - Up
            * `2` - Down
            * `3` - Left
            * `4` - Right
            * `5` - Top right
            * `6` - Bottom right
            * `7` - Top left
            * `8` - Bottom left
        pictogram:
          type: string
          nullable: true
          description: Description of the pictogram on the sign.
          maxLength: 254
        value:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
          title: Furniture signpost value
          description: Numeric value on the sign.
        text_content_fi:
          type: string
          nullable: true
          title: Finnish text content
          description: Content of the sign in Finnish.
        text_content_sw:
          type: string
          nullable: true
          title: Swedish text content
          description: Content of the sign in Swedish.
        text_content_en:
          type: string
          nullable: true
          title: English text content
          description: Content of the sign in English.
        content_responsible_entity:
          type: string
          nullable: true
          title: Content's responsible entity
          description: Entity responsible for the device's content.
          maxLength: 254
        validity_period_start:
          type: string
          format: date
          nullable: true
          description: Date on which this device becomes active.
        validity_period_end:
          type: string
          format: date
          nullable: true
          description: Date after which this device becomes inactive.
        additional_material_url:
          type: string
          nullable: true
          description: Additional material about the device. This should be publicly
            available.
          maxLength: 254
        owner:
          type: string
          format: uuid
          description: Owner who orders and is responsible for the maintenance of
            the device.
        responsible_entity:
          type: string
          format: uuid
          nullable: true
          description: Organization or project that this device is assigned to.
        color:
          type: string
          format: uuid
          nullable: true
          description: Color of the device from Helsinki Design Manual.
        target:
          type: string
          format: uuid
          nullable: true
          description: Target subject, which this device relates to.
        furniture_signpost_plan:
          type: string
          format: uuid
          nullable: true
          description: The plan for this device.
        parent:
          type: string
          format: uuid
          nullable: true
          title: Parent Furniture Signpost Real
          description: Furniture Signpost inside which this device is located.
        mount_real:
          type: string
          format: uuid
          nullable: true
          description: Mount that this device is mounted on.
      required:
      - device_type
      - location
      - owner
    IconsType:
      type: object
      description: |-
        Serializer that is used to generate OpenAPI documentation for
        TrafficControlDeviceType model's icons attribute.
      properties:
        svg:
          type: string
          readOnly: true
          description: URL to SVG icon
        png_32:
          type: string
          readOnly: true
          description: URL to png 32 icon
        png_64:
          type: string
          readOnly: true
          description: URL to png 64 icon
        png_128:
          type: string
          readOnly: true
          description: URL png 128 icon
        png_256:
          type: string
          readOnly: true
          description: URL png 256 icon
      required:
      - png_128
      - png_256
      - png_32
      - png_64
      - svg
    MountPlanFile:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        file:
          type: string
          format: uri
        mount_plan:
          type: string
          format: uuid
      required:
      - file
      - id
      - mount_plan
    MountPlanFileCreateResponse:
      type: object
      properties:
        files:
          type: array
          items:
            $ref: '#/components/schemas/MountPlanFile'
      required:
      - files
    MountPlanInput:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        replaces:
          type: string
          format: uuid
          nullable: true
          description: ID to the device plan that this device is replacing
        location:
          type: string
          format: EWKT
          example: SRID=3879;MULTIPOLYGON Z (((25497733.5 6672927.5 0, 25497946.5
            6673032.5 0, 25498653.5 6673034.5 0, 25498987.5 6672708.5 0, 25498314.5
            6672170.5 0, 25497651.5 6672629.5 0, 25497646.5 6672775.5 0, 25497733.5
            6672927.5 0)))
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        lifecycle:
          enum:
          - 3
          - 4
          - 5
          - 6
          type: integer
          description: |-
            Lifecycle of the device, which describes the activity status of the device.

            * `3` - Active
            * `4` - Temporarily active
            * `5` - Temporarily inactive
            * `6` - Inactive
        source_id:
          type: string
          nullable: true
          description: ID of the device in the source where this device was imported
            from.
          maxLength: 64
        source_name:
          type: string
          nullable: true
          description: Name of the source for where this device was imported from.
          maxLength: 254
        height:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          nullable: true
          description: The height of the mount from the ground, measured from the
            top in centimeters.
        base:
          type: string
          maxLength: 128
        material:
          type: string
          nullable: true
          description: Describes the material that the mount is made of.
          maxLength: 254
        validity_period_start:
          type: string
          format: date
          nullable: true
          description: Date on which this mount becomes active.
        validity_period_end:
          type: string
          format: date
          nullable: true
          description: Date after which this mount becomes inactive.
        txt:
          type: string
          nullable: true
          description: Text written on the mount.
          maxLength: 254
        electric_accountable:
          type: string
          nullable: true
          description: The entity responsible for the mount (if electric).
          maxLength: 254
        is_foldable:
          type: boolean
          nullable: true
        cross_bar_length:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          nullable: true
          description: Length of the cross bar for this mount in centimeters.
        road_name:
          type: string
          nullable: true
          description: Name of the road this mount is installed at.
          maxLength: 254
        location_specifier:
          enum:
          - 1
          - 2
          - 3
          - 4
          - 6
          - null
          type: integer
          nullable: true
          description: |-
            Specifies where the mount is in relation to the road.

            * `1` - Right side
            * `2` - Left side
            * `3` - Above
            * `4` - Middle
            * `6` - Outside
        created_by:
          type: string
          format: uuid
          readOnly: true
          nullable: true
        updated_by:
          type: string
          format: uuid
          readOnly: true
          nullable: true
        owner:
          type: string
          format: uuid
          description: Owner who orders and is responsible for the maintenance of
            the device.
        responsible_entity:
          type: string
          format: uuid
          nullable: true
          description: Organization or project that this device is assigned to.
        mount_type:
          type: string
          format: uuid
          nullable: true
        portal_type:
          type: string
          format: uuid
          nullable: true
          description: Id number of the portal type in the portal_type table.
        plan:
          type: string
          format: uuid
          nullable: true
          description: Plan which this mount plan is a part of.
      required:
      - created_at
      - created_by
      - id
      - location
      - owner
      - updated_at
      - updated_by
    MountPlanInputRequest:
      type: object
      properties:
        replaces:
          type: string
          format: uuid
          nullable: true
          description: ID to the device plan that this device is replacing
        location:
          type: string
          format: EWKT
          example: SRID=3879;MULTIPOLYGON Z (((25497733.5 6672927.5 0, 25497946.5
            6673032.5 0, 25498653.5 6673034.5 0, 25498987.5 6672708.5 0, 25498314.5
            6672170.5 0, 25497651.5 6672629.5 0, 25497646.5 6672775.5 0, 25497733.5
            6672927.5 0)))
          minLength: 1
        lifecycle:
          enum:
          - 3
          - 4
          - 5
          - 6
          type: integer
          description: |-
            Lifecycle of the device, which describes the activity status of the device.

            * `3` - Active
            * `4` - Temporarily active
            * `5` - Temporarily inactive
            * `6` - Inactive
        source_id:
          type: string
          nullable: true
          description: ID of the device in the source where this device was imported
            from.
          maxLength: 64
        source_name:
          type: string
          nullable: true
          description: Name of the source for where this device was imported from.
          maxLength: 254
        height:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          nullable: true
          description: The height of the mount from the ground, measured from the
            top in centimeters.
        base:
          type: string
          maxLength: 128
        material:
          type: string
          nullable: true
          description: Describes the material that the mount is made of.
          maxLength: 254
        validity_period_start:
          type: string
          format: date
          nullable: true
          description: Date on which this mount becomes active.
        validity_period_end:
          type: string
          format: date
          nullable: true
          description: Date after which this mount becomes inactive.
        txt:
          type: string
          nullable: true
          description: Text written on the mount.
          maxLength: 254
        electric_accountable:
          type: string
          nullable: true
          description: The entity responsible for the mount (if electric).
          maxLength: 254
        is_foldable:
          type: boolean
          nullable: true
        cross_bar_length:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          nullable: true
          description: Length of the cross bar for this mount in centimeters.
        road_name:
          type: string
          nullable: true
          description: Name of the road this mount is installed at.
          maxLength: 254
        location_specifier:
          enum:
          - 1
          - 2
          - 3
          - 4
          - 6
          - null
          type: integer
          nullable: true
          description: |-
            Specifies where the mount is in relation to the road.

            * `1` - Right side
            * `2` - Left side
            * `3` - Above
            * `4` - Middle
            * `6` - Outside
        owner:
          type: string
          format: uuid
          description: Owner who orders and is responsible for the maintenance of
            the device.
        responsible_entity:
          type: string
          format: uuid
          nullable: true
          description: Organization or project that this device is assigned to.
        mount_type:
          type: string
          format: uuid
          nullable: true
        portal_type:
          type: string
          format: uuid
          nullable: true
          description: Id number of the portal type in the portal_type table.
        plan:
          type: string
          format: uuid
          nullable: true
          description: Plan which this mount plan is a part of.
      required:
      - location
      - owner
    MountPlanOutput:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        replaces:
          type: string
          format: uuid
          nullable: true
          description: ID of the device plan that this device plan has replaced
          readOnly: true
        replaced_by:
          type: string
          format: uuid
          nullable: true
          description: ID of the device plan that has replaced this device plan
          readOnly: true
        is_replaced:
          type: boolean
          description: Whether this device plan has been replaced by another device
            plan
          readOnly: true
        location:
          type: string
          format: EWKT
          example: SRID=3879;MULTIPOLYGON Z (((25497733.5 6672927.5 0, 25497946.5
            6673032.5 0, 25498653.5 6673034.5 0, 25498987.5 6672708.5 0, 25498314.5
            6672170.5 0, 25497651.5 6672629.5 0, 25497646.5 6672775.5 0, 25497733.5
            6672927.5 0)))
        files:
          type: array
          items:
            $ref: '#/components/schemas/MountPlanFile'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        lifecycle:
          enum:
          - 3
          - 4
          - 5
          - 6
          type: integer
          description: |-
            Lifecycle of the device, which describes the activity status of the device.

            * `3` - Active
            * `4` - Temporarily active
            * `5` - Temporarily inactive
            * `6` - Inactive
        source_id:
          type: string
          nullable: true
          description: ID of the device in the source where this device was imported
            from.
          maxLength: 64
        source_name:
          type: string
          nullable: true
          description: Name of the source for where this device was imported from.
          maxLength: 254
        height:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          nullable: true
          description: The height of the mount from the ground, measured from the
            top in centimeters.
        base:
          type: string
          maxLength: 128
        material:
          type: string
          nullable: true
          description: Describes the material that the mount is made of.
          maxLength: 254
        validity_period_start:
          type: string
          format: date
          nullable: true
          description: Date on which this mount becomes active.
        validity_period_end:
          type: string
          format: date
          nullable: true
          description: Date after which this mount becomes inactive.
        txt:
          type: string
          nullable: true
          description: Text written on the mount.
          maxLength: 254
        electric_accountable:
          type: string
          nullable: true
          description: The entity responsible for the mount (if electric).
          maxLength: 254
        is_foldable:
          type: boolean
          nullable: true
        cross_bar_length:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          nullable: true
          description: Length of the cross bar for this mount in centimeters.
        road_name:
          type: string
          nullable: true
          description: Name of the road this mount is installed at.
          maxLength: 254
        location_specifier:
          enum:
          - 1
          - 2
          - 3
          - 4
          - 6
          - null
          type: integer
          nullable: true
          description: |-
            Specifies where the mount is in relation to the road.

            * `1` - Right side
            * `2` - Left side
            * `3` - Above
            * `4` - Middle
            * `6` - Outside
        created_by:
          type: string
          format: uuid
          readOnly: true
          nullable: true
        updated_by:
          type: string
          format: uuid
          readOnly: true
          nullable: true
        owner:
          type: string
          format: uuid
          description: Owner who orders and is responsible for the maintenance of
            the device.
        responsible_entity:
          type: string
          format: uuid
          nullable: true
          description: Organization or project that this device is assigned to.
        mount_type:
          type: string
          format: uuid
          nullable: true
        portal_type:
          type: string
          format: uuid
          nullable: true
          description: Id number of the portal type in the portal_type table.
        plan:
          type: string
          format: uuid
          nullable: true
          description: Plan which this mount plan is a part of.
      required:
      - created_at
      - created_by
      - files
      - id
      - is_replaced
      - location
      - owner
      - replaced_by
      - replaces
      - updated_at
      - updated_by
    MountReal:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        location:
          type: string
          format: EWKT
          example: SRID=3879;MULTIPOLYGON Z (((25497733.5 6672927.5 0, 25497946.5
            6673032.5 0, 25498653.5 6673034.5 0, 25498987.5 6672708.5 0, 25498314.5
            6672170.5 0, 25497651.5 6672629.5 0, 25497646.5 6672775.5 0, 25497733.5
            6672927.5 0)))
        ordered_traffic_signs:
          type: array
          items:
            type: string
            format: uuid
          readOnly: true
        files:
          type: array
          items:
            $ref: '#/components/schemas/MountRealFile'
          readOnly: true
        operations:
          type: array
          items:
            $ref: '#/components/schemas/MountRealOperation'
          readOnly: true
        plan_decision_id:
          type: string
          description: Year and verdict section separated with a dash
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        lifecycle:
          enum:
          - 3
          - 4
          - 5
          - 6
          type: integer
          description: |-
            Lifecycle of the device, which describes the activity status of the device.

            * `3` - Active
            * `4` - Temporarily active
            * `5` - Temporarily inactive
            * `6` - Inactive
        installation_date:
          type: string
          format: date
          nullable: true
          description: Date on which this device was installed on.
        installation_status:
          enum:
          - IN_USE
          - COVERED
          - FALLEN
          - MISSING
          - OTHER
          - ''
          - null
          type: string
          nullable: true
          description: |-
            Describes this devices installation status.

            * `IN_USE` - In use
            * `COVERED` - Covered
            * `FALLEN` - Fallen
            * `MISSING` - Missing
            * `OTHER` - Other
        condition:
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - null
          type: integer
          nullable: true
          description: |-
            Describes the condition of this device.

            * `1` - Very bad
            * `2` - Bad
            * `3` - Average
            * `4` - Good
            * `5` - Very good
        source_id:
          type: string
          nullable: true
          description: ID of the device in the source where this device was imported
            from.
          maxLength: 64
        source_name:
          type: string
          nullable: true
          description: Name of the source for where this device was imported from.
          maxLength: 254
        height:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          nullable: true
          description: The height of the mount from the ground, measured from the
            top in centimeters.
        base:
          type: string
          maxLength: 128
        material:
          type: string
          nullable: true
          description: Describes the material that the mount is made of.
          maxLength: 254
        validity_period_start:
          type: string
          format: date
          nullable: true
          description: Date on which this mount becomes active.
        validity_period_end:
          type: string
          format: date
          nullable: true
          description: Date after which this mount becomes inactive.
        txt:
          type: string
          nullable: true
          description: Text written on the mount.
          maxLength: 254
        electric_accountable:
          type: string
          nullable: true
          description: The entity responsible for the mount (if electric).
          maxLength: 254
        is_foldable:
          type: boolean
          nullable: true
        cross_bar_length:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          nullable: true
          description: Length of the cross bar for this mount in centimeters.
        road_name:
          type: string
          nullable: true
          description: Name of the road this mount is installed at.
          maxLength: 254
        location_specifier:
          enum:
          - 1
          - 2
          - 3
          - 4
          - 6
          - null
          type: integer
          nullable: true
          description: |-
            Specifies where the mount is in relation to the road.

            * `1` - Right side
            * `2` - Left side
            * `3` - Above
            * `4` - Middle
            * `6` - Outside
        inspected_at:
          type: string
          format: date-time
          nullable: true
          description: Date and time on which this mount was last inspected at.
        diameter:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          nullable: true
          description: Diameter of the mount in centimeters.
        scanned_at:
          type: string
          format: date-time
          nullable: true
          description: Date and time on which this mount was last scanned at.
        attachment_url:
          type: string
          format: uri
          nullable: true
          description: URL to a file attachment related to this mount.
          maxLength: 500
        created_by:
          type: string
          format: uuid
          readOnly: true
          nullable: true
        updated_by:
          type: string
          format: uuid
          readOnly: true
          nullable: true
        owner:
          type: string
          format: uuid
          description: Owner who orders and is responsible for the maintenance of
            the device.
        responsible_entity:
          type: string
          format: uuid
          nullable: true
          description: Organization or project that this device is assigned to.
        mount_type:
          type: string
          format: uuid
          nullable: true
        portal_type:
          type: string
          format: uuid
          nullable: true
          description: Id number of the portal type in the portal_type table.
        mount_plan:
          type: string
          format: uuid
          nullable: true
          description: The plan for this mount.
      required:
      - created_at
      - created_by
      - files
      - id
      - location
      - operations
      - ordered_traffic_signs
      - owner
      - plan_decision_id
      - updated_at
      - updated_by
    MountRealFile:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        file:
          type: string
          format: uri
        mount_real:
          type: string
          format: uuid
      required:
      - file
      - id
      - mount_real
    MountRealFileCreateResponse:
      type: object
      properties:
        files:
          type: array
          items:
            $ref: '#/components/schemas/MountRealFile'
      required:
      - files
    MountRealFileRequest:
      type: object
      properties:
        file:
          type: string
          format: binary
        mount_real:
          type: string
          format: uuid
      required:
      - file
      - mount_real
    MountRealOperation:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        operation_type:
          type: string
          readOnly: true
        operation_type_id:
          type: integer
        operation_date:
          type: string
          format: date
      required:
      - id
      - operation_date
      - operation_type
      - operation_type_id
    MountRealOperationRequest:
      type: object
      properties:
        operation_type_id:
          type: integer
        operation_date:
          type: string
          format: date
      required:
      - operation_date
      - operation_type_id
    MountRealRequest:
      type: object
      properties:
        location:
          type: string
          format: EWKT
          example: SRID=3879;MULTIPOLYGON Z (((25497733.5 6672927.5 0, 25497946.5
            6673032.5 0, 25498653.5 6673034.5 0, 25498987.5 6672708.5 0, 25498314.5
            6672170.5 0, 25497651.5 6672629.5 0, 25497646.5 6672775.5 0, 25497733.5
            6672927.5 0)))
          minLength: 1
        lifecycle:
          enum:
          - 3
          - 4
          - 5
          - 6
          type: integer
          description: |-
            Lifecycle of the device, which describes the activity status of the device.

            * `3` - Active
            * `4` - Temporarily active
            * `5` - Temporarily inactive
            * `6` - Inactive
        installation_date:
          type: string
          format: date
          nullable: true
          description: Date on which this device was installed on.
        installation_status:
          enum:
          - IN_USE
          - COVERED
          - FALLEN
          - MISSING
          - OTHER
          - ''
          - null
          type: string
          nullable: true
          description: |-
            Describes this devices installation status.

            * `IN_USE` - In use
            * `COVERED` - Covered
            * `FALLEN` - Fallen
            * `MISSING` - Missing
            * `OTHER` - Other
        condition:
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - null
          type: integer
          nullable: true
          description: |-
            Describes the condition of this device.

            * `1` - Very bad
            * `2` - Bad
            * `3` - Average
            * `4` - Good
            * `5` - Very good
        source_id:
          type: string
          nullable: true
          description: ID of the device in the source where this device was imported
            from.
          maxLength: 64
        source_name:
          type: string
          nullable: true
          description: Name of the source for where this device was imported from.
          maxLength: 254
        height:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          nullable: true
          description: The height of the mount from the ground, measured from the
            top in centimeters.
        base:
          type: string
          maxLength: 128
        material:
          type: string
          nullable: true
          description: Describes the material that the mount is made of.
          maxLength: 254
        validity_period_start:
          type: string
          format: date
          nullable: true
          description: Date on which this mount becomes active.
        validity_period_end:
          type: string
          format: date
          nullable: true
          description: Date after which this mount becomes inactive.
        txt:
          type: string
          nullable: true
          description: Text written on the mount.
          maxLength: 254
        electric_accountable:
          type: string
          nullable: true
          description: The entity responsible for the mount (if electric).
          maxLength: 254
        is_foldable:
          type: boolean
          nullable: true
        cross_bar_length:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          nullable: true
          description: Length of the cross bar for this mount in centimeters.
        road_name:
          type: string
          nullable: true
          description: Name of the road this mount is installed at.
          maxLength: 254
        location_specifier:
          enum:
          - 1
          - 2
          - 3
          - 4
          - 6
          - null
          type: integer
          nullable: true
          description: |-
            Specifies where the mount is in relation to the road.

            * `1` - Right side
            * `2` - Left side
            * `3` - Above
            * `4` - Middle
            * `6` - Outside
        inspected_at:
          type: string
          format: date-time
          nullable: true
          description: Date and time on which this mount was last inspected at.
        diameter:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          nullable: true
          description: Diameter of the mount in centimeters.
        scanned_at:
          type: string
          format: date-time
          nullable: true
          description: Date and time on which this mount was last scanned at.
        attachment_url:
          type: string
          format: uri
          nullable: true
          description: URL to a file attachment related to this mount.
          maxLength: 500
        owner:
          type: string
          format: uuid
          description: Owner who orders and is responsible for the maintenance of
            the device.
        responsible_entity:
          type: string
          format: uuid
          nullable: true
          description: Organization or project that this device is assigned to.
        mount_type:
          type: string
          format: uuid
          nullable: true
        portal_type:
          type: string
          format: uuid
          nullable: true
          description: Id number of the portal type in the portal_type table.
        mount_plan:
          type: string
          format: uuid
          nullable: true
          description: The plan for this mount.
      required:
      - location
      - owner
    MountType:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        code:
          type: string
          maxLength: 128
        description:
          type: string
          maxLength: 256
        description_fi:
          type: string
          title: Description (fi)
          maxLength: 256
        digiroad_code:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        digiroad_description:
          type: string
          maxLength: 256
      required:
      - code
      - description
      - id
    MountTypeRequest:
      type: object
      properties:
        code:
          type: string
          minLength: 1
          maxLength: 128
        description:
          type: string
          minLength: 1
          maxLength: 256
        description_fi:
          type: string
          title: Description (fi)
          maxLength: 256
        digiroad_code:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        digiroad_description:
          type: string
          maxLength: 256
      required:
      - code
      - description
    MultiFileUploadSchemaRequest:
      type: object
      description: |-
        Serializer that is used to generate OpenAPI documentation for multi file
        upload endpoints.
      properties:
        file:
          type: string
          format: binary
          description: File to be uploaded. Form field name does not matter. Multiple
            files can be uploaded as long as the form field names are unique.
    OperationType:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          description: Name of the operation.
          maxLength: 200
        traffic_sign:
          type: boolean
        additional_sign:
          type: boolean
        road_marking:
          type: boolean
        barrier:
          type: boolean
        signpost:
          type: boolean
        traffic_light:
          type: boolean
        furniture_signpost:
          type: boolean
        mount:
          type: boolean
      required:
      - id
      - name
    OperationTypeRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          description: Name of the operation.
          maxLength: 200
        traffic_sign:
          type: boolean
        additional_sign:
          type: boolean
        road_marking:
          type: boolean
        barrier:
          type: boolean
        signpost:
          type: boolean
        traffic_light:
          type: boolean
        furniture_signpost:
          type: boolean
        mount:
          type: boolean
      required:
      - name
    OperationalArea:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        location:
          type: object
          properties:
            type:
              type: string
              enum:
              - MultiPolygon
            coordinates:
              type: array
              items:
                type: array
                items:
                  type: array
                  items:
                    type: array
                    items:
                      type: number
                      format: float
                    example:
                    - 12.9721
                    - 77.5933
                    minItems: 2
                    maxItems: 3
                  example:
                  - - 22.4707
                    - 70.0577
                  - - 12.9721
                    - 77.5933
                  minItems: 4
                example:
                - - - 0.0
                    - 0.0
                  - - 0.0
                    - 50.0
                  - - 50.0
                    - 50.0
                  - - 50.0
                    - 0.0
                  - - 0.0
                    - 0.0
        source_id:
          type: string
          nullable: true
          description: ID of the device in the source where this device was imported
            from.
          maxLength: 64
        source_name:
          type: string
          nullable: true
          description: Name of the source for where this device was imported from.
          maxLength: 254
        name:
          type: string
          maxLength: 256
        name_short:
          type: string
          maxLength: 256
        area_type:
          type: string
          maxLength: 256
        contractor:
          type: string
          maxLength: 256
        start_date:
          type: string
          format: date
          nullable: true
        end_date:
          type: string
          format: date
          nullable: true
        updated_date:
          type: string
          format: date
          nullable: true
        task:
          type: string
          maxLength: 256
        status:
          type: string
          maxLength: 256
      required:
      - id
      - location
      - name
    OperationalAreaRequest:
      type: object
      properties:
        location:
          type: object
          properties:
            type:
              type: string
              enum:
              - MultiPolygon
            coordinates:
              type: array
              items:
                type: array
                items:
                  type: array
                  items:
                    type: array
                    items:
                      type: number
                      format: float
                    example:
                    - 12.9721
                    - 77.5933
                    minItems: 2
                    maxItems: 3
                  example:
                  - - 22.4707
                    - 70.0577
                  - - 12.9721
                    - 77.5933
                  minItems: 4
                example:
                - - - 0.0
                    - 0.0
                  - - 0.0
                    - 50.0
                  - - 50.0
                    - 50.0
                  - - 50.0
                    - 0.0
                  - - 0.0
                    - 0.0
        source_id:
          type: string
          nullable: true
          description: ID of the device in the source where this device was imported
            from.
          maxLength: 64
        source_name:
          type: string
          nullable: true
          description: Name of the source for where this device was imported from.
          maxLength: 254
        name:
          type: string
          minLength: 1
          maxLength: 256
        name_short:
          type: string
          maxLength: 256
        area_type:
          type: string
          maxLength: 256
        contractor:
          type: string
          maxLength: 256
        start_date:
          type: string
          format: date
          nullable: true
        end_date:
          type: string
          format: date
          nullable: true
        updated_date:
          type: string
          format: date
          nullable: true
        task:
          type: string
          maxLength: 256
        status:
          type: string
          maxLength: 256
      required:
      - location
      - name
    Owner:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name_fi:
          type: string
          title: Name (fi)
          maxLength: 254
        name_en:
          type: string
          title: Name (en)
          maxLength: 254
      required:
      - id
      - name_en
      - name_fi
    OwnerRequest:
      type: object
      properties:
        name_fi:
          type: string
          minLength: 1
          title: Name (fi)
          maxLength: 254
        name_en:
          type: string
          minLength: 1
          title: Name (en)
          maxLength: 254
      required:
      - name_en
      - name_fi
    PaginatedAdditionalSignPlanOutputList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/AdditionalSignPlanOutput'
    PaginatedAdditionalSignRealList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/AdditionalSignReal'
    PaginatedAdditionalSignRealOperationList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/AdditionalSignRealOperation'
    PaginatedBarrierPlanOutputList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/BarrierPlanOutput'
    PaginatedBarrierRealList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/BarrierReal'
    PaginatedBarrierRealOperationList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/BarrierRealOperation'
    PaginatedCityFurnitureColorList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/CityFurnitureColor'
    PaginatedCityFurnitureDeviceTypeList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/CityFurnitureDeviceType'
    PaginatedCityFurnitureTargetList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/CityFurnitureTarget'
    PaginatedFurnitureSignpostPlanList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/FurnitureSignpostPlan'
    PaginatedFurnitureSignpostRealList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/FurnitureSignpostReal'
    PaginatedFurnitureSignpostRealOperationList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/FurnitureSignpostRealOperation'
    PaginatedMountPlanOutputList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/MountPlanOutput'
    PaginatedMountRealList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/MountReal'
    PaginatedMountRealOperationList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/MountRealOperation'
    PaginatedMountTypeList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/MountType'
    PaginatedOperationTypeList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/OperationType'
    PaginatedOperationalAreaList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/OperationalArea'
    PaginatedOwnerList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Owner'
    PaginatedPlanList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Plan'
    PaginatedPortalTypeList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/PortalType'
    PaginatedResponsibleEntityList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ResponsibleEntity'
    PaginatedRoadMarkingPlanOutputList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/RoadMarkingPlanOutput'
    PaginatedRoadMarkingRealList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/RoadMarkingReal'
    PaginatedRoadMarkingRealOperationList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/RoadMarkingRealOperation'
    PaginatedSignpostPlanOutputList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/SignpostPlanOutput'
    PaginatedSignpostRealList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/SignpostReal'
    PaginatedSignpostRealOperationList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/SignpostRealOperation'
    PaginatedTrafficControlDeviceTypeList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/TrafficControlDeviceType'
    PaginatedTrafficLightPlanOutputList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/TrafficLightPlanOutput'
    PaginatedTrafficLightRealList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/TrafficLightReal'
    PaginatedTrafficLightRealOperationList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/TrafficLightRealOperation'
    PaginatedTrafficSignPlanOutputList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/TrafficSignPlanOutput'
    PaginatedTrafficSignRealList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/TrafficSignReal'
    PaginatedTrafficSignRealOperationList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/TrafficSignRealOperation'
    PatchedAdditionalSignPlanInputRequest:
      type: object
      properties:
        replaces:
          type: string
          format: uuid
          nullable: true
          description: ID to the device plan that this device is replacing
        location:
          type: string
          format: EWKT
          example: SRID=3879;POINT Z (25496751.5 6673129.5 1.5)
          minLength: 1
        device_type:
          type: string
          format: uuid
          nullable: true
        lifecycle:
          enum:
          - 3
          - 4
          - 5
          - 6
          type: integer
          description: |-
            Lifecycle of the device, which describes the activity status of the device.

            * `3` - Active
            * `4` - Temporarily active
            * `5` - Temporarily inactive
            * `6` - Inactive
        source_id:
          type: string
          nullable: true
          description: ID of the device in the source where this device was imported
            from.
          maxLength: 64
        source_name:
          type: string
          nullable: true
          description: Name of the source for where this device was imported from.
          maxLength: 254
        order:
          type: integer
          maximum: 32767
          minimum: -32768
          description: The order of the sign in relation to the signs at the same
            point. Order from top to bottom, from left to right starting at 1.
        content_s:
          type: object
          additionalProperties: {}
          nullable: true
          title: Content
          description: Additional sign content as JSON document
        missing_content:
          type: boolean
          description: Content (content_s) is not available although the device type
            content schema requires it.
        additional_information:
          type: string
          description: Additional information related to this device.
        height:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: The height of the sign from the ground, measured from the bottom
            in centimeters.
        size:
          enum:
          - S
          - M
          - L
          - ''
          - null
          type: string
          description: |-
            * `S` - Small
            * `M` - Medium
            * `L` - Large
          nullable: true
        direction:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: The direction a person is facing when looking perpendicular
            to the sign. The value is in degrees from 0 to 359, where 0 is north,
            90 is east, etc.
        reflection_class:
          enum:
          - R1
          - R2
          - R3
          - ''
          - null
          type: string
          description: |-
            * `R1` - r1
            * `R2` - r2
            * `R3` - r3
          nullable: true
          title: Reflection
        surface_class:
          enum:
          - CONVEX
          - FLAT
          - ''
          - null
          type: string
          description: |-
            * `CONVEX` - Convex
            * `FLAT` - Flat
          nullable: true
          title: Surface
        color:
          enum:
          - 1
          - 2
          - null
          type: integer
          description: |-
            * `1` - Blue
            * `2` - Yellow
          nullable: true
        road_name:
          type: string
          nullable: true
          description: Name of the road this sign is installed at.
          maxLength: 254
        lane_number:
          enum:
          - '11'
          - '21'
          - '31'
          - X2
          - X3
          - X4
          - X5
          - X6
          - X7
          - X8
          - X9
          - ''
          - null
          type: string
          nullable: true
          description: |-
            Describes which lane of the road this sign affects.

            * `11` - Main lane
            * `21` - Main lane
            * `31` - Lane allowing traffic to both directions
            * `X2` - First left additional lane
            * `X3` - First right additional lane
            * `X4` - Second left additional lane
            * `X5` - Second right additional lane
            * `X6` - Third left additional lane
            * `X7` - Third right additional lane
            * `X8` - Fourth left additional lane
            * `X9` - Fourth right additional lane
        lane_type:
          enum:
          - '1'
          - '2'
          - '3'
          - '4'
          - '5'
          - '6'
          - '7'
          - '8'
          - '9'
          - '10'
          - '11'
          - '20'
          - '21'
          - '22'
          - ''
          - null
          type: string
          nullable: true
          description: |-
            The type of lane which this sign affects.

            * `1` - Main lane
            * `2` - Fast lane
            * `3` - Turn right lane
            * `4` - Turn left lane
            * `5` - Auxiliary straight lane
            * `6` - Merge lane
            * `7` - Exit lane
            * `8` - Weaving lane
            * `9` - Public transport lane / taxi lane
            * `10` - Heavy vehicle lane
            * `11` - Reversible lane
            * `20` - Pedestrian and bike lane
            * `21` - Pedestrian lane
            * `22` - Bike lane
        location_specifier:
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - null
          type: integer
          nullable: true
          description: |-
            Specifies where the sign is in relation to the road.

            * `1` - Right side
            * `2` - Left side
            * `3` - Above
            * `4` - Middle
            * `5` - Vertical
            * `6` - Outside
        validity_period_start:
          type: string
          format: date
          nullable: true
          description: Date on which this sign becomes active.
        validity_period_end:
          type: string
          format: date
          nullable: true
          description: Date after which this sign becomes inactive.
        seasonal_validity_period_start:
          type: string
          format: date
          nullable: true
          description: Date on which this sign becomes seasonally active.
        seasonal_validity_period_end:
          type: string
          format: date
          nullable: true
          description: Date after which this sign becomes seasonally inactive.
        owner:
          type: string
          format: uuid
          description: Owner who orders and is responsible for the maintenance of
            the device.
        responsible_entity:
          type: string
          format: uuid
          nullable: true
          description: Organization or project that this device is assigned to.
        parent:
          type: string
          format: uuid
          nullable: true
          title: Parent Traffic Sign Plan
          description: The traffic sign to which this additional sign is associated.
        mount_plan:
          type: string
          format: uuid
          nullable: true
          description: Mount that this sign is mounted on.
        plan:
          type: string
          format: uuid
          nullable: true
          description: Plan which this Additional Sign Plan is a part of.
    PatchedAdditionalSignRealOperationRequest:
      type: object
      properties:
        operation_type_id:
          type: integer
        operation_date:
          type: string
          format: date
    PatchedAdditionalSignRealRequest:
      type: object
      properties:
        location:
          type: string
          format: EWKT
          example: SRID=3879;POINT Z (25496751.5 6673129.5 1.5)
          minLength: 1
        device_type:
          type: string
          format: uuid
          nullable: true
        lifecycle:
          enum:
          - 3
          - 4
          - 5
          - 6
          type: integer
          description: |-
            Lifecycle of the device, which describes the activity status of the device.

            * `3` - Active
            * `4` - Temporarily active
            * `5` - Temporarily inactive
            * `6` - Inactive
        installation_date:
          type: string
          format: date
          nullable: true
          description: Date on which this device was installed on.
        installation_status:
          enum:
          - IN_USE
          - COVERED
          - FALLEN
          - MISSING
          - OTHER
          - ''
          - null
          type: string
          nullable: true
          description: |-
            Describes this devices installation status.

            * `IN_USE` - In use
            * `COVERED` - Covered
            * `FALLEN` - Fallen
            * `MISSING` - Missing
            * `OTHER` - Other
        condition:
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - null
          type: integer
          nullable: true
          description: |-
            Describes the condition of this device.

            * `1` - Very bad
            * `2` - Bad
            * `3` - Average
            * `4` - Good
            * `5` - Very good
        source_id:
          type: string
          nullable: true
          description: ID of the device in the source where this device was imported
            from.
          maxLength: 64
        source_name:
          type: string
          nullable: true
          description: Name of the source for where this device was imported from.
          maxLength: 254
        order:
          type: integer
          maximum: 32767
          minimum: -32768
          description: The order of the sign in relation to the signs at the same
            point. Order from top to bottom, from left to right starting at 1.
        content_s:
          type: object
          additionalProperties: {}
          nullable: true
          title: Content
          description: Additional sign content as JSON document
        missing_content:
          type: boolean
          description: Content (content_s) is not available although the device type
            content schema requires it.
        additional_information:
          type: string
          description: Additional information related to this device.
        height:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: The height of the sign from the ground, measured from the bottom
            in centimeters.
        size:
          enum:
          - S
          - M
          - L
          - ''
          - null
          type: string
          description: |-
            * `S` - Small
            * `M` - Medium
            * `L` - Large
          nullable: true
        direction:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: The direction a person is facing when looking perpendicular
            to the sign. The value is in degrees from 0 to 359, where 0 is north,
            90 is east, etc.
        reflection_class:
          enum:
          - R1
          - R2
          - R3
          - ''
          - null
          type: string
          description: |-
            * `R1` - r1
            * `R2` - r2
            * `R3` - r3
          nullable: true
          title: Reflection
        surface_class:
          enum:
          - CONVEX
          - FLAT
          - ''
          - null
          type: string
          description: |-
            * `CONVEX` - Convex
            * `FLAT` - Flat
          nullable: true
          title: Surface
        color:
          enum:
          - 1
          - 2
          - null
          type: integer
          description: |-
            * `1` - Blue
            * `2` - Yellow
          nullable: true
        road_name:
          type: string
          nullable: true
          description: Name of the road this sign is installed at.
          maxLength: 254
        lane_number:
          enum:
          - '11'
          - '21'
          - '31'
          - X2
          - X3
          - X4
          - X5
          - X6
          - X7
          - X8
          - X9
          - ''
          - null
          type: string
          nullable: true
          description: |-
            Describes which lane of the road this sign affects.

            * `11` - Main lane
            * `21` - Main lane
            * `31` - Lane allowing traffic to both directions
            * `X2` - First left additional lane
            * `X3` - First right additional lane
            * `X4` - Second left additional lane
            * `X5` - Second right additional lane
            * `X6` - Third left additional lane
            * `X7` - Third right additional lane
            * `X8` - Fourth left additional lane
            * `X9` - Fourth right additional lane
        lane_type:
          enum:
          - '1'
          - '2'
          - '3'
          - '4'
          - '5'
          - '6'
          - '7'
          - '8'
          - '9'
          - '10'
          - '11'
          - '20'
          - '21'
          - '22'
          - ''
          - null
          type: string
          nullable: true
          description: |-
            The type of lane which this sign affects.

            * `1` - Main lane
            * `2` - Fast lane
            * `3` - Turn right lane
            * `4` - Turn left lane
            * `5` - Auxiliary straight lane
            * `6` - Merge lane
            * `7` - Exit lane
            * `8` - Weaving lane
            * `9` - Public transport lane / taxi lane
            * `10` - Heavy vehicle lane
            * `11` - Reversible lane
            * `20` - Pedestrian and bike lane
            * `21` - Pedestrian lane
            * `22` - Bike lane
        location_specifier:
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - null
          type: integer
          nullable: true
          description: |-
            Specifies where the sign is in relation to the road.

            * `1` - Right side
            * `2` - Left side
            * `3` - Above
            * `4` - Middle
            * `5` - Vertical
            * `6` - Outside
        validity_period_start:
          type: string
          format: date
          nullable: true
          description: Date on which this sign becomes active.
        validity_period_end:
          type: string
          format: date
          nullable: true
          description: Date after which this sign becomes inactive.
        seasonal_validity_period_start:
          type: string
          format: date
          nullable: true
          description: Date on which this sign becomes seasonally active.
        seasonal_validity_period_end:
          type: string
          format: date
          nullable: true
          description: Date after which this sign becomes seasonally inactive.
        installation_id:
          type: string
          nullable: true
          description: The id number of the installation record.
          maxLength: 254
        installation_details:
          type: string
          nullable: true
          description: Additional details about the installation.
          maxLength: 254
        installed_by:
          type: string
          nullable: true
          description: Name of the organization who installed this sign.
          maxLength: 254
        manufacturer:
          type: string
          nullable: true
          description: Name of the organization that manufactured this sign.
          maxLength: 254
        rfid:
          type: string
          nullable: true
          description: RFID tag of the sign (if any).
          maxLength: 254
        permit_decision_id:
          type: string
          nullable: true
          description: The id number of the installation permit.
          maxLength: 254
        operation:
          type: string
          nullable: true
          description: Maintenance operations done to the sign, e.g. washing, straightening
            or painting.
          maxLength: 64
        scanned_at:
          type: string
          format: date-time
          nullable: true
          description: Date and time on which this sign was last scanned at.
        attachment_url:
          type: string
          format: uri
          nullable: true
          description: URL to a file attachment related to this sign.
          maxLength: 500
        owner:
          type: string
          format: uuid
          description: Owner who orders and is responsible for the maintenance of
            the device.
        responsible_entity:
          type: string
          format: uuid
          nullable: true
          description: Organization or project that this device is assigned to.
        parent:
          type: string
          format: uuid
          nullable: true
          title: Parent Traffic Sign Real
          description: The traffic sign to which this additional sign is associated.
        additional_sign_plan:
          type: string
          format: uuid
          nullable: true
          description: The plan for this Additional Sign.
        mount_real:
          type: string
          format: uuid
          nullable: true
          description: Mount that this sign is mounted on.
        coverage_area:
          type: string
          format: uuid
          nullable: true
          description: Coverage area that this sign belongs to.
    PatchedBarrierPlanInputRequest:
      type: object
      properties:
        replaces:
          type: string
          format: uuid
          nullable: true
          description: ID to the device plan that this device is replacing
        location:
          type: string
          format: EWKT
          example: SRID=3879;MULTIPOLYGON Z (((25497733.5 6672927.5 0, 25497946.5
            6673032.5 0, 25498653.5 6673034.5 0, 25498987.5 6672708.5 0, 25498314.5
            6672170.5 0, 25497651.5 6672629.5 0, 25497646.5 6672775.5 0, 25497733.5
            6672927.5 0)))
          minLength: 1
        device_type:
          type: string
          format: uuid
          nullable: true
        lifecycle:
          enum:
          - 3
          - 4
          - 5
          - 6
          type: integer
          description: |-
            Lifecycle of the device, which describes the activity status of the device.

            * `3` - Active
            * `4` - Temporarily active
            * `5` - Temporarily inactive
            * `6` - Inactive
        source_id:
          type: string
          nullable: true
          description: ID of the device in the source where this device was imported
            from.
          maxLength: 64
        source_name:
          type: string
          nullable: true
          description: Name of the source for where this device was imported from.
          maxLength: 254
        road_name:
          type: string
          minLength: 1
          description: Name of the road this barrier is installed at.
          maxLength: 254
        lane_number:
          enum:
          - '11'
          - '21'
          - '31'
          - X2
          - X3
          - X4
          - X5
          - X6
          - X7
          - X8
          - X9
          - ''
          - null
          type: string
          nullable: true
          description: |-
            Describes which lane of the road this barrier affects.

            * `11` - Main lane
            * `21` - Main lane
            * `31` - Lane allowing traffic to both directions
            * `X2` - First left additional lane
            * `X3` - First right additional lane
            * `X4` - Second left additional lane
            * `X5` - Second right additional lane
            * `X6` - Third left additional lane
            * `X7` - Third right additional lane
            * `X8` - Fourth left additional lane
            * `X9` - Fourth right additional lane
        lane_type:
          enum:
          - '1'
          - '2'
          - '3'
          - '4'
          - '5'
          - '6'
          - '7'
          - '8'
          - '9'
          - '10'
          - '11'
          - '20'
          - '21'
          - '22'
          - ''
          - null
          type: string
          nullable: true
          description: |-
            The type of lane which this barrier affects.

            * `1` - Main lane
            * `2` - Fast lane
            * `3` - Turn right lane
            * `4` - Turn left lane
            * `5` - Auxiliary straight lane
            * `6` - Merge lane
            * `7` - Exit lane
            * `8` - Weaving lane
            * `9` - Public transport lane / taxi lane
            * `10` - Heavy vehicle lane
            * `11` - Reversible lane
            * `20` - Pedestrian and bike lane
            * `21` - Pedestrian lane
            * `22` - Bike lane
        location_specifier:
          enum:
          - 1
          - 2
          - 3
          - null
          type: integer
          nullable: true
          description: |-
            Specifies where the barrier is in relation to the road.

            * `1` - Middle of road or lane
            * `2` - Right of road or lane
            * `3` - Left of road or lane
        connection_type:
          enum:
          - 1
          - 2
          type: integer
          description: |-
            Describes if the barrier is open or closed.

            * `1` - Closed
            * `2` - Open out
        material:
          type: string
          nullable: true
          description: Describes the material that the barrier is made of.
          maxLength: 254
        is_electric:
          type: boolean
        reflective:
          enum:
          - 'YES'
          - 'NO'
          - RED_YELLOW
          - ''
          - null
          type: string
          description: |-
            * `YES` - Yes
            * `NO` - No
            * `RED_YELLOW` - Red-yellow
          nullable: true
        validity_period_start:
          type: string
          format: date
          nullable: true
          description: Date on which this barrier becomes active.
        validity_period_end:
          type: string
          format: date
          nullable: true
          description: Date after which this barrier becomes inactive.
        length:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: Length of the barrier in centimeters.
        count:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        txt:
          type: string
          nullable: true
          description: Text written on the barrier.
        owner:
          type: string
          format: uuid
          description: Owner who orders and is responsible for the maintenance of
            the device.
        responsible_entity:
          type: string
          format: uuid
          nullable: true
          description: Organization or project that this device is assigned to.
        plan:
          type: string
          format: uuid
          nullable: true
          description: Plan which this Barrier Plan is a part of.
    PatchedBarrierRealOperationRequest:
      type: object
      properties:
        operation_type_id:
          type: integer
        operation_date:
          type: string
          format: date
    PatchedBarrierRealRequest:
      type: object
      properties:
        location:
          type: string
          format: EWKT
          example: SRID=3879;MULTIPOLYGON Z (((25497733.5 6672927.5 0, 25497946.5
            6673032.5 0, 25498653.5 6673034.5 0, 25498987.5 6672708.5 0, 25498314.5
            6672170.5 0, 25497651.5 6672629.5 0, 25497646.5 6672775.5 0, 25497733.5
            6672927.5 0)))
          minLength: 1
        device_type:
          type: string
          format: uuid
          nullable: true
        lifecycle:
          enum:
          - 3
          - 4
          - 5
          - 6
          type: integer
          description: |-
            Lifecycle of the device, which describes the activity status of the device.

            * `3` - Active
            * `4` - Temporarily active
            * `5` - Temporarily inactive
            * `6` - Inactive
        installation_date:
          type: string
          format: date
          nullable: true
          description: Date on which this device was installed on.
        installation_status:
          enum:
          - IN_USE
          - COVERED
          - FALLEN
          - MISSING
          - OTHER
          - ''
          - null
          type: string
          nullable: true
          description: |-
            Describes this devices installation status.

            * `IN_USE` - In use
            * `COVERED` - Covered
            * `FALLEN` - Fallen
            * `MISSING` - Missing
            * `OTHER` - Other
        condition:
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - null
          type: integer
          nullable: true
          description: |-
            Describes the condition of this device.

            * `1` - Very bad
            * `2` - Bad
            * `3` - Average
            * `4` - Good
            * `5` - Very good
        source_id:
          type: string
          nullable: true
          description: ID of the device in the source where this device was imported
            from.
          maxLength: 64
        source_name:
          type: string
          nullable: true
          description: Name of the source for where this device was imported from.
          maxLength: 254
        road_name:
          type: string
          minLength: 1
          description: Name of the road this barrier is installed at.
          maxLength: 254
        lane_number:
          enum:
          - '11'
          - '21'
          - '31'
          - X2
          - X3
          - X4
          - X5
          - X6
          - X7
          - X8
          - X9
          - ''
          - null
          type: string
          nullable: true
          description: |-
            Describes which lane of the road this barrier affects.

            * `11` - Main lane
            * `21` - Main lane
            * `31` - Lane allowing traffic to both directions
            * `X2` - First left additional lane
            * `X3` - First right additional lane
            * `X4` - Second left additional lane
            * `X5` - Second right additional lane
            * `X6` - Third left additional lane
            * `X7` - Third right additional lane
            * `X8` - Fourth left additional lane
            * `X9` - Fourth right additional lane
        lane_type:
          enum:
          - '1'
          - '2'
          - '3'
          - '4'
          - '5'
          - '6'
          - '7'
          - '8'
          - '9'
          - '10'
          - '11'
          - '20'
          - '21'
          - '22'
          - ''
          - null
          type: string
          nullable: true
          description: |-
            The type of lane which this barrier affects.

            * `1` - Main lane
            * `2` - Fast lane
            * `3` - Turn right lane
            * `4` - Turn left lane
            * `5` - Auxiliary straight lane
            * `6` - Merge lane
            * `7` - Exit lane
            * `8` - Weaving lane
            * `9` - Public transport lane / taxi lane
            * `10` - Heavy vehicle lane
            * `11` - Reversible lane
            * `20` - Pedestrian and bike lane
            * `21` - Pedestrian lane
            * `22` - Bike lane
        location_specifier:
          enum:
          - 1
          - 2
          - 3
          - null
          type: integer
          nullable: true
          description: |-
            Specifies where the barrier is in relation to the road.

            * `1` - Middle of road or lane
            * `2` - Right of road or lane
            * `3` - Left of road or lane
        connection_type:
          enum:
          - 1
          - 2
          type: integer
          description: |-
            Describes if the barrier is open or closed.

            * `1` - Closed
            * `2` - Open out
        material:
          type: string
          nullable: true
          description: Describes the material that the barrier is made of.
          maxLength: 254
        is_electric:
          type: boolean
        reflective:
          enum:
          - 'YES'
          - 'NO'
          - RED_YELLOW
          - ''
          - null
          type: string
          description: |-
            * `YES` - Yes
            * `NO` - No
            * `RED_YELLOW` - Red-yellow
          nullable: true
        validity_period_start:
          type: string
          format: date
          nullable: true
          description: Date on which this barrier becomes active.
        validity_period_end:
          type: string
          format: date
          nullable: true
          description: Date after which this barrier becomes inactive.
        length:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: Length of the barrier in centimeters.
        count:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        txt:
          type: string
          nullable: true
          description: Text written on the barrier.
        owner:
          type: string
          format: uuid
          description: Owner who orders and is responsible for the maintenance of
            the device.
        responsible_entity:
          type: string
          format: uuid
          nullable: true
          description: Organization or project that this device is assigned to.
        barrier_plan:
          type: string
          format: uuid
          nullable: true
          description: The plan for this barrier.
    PatchedCityFurnitureColorRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          description: Name of the color in Helsinki Design System or Manual.
          maxLength: 64
        rgb:
          type: string
          minLength: 1
          description: RGB Hex value of the color
          pattern: ^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$
          maxLength: 25
    PatchedCityFurnitureDeviceTypeRequest:
      type: object
      properties:
        code:
          type: string
          minLength: 1
          description: Code of the Device Type in the Helsinki Design Manual.
          maxLength: 32
        class_type:
          enum:
          - 1000
          - 1010
          - 1020
          - 1030
          type: integer
          title: City Furniture Class type
          description: |-
            OGC CityGML City Furniture Class

            * `1000` - Traffic
            * `1010` - Communication
            * `1020` - Security
            * `1030` - Others
        function_type:
          enum:
          - 1000
          - 1010
          - 1020
          - 1030
          - 1040
          - 1050
          - 1060
          - 1070
          - 1080
          - 1090
          - 1100
          - 1110
          - 1120
          - 1130
          - 1140
          - 1150
          - 1160
          - 1170
          - 1180
          - 1190
          - 1200
          - 1210
          - 1220
          - 1230
          - 1240
          - 1250
          - 1260
          - 1270
          - 1280
          - 1290
          - 1300
          - 1310
          - 1320
          - 1330
          - 1340
          - 1350
          - 1360
          - 1370
          - 1380
          - 1390
          - 1400
          - 1410
          - 1420
          - 1430
          - 1440
          - 1450
          - 1470
          - 1480
          - 1490
          - 1500
          - 1510
          - 1520
          - 1530
          - 1540
          type: integer
          title: City Furniture Function or Usage type
          description: |-
            OGC CityGML City Furniture Function or Usage type

            * `1000` - Communication fixture
            * `1010` - Telephone box
            * `1020` - Postbox
            * `1030` - Emergency call fixture
            * `1040` - Fire detector
            * `1050` - Police call post
            * `1060` - Switching unit
            * `1070` - Road sign
            * `1080` - Traffic light
            * `1090` - Free-standing sign
            * `1100` - Free-standing warning sign
            * `1110` - Bus stop
            * `1120` - Milestone
            * `1130` - Rail level crossing
            * `1140` - Gate
            * `1150` - Streetlamp, latern or candelabra
            * `1160` - Column
            * `1170` - Lamp post
            * `1180` - Flagpole
            * `1190` - Street sink box
            * `1200` - Rubbish bin
            * `1210` - Clock
            * `1220` - Directional spot light
            * `1230` - Floodlight mast
            * `1240` - Windmill
            * `1250` - Solar cell
            * `1260` - Water wheel
            * `1270` - Pole
            * `1280` - Radio mast
            * `1290` - Aerial
            * `1300` - Radio telescope
            * `1310` - Chimney
            * `1320` - Marker
            * `1330` - Hydrant
            * `1340` - Upper corridor fire-hydrant
            * `1350` - Lower floor panel fire-hydrant
            * `1360` - Slidegate valve cap
            * `1370` - Entrance shaft
            * `1380` - Converter
            * `1390` - Stair
            * `1400` - Outside staircase
            * `1410` - Escalator
            * `1420` - Ramp
            * `1430` - Patio
            * `1440` - Fence
            * `1450` - Memorial/monument
            * `1470` - Wayside shrine
            * `1480` - Crossroads
            * `1490` - Cross on the summit of a mountain
            * `1500` - Fountain
            * `1510` - Block mark
            * `1520` - Boundary post
            * `1530` - Bench
            * `1540` - Others
        icon:
          type: string
          description: Icon of the actual device
          maxLength: 100
        description_fi:
          type: string
          nullable: true
          title: Finnish Description
          description: Description of the Device Type in Finnish.
          maxLength: 254
        description_sw:
          type: string
          nullable: true
          title: Swedish Description
          description: Description of the Device Type in Swedish.
          maxLength: 254
        description_en:
          type: string
          nullable: true
          title: English Description
          description: Description of the Device Type in English.
          maxLength: 254
        size:
          type: string
          description: Standard size of the Device Type.
          maxLength: 50
        target_model:
          enum:
          - furniture_signpost
          - ''
          - null
          type: string
          nullable: true
          title: Target data model
          description: |-
            City Furniture model that this Device Type is usable for.

            * `furniture_signpost` - Furniture signpost
    PatchedCityFurnitureTargetRequest:
      type: object
      properties:
        source_id:
          type: string
          nullable: true
          description: ID of the device in the source where this device was imported
            from.
          maxLength: 64
        source_name:
          type: string
          nullable: true
          description: Name of the source for where this device was imported from.
          maxLength: 254
        name_fi:
          type: string
          minLength: 1
          title: Finnish name
          description: Name of the target in Finnish.
          maxLength: 254
        name_sw:
          type: string
          nullable: true
          title: Swedish name
          description: Name of the target in Swedish.
          maxLength: 254
        name_en:
          type: string
          nullable: true
          title: English name
          description: Name of the target in English.
          maxLength: 254
        description:
          type: string
          nullable: true
          description: Description of the target.
          maxLength: 254
    PatchedFileUploadSchemaRequest:
      type: object
      description: |-
        Serializer that is used to generate OpenAPI documentation for single file
        upload endpoints.
      properties:
        file:
          type: string
          format: binary
          description: File to be uploaded.
    PatchedFurnitureSignpostPlanRequest:
      type: object
      properties:
        location:
          type: string
          format: EWKT
          example: SRID=3879;POINT Z (25496751.5 6673129.5 1.5)
          minLength: 1
        device_type:
          type: string
          format: uuid
        lifecycle:
          enum:
          - 3
          - 4
          - 5
          - 6
          type: integer
          description: |-
            Lifecycle of the device, which describes the activity status of the device.

            * `3` - Active
            * `4` - Temporarily active
            * `5` - Temporarily inactive
            * `6` - Inactive
        source_id:
          type: string
          nullable: true
          description: ID of the device in the source where this device was imported
            from.
          maxLength: 64
        source_name:
          type: string
          nullable: true
          description: Name of the source for where this device was imported from.
          maxLength: 254
        location_name_fi:
          type: string
          nullable: true
          title: Finnish location name
          description: Verbose name for the furniture signposts location in Finnish,
            e.g. street, park or island.
          maxLength: 254
        location_name_sw:
          type: string
          nullable: true
          title: Swedish location name
          description: Verbose name for the furniture signposts location in Swedish,
            e.g. street, park or island.
          maxLength: 254
        location_name_en:
          type: string
          nullable: true
          title: English location name
          description: Verbose name for the furniture signposts location in English,
            e.g. street, park or island.
          maxLength: 254
        direction:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: The direction a person is facing when looking perpendicular
            to the sign. The value is in degrees from 0 to 359, where 0 is north,
            90 is east, etc.
        location_additional_info:
          type: string
          nullable: true
          title: Additional location info
          description: Additional information about the install location.
          maxLength: 254
        size:
          type: string
          nullable: true
          description: Size of the signpost. Enter only if device has a non-standard
            size.
          maxLength: 254
        height:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          nullable: true
          description: The height of the sign from the ground, measured from the bottom
            in centimeters.
        order:
          type: integer
          maximum: 32767
          minimum: -32768
          description: The order of the sign in relation to the signs at the same
            point. Order from top to bottom, from left to right starting at 1.
        arrow_direction:
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - null
          type: integer
          nullable: true
          description: |-
            Direction of the arrow on this device in relation to the sign.

            * `1` - Up
            * `2` - Down
            * `3` - Left
            * `4` - Right
            * `5` - Top right
            * `6` - Bottom right
            * `7` - Top left
            * `8` - Bottom left
        pictogram:
          type: string
          nullable: true
          description: Description of the pictogram on the sign.
          maxLength: 254
        value:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
          title: Furniture signpost value
          description: Numeric value on the sign.
        text_content_fi:
          type: string
          nullable: true
          title: Finnish text content
          description: Content of the sign in Finnish.
        text_content_sw:
          type: string
          nullable: true
          title: Swedish text content
          description: Content of the sign in Swedish.
        text_content_en:
          type: string
          nullable: true
          title: English text content
          description: Content of the sign in English.
        content_responsible_entity:
          type: string
          nullable: true
          title: Content's responsible entity
          description: Entity responsible for the device's content.
          maxLength: 254
        validity_period_start:
          type: string
          format: date
          nullable: true
          description: Date on which this device becomes active.
        validity_period_end:
          type: string
          format: date
          nullable: true
          description: Date after which this device becomes inactive.
        additional_material_url:
          type: string
          nullable: true
          description: Additional material about the device. This should be publicly
            available.
          maxLength: 254
        owner:
          type: string
          format: uuid
          description: Owner who orders and is responsible for the maintenance of
            the device.
        responsible_entity:
          type: string
          format: uuid
          nullable: true
          description: Organization or project that this device is assigned to.
        color:
          type: string
          format: uuid
          nullable: true
          description: Color of the device from Helsinki Design Manual.
        target:
          type: string
          format: uuid
          nullable: true
          description: Target subject, which this device relates to.
        mount_plan:
          type: string
          format: uuid
          nullable: true
          description: Mount that this device is mounted on.
        parent:
          type: string
          format: uuid
          nullable: true
          title: Parent Furniture Signpost Plan
          description: Furniture Signpost inside which this device is located.
        plan:
          type: string
          format: uuid
          nullable: true
          description: Plan which this Device Plan is a part of.
    PatchedFurnitureSignpostRealOperationRequest:
      type: object
      properties:
        operation_type_id:
          type: integer
        operation_date:
          type: string
          format: date
    PatchedFurnitureSignpostRealRequest:
      type: object
      properties:
        location:
          type: string
          format: EWKT
          example: SRID=3879;POINT Z (25496751.5 6673129.5 1.5)
          minLength: 1
        device_type:
          type: string
          format: uuid
        lifecycle:
          enum:
          - 3
          - 4
          - 5
          - 6
          type: integer
          description: |-
            Lifecycle of the device, which describes the activity status of the device.

            * `3` - Active
            * `4` - Temporarily active
            * `5` - Temporarily inactive
            * `6` - Inactive
        installation_date:
          type: string
          format: date
          nullable: true
          description: Date on which this device was installed on.
        installation_status:
          enum:
          - IN_USE
          - COVERED
          - FALLEN
          - MISSING
          - OTHER
          - ''
          - null
          type: string
          nullable: true
          description: |-
            Describes this devices installation status.

            * `IN_USE` - In use
            * `COVERED` - Covered
            * `FALLEN` - Fallen
            * `MISSING` - Missing
            * `OTHER` - Other
        condition:
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - null
          type: integer
          nullable: true
          description: |-
            Describes the condition of this device.

            * `1` - Very bad
            * `2` - Bad
            * `3` - Average
            * `4` - Good
            * `5` - Very good
        source_id:
          type: string
          nullable: true
          description: ID of the device in the source where this device was imported
            from.
          maxLength: 64
        source_name:
          type: string
          nullable: true
          description: Name of the source for where this device was imported from.
          maxLength: 254
        location_name_fi:
          type: string
          nullable: true
          title: Finnish location name
          description: Verbose name for the furniture signposts location in Finnish,
            e.g. street, park or island.
          maxLength: 254
        location_name_sw:
          type: string
          nullable: true
          title: Swedish location name
          description: Verbose name for the furniture signposts location in Swedish,
            e.g. street, park or island.
          maxLength: 254
        location_name_en:
          type: string
          nullable: true
          title: English location name
          description: Verbose name for the furniture signposts location in English,
            e.g. street, park or island.
          maxLength: 254
        direction:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: The direction a person is facing when looking perpendicular
            to the sign. The value is in degrees from 0 to 359, where 0 is north,
            90 is east, etc.
        location_additional_info:
          type: string
          nullable: true
          title: Additional location info
          description: Additional information about the install location.
          maxLength: 254
        size:
          type: string
          nullable: true
          description: Size of the signpost. Enter only if device has a non-standard
            size.
          maxLength: 254
        height:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          nullable: true
          description: The height of the sign from the ground, measured from the bottom
            in centimeters.
        order:
          type: integer
          maximum: 32767
          minimum: -32768
          description: The order of the sign in relation to the signs at the same
            point. Order from top to bottom, from left to right starting at 1.
        arrow_direction:
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - null
          type: integer
          nullable: true
          description: |-
            Direction of the arrow on this device in relation to the sign.

            * `1` - Up
            * `2` - Down
            * `3` - Left
            * `4` - Right
            * `5` - Top right
            * `6` - Bottom right
            * `7` - Top left
            * `8` - Bottom left
        pictogram:
          type: string
          nullable: true
          description: Description of the pictogram on the sign.
          maxLength: 254
        value:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
          title: Furniture signpost value
          description: Numeric value on the sign.
        text_content_fi:
          type: string
          nullable: true
          title: Finnish text content
          description: Content of the sign in Finnish.
        text_content_sw:
          type: string
          nullable: true
          title: Swedish text content
          description: Content of the sign in Swedish.
        text_content_en:
          type: string
          nullable: true
          title: English text content
          description: Content of the sign in English.
        content_responsible_entity:
          type: string
          nullable: true
          title: Content's responsible entity
          description: Entity responsible for the device's content.
          maxLength: 254
        validity_period_start:
          type: string
          format: date
          nullable: true
          description: Date on which this device becomes active.
        validity_period_end:
          type: string
          format: date
          nullable: true
          description: Date after which this device becomes inactive.
        additional_material_url:
          type: string
          nullable: true
          description: Additional material about the device. This should be publicly
            available.
          maxLength: 254
        owner:
          type: string
          format: uuid
          description: Owner who orders and is responsible for the maintenance of
            the device.
        responsible_entity:
          type: string
          format: uuid
          nullable: true
          description: Organization or project that this device is assigned to.
        color:
          type: string
          format: uuid
          nullable: true
          description: Color of the device from Helsinki Design Manual.
        target:
          type: string
          format: uuid
          nullable: true
          description: Target subject, which this device relates to.
        furniture_signpost_plan:
          type: string
          format: uuid
          nullable: true
          description: The plan for this device.
        parent:
          type: string
          format: uuid
          nullable: true
          title: Parent Furniture Signpost Real
          description: Furniture Signpost inside which this device is located.
        mount_real:
          type: string
          format: uuid
          nullable: true
          description: Mount that this device is mounted on.
    PatchedMountPlanInputRequest:
      type: object
      properties:
        replaces:
          type: string
          format: uuid
          nullable: true
          description: ID to the device plan that this device is replacing
        location:
          type: string
          format: EWKT
          example: SRID=3879;MULTIPOLYGON Z (((25497733.5 6672927.5 0, 25497946.5
            6673032.5 0, 25498653.5 6673034.5 0, 25498987.5 6672708.5 0, 25498314.5
            6672170.5 0, 25497651.5 6672629.5 0, 25497646.5 6672775.5 0, 25497733.5
            6672927.5 0)))
          minLength: 1
        lifecycle:
          enum:
          - 3
          - 4
          - 5
          - 6
          type: integer
          description: |-
            Lifecycle of the device, which describes the activity status of the device.

            * `3` - Active
            * `4` - Temporarily active
            * `5` - Temporarily inactive
            * `6` - Inactive
        source_id:
          type: string
          nullable: true
          description: ID of the device in the source where this device was imported
            from.
          maxLength: 64
        source_name:
          type: string
          nullable: true
          description: Name of the source for where this device was imported from.
          maxLength: 254
        height:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          nullable: true
          description: The height of the mount from the ground, measured from the
            top in centimeters.
        base:
          type: string
          maxLength: 128
        material:
          type: string
          nullable: true
          description: Describes the material that the mount is made of.
          maxLength: 254
        validity_period_start:
          type: string
          format: date
          nullable: true
          description: Date on which this mount becomes active.
        validity_period_end:
          type: string
          format: date
          nullable: true
          description: Date after which this mount becomes inactive.
        txt:
          type: string
          nullable: true
          description: Text written on the mount.
          maxLength: 254
        electric_accountable:
          type: string
          nullable: true
          description: The entity responsible for the mount (if electric).
          maxLength: 254
        is_foldable:
          type: boolean
          nullable: true
        cross_bar_length:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          nullable: true
          description: Length of the cross bar for this mount in centimeters.
        road_name:
          type: string
          nullable: true
          description: Name of the road this mount is installed at.
          maxLength: 254
        location_specifier:
          enum:
          - 1
          - 2
          - 3
          - 4
          - 6
          - null
          type: integer
          nullable: true
          description: |-
            Specifies where the mount is in relation to the road.

            * `1` - Right side
            * `2` - Left side
            * `3` - Above
            * `4` - Middle
            * `6` - Outside
        owner:
          type: string
          format: uuid
          description: Owner who orders and is responsible for the maintenance of
            the device.
        responsible_entity:
          type: string
          format: uuid
          nullable: true
          description: Organization or project that this device is assigned to.
        mount_type:
          type: string
          format: uuid
          nullable: true
        portal_type:
          type: string
          format: uuid
          nullable: true
          description: Id number of the portal type in the portal_type table.
        plan:
          type: string
          format: uuid
          nullable: true
          description: Plan which this mount plan is a part of.
    PatchedMountRealOperationRequest:
      type: object
      properties:
        operation_type_id:
          type: integer
        operation_date:
          type: string
          format: date
    PatchedMountRealRequest:
      type: object
      properties:
        location:
          type: string
          format: EWKT
          example: SRID=3879;MULTIPOLYGON Z (((25497733.5 6672927.5 0, 25497946.5
            6673032.5 0, 25498653.5 6673034.5 0, 25498987.5 6672708.5 0, 25498314.5
            6672170.5 0, 25497651.5 6672629.5 0, 25497646.5 6672775.5 0, 25497733.5
            6672927.5 0)))
          minLength: 1
        lifecycle:
          enum:
          - 3
          - 4
          - 5
          - 6
          type: integer
          description: |-
            Lifecycle of the device, which describes the activity status of the device.

            * `3` - Active
            * `4` - Temporarily active
            * `5` - Temporarily inactive
            * `6` - Inactive
        installation_date:
          type: string
          format: date
          nullable: true
          description: Date on which this device was installed on.
        installation_status:
          enum:
          - IN_USE
          - COVERED
          - FALLEN
          - MISSING
          - OTHER
          - ''
          - null
          type: string
          nullable: true
          description: |-
            Describes this devices installation status.

            * `IN_USE` - In use
            * `COVERED` - Covered
            * `FALLEN` - Fallen
            * `MISSING` - Missing
            * `OTHER` - Other
        condition:
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - null
          type: integer
          nullable: true
          description: |-
            Describes the condition of this device.

            * `1` - Very bad
            * `2` - Bad
            * `3` - Average
            * `4` - Good
            * `5` - Very good
        source_id:
          type: string
          nullable: true
          description: ID of the device in the source where this device was imported
            from.
          maxLength: 64
        source_name:
          type: string
          nullable: true
          description: Name of the source for where this device was imported from.
          maxLength: 254
        height:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          nullable: true
          description: The height of the mount from the ground, measured from the
            top in centimeters.
        base:
          type: string
          maxLength: 128
        material:
          type: string
          nullable: true
          description: Describes the material that the mount is made of.
          maxLength: 254
        validity_period_start:
          type: string
          format: date
          nullable: true
          description: Date on which this mount becomes active.
        validity_period_end:
          type: string
          format: date
          nullable: true
          description: Date after which this mount becomes inactive.
        txt:
          type: string
          nullable: true
          description: Text written on the mount.
          maxLength: 254
        electric_accountable:
          type: string
          nullable: true
          description: The entity responsible for the mount (if electric).
          maxLength: 254
        is_foldable:
          type: boolean
          nullable: true
        cross_bar_length:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          nullable: true
          description: Length of the cross bar for this mount in centimeters.
        road_name:
          type: string
          nullable: true
          description: Name of the road this mount is installed at.
          maxLength: 254
        location_specifier:
          enum:
          - 1
          - 2
          - 3
          - 4
          - 6
          - null
          type: integer
          nullable: true
          description: |-
            Specifies where the mount is in relation to the road.

            * `1` - Right side
            * `2` - Left side
            * `3` - Above
            * `4` - Middle
            * `6` - Outside
        inspected_at:
          type: string
          format: date-time
          nullable: true
          description: Date and time on which this mount was last inspected at.
        diameter:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          nullable: true
          description: Diameter of the mount in centimeters.
        scanned_at:
          type: string
          format: date-time
          nullable: true
          description: Date and time on which this mount was last scanned at.
        attachment_url:
          type: string
          format: uri
          nullable: true
          description: URL to a file attachment related to this mount.
          maxLength: 500
        owner:
          type: string
          format: uuid
          description: Owner who orders and is responsible for the maintenance of
            the device.
        responsible_entity:
          type: string
          format: uuid
          nullable: true
          description: Organization or project that this device is assigned to.
        mount_type:
          type: string
          format: uuid
          nullable: true
        portal_type:
          type: string
          format: uuid
          nullable: true
          description: Id number of the portal type in the portal_type table.
        mount_plan:
          type: string
          format: uuid
          nullable: true
          description: The plan for this mount.
    PatchedMountTypeRequest:
      type: object
      properties:
        code:
          type: string
          minLength: 1
          maxLength: 128
        description:
          type: string
          minLength: 1
          maxLength: 256
        description_fi:
          type: string
          title: Description (fi)
          maxLength: 256
        digiroad_code:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        digiroad_description:
          type: string
          maxLength: 256
    PatchedOperationTypeRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          description: Name of the operation.
          maxLength: 200
        traffic_sign:
          type: boolean
        additional_sign:
          type: boolean
        road_marking:
          type: boolean
        barrier:
          type: boolean
        signpost:
          type: boolean
        traffic_light:
          type: boolean
        furniture_signpost:
          type: boolean
        mount:
          type: boolean
    PatchedOperationalAreaRequest:
      type: object
      properties:
        location:
          type: object
          properties:
            type:
              type: string
              enum:
              - MultiPolygon
            coordinates:
              type: array
              items:
                type: array
                items:
                  type: array
                  items:
                    type: array
                    items:
                      type: number
                      format: float
                    example:
                    - 12.9721
                    - 77.5933
                    minItems: 2
                    maxItems: 3
                  example:
                  - - 22.4707
                    - 70.0577
                  - - 12.9721
                    - 77.5933
                  minItems: 4
                example:
                - - - 0.0
                    - 0.0
                  - - 0.0
                    - 50.0
                  - - 50.0
                    - 50.0
                  - - 50.0
                    - 0.0
                  - - 0.0
                    - 0.0
        source_id:
          type: string
          nullable: true
          description: ID of the device in the source where this device was imported
            from.
          maxLength: 64
        source_name:
          type: string
          nullable: true
          description: Name of the source for where this device was imported from.
          maxLength: 254
        name:
          type: string
          minLength: 1
          maxLength: 256
        name_short:
          type: string
          maxLength: 256
        area_type:
          type: string
          maxLength: 256
        contractor:
          type: string
          maxLength: 256
        start_date:
          type: string
          format: date
          nullable: true
        end_date:
          type: string
          format: date
          nullable: true
        updated_date:
          type: string
          format: date
          nullable: true
        task:
          type: string
          maxLength: 256
        status:
          type: string
          maxLength: 256
    PatchedOwnerRequest:
      type: object
      properties:
        name_fi:
          type: string
          minLength: 1
          title: Name (fi)
          maxLength: 254
        name_en:
          type: string
          minLength: 1
          title: Name (en)
          maxLength: 254
    PatchedPlanRequest:
      type: object
      properties:
        location:
          type: string
          format: EWKT
          example: SRID=3879;MULTIPOLYGON Z (((25497733.5 6672927.5 0, 25497946.5
            6673032.5 0, 25498653.5 6673034.5 0, 25498987.5 6672708.5 0, 25498314.5
            6672170.5 0, 25497651.5 6672629.5 0, 25497646.5 6672775.5 0, 25497733.5
            6672927.5 0)))
          nullable: true
        source_id:
          type: string
          nullable: true
          description: ID of the device in the source where this device was imported
            from.
          maxLength: 64
        source_name:
          type: string
          nullable: true
          description: Name of the source for where this device was imported from.
          maxLength: 254
        name:
          type: string
          minLength: 1
          maxLength: 512
        decision_id:
          type: string
          minLength: 1
          description: Year and verdict section separated with a dash
          maxLength: 16
        diary_number:
          type: string
          nullable: true
          maxLength: 20
        drawing_numbers:
          type: array
          items:
            type: string
            minLength: 1
            pattern: ^[a-zA-Z0-9-_ ]+$
            maxLength: 20
          description: Drawing numbers related to the plan separated with a comma
          maxItems: 100
        derive_location:
          type: boolean
          title: Derive location from devices
          description: Derive the plan location (geometry area) from the locations
            of related devices. Enable this if the plan does not have a predefined
            location.
    PatchedPortalTypeRequest:
      type: object
      properties:
        structure:
          type: string
          minLength: 1
          title: Portal structure
          maxLength: 64
        build_type:
          type: string
          minLength: 1
          title: Portal build type
          maxLength: 64
        model:
          type: string
          minLength: 1
          title: Portal model
          maxLength: 64
    PatchedResponsibleEntityRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 254
        organization_level:
          enum:
          - 10
          - 20
          - 30
          - 50
          type: integer
          description: |-
            Describes the level of organization this is.

            * `10` - division
            * `20` - service
            * `30` - unit
            * `50` - project
        parent:
          type: string
          format: uuid
          nullable: true
          title: Parent Responsible Entity
          description: Organization under which this object belongs to. This objects
            organizational level must be lower than its parents.
    PatchedRoadMarkingPlanInputRequest:
      type: object
      properties:
        replaces:
          type: string
          format: uuid
          nullable: true
          description: ID to the device plan that this device is replacing
        location:
          type: string
          format: EWKT
          example: SRID=3879;MULTIPOLYGON Z (((25497733.5 6672927.5 0, 25497946.5
            6673032.5 0, 25498653.5 6673034.5 0, 25498987.5 6672708.5 0, 25498314.5
            6672170.5 0, 25497651.5 6672629.5 0, 25497646.5 6672775.5 0, 25497733.5
            6672927.5 0)))
          minLength: 1
        device_type:
          type: string
          format: uuid
          nullable: true
        lifecycle:
          enum:
          - 3
          - 4
          - 5
          - 6
          type: integer
          description: |-
            Lifecycle of the device, which describes the activity status of the device.

            * `3` - Active
            * `4` - Temporarily active
            * `5` - Temporarily inactive
            * `6` - Inactive
        source_id:
          type: string
          nullable: true
          description: ID of the device in the source where this device was imported
            from.
          maxLength: 64
        source_name:
          type: string
          nullable: true
          description: Name of the source for where this device was imported from.
          maxLength: 254
        road_name:
          type: string
          nullable: true
          description: Name of the road this road marking is installed at.
          maxLength: 254
        lane_number:
          enum:
          - '11'
          - '21'
          - '31'
          - X2
          - X3
          - X4
          - X5
          - X6
          - X7
          - X8
          - X9
          - ''
          - null
          type: string
          nullable: true
          description: |-
            Describes which lane of the road this road marking affects.

            * `11` - Main lane
            * `21` - Main lane
            * `31` - Lane allowing traffic to both directions
            * `X2` - First left additional lane
            * `X3` - First right additional lane
            * `X4` - Second left additional lane
            * `X5` - Second right additional lane
            * `X6` - Third left additional lane
            * `X7` - Third right additional lane
            * `X8` - Fourth left additional lane
            * `X9` - Fourth right additional lane
        lane_type:
          enum:
          - '1'
          - '2'
          - '3'
          - '4'
          - '5'
          - '6'
          - '7'
          - '8'
          - '9'
          - '10'
          - '11'
          - '20'
          - '21'
          - '22'
          - ''
          - null
          type: string
          nullable: true
          description: |-
            The type of lane which this road marking affects.

            * `1` - Main lane
            * `2` - Fast lane
            * `3` - Turn right lane
            * `4` - Turn left lane
            * `5` - Auxiliary straight lane
            * `6` - Merge lane
            * `7` - Exit lane
            * `8` - Weaving lane
            * `9` - Public transport lane / taxi lane
            * `10` - Heavy vehicle lane
            * `11` - Reversible lane
            * `20` - Pedestrian and bike lane
            * `21` - Pedestrian lane
            * `22` - Bike lane
        location_specifier:
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - null
          type: integer
          nullable: true
          description: |-
            Specifies where the road marking is in relation to the lane.

            * `1` - Both sides of road
            * `2` - Right side of lane
            * `3` - Left side of lane
            * `4` - Both sides of lane
            * `5` - Middle of lane
            * `6` - Left side of lane or road
        line_direction:
          enum:
          - FORWARD
          - BACKWARD
          - ''
          - null
          type: string
          description: |-
            * `FORWARD` - Forward
            * `BACKWARD` - Backward
          nullable: true
        arrow_direction:
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - null
          type: integer
          nullable: true
          description: |-
            Direction of the arrow on the road.

            * `1` - Straight
            * `2` - Right
            * `3` - Right and straight
            * `4` - Left
            * `5` - Left and straight
            * `6` - Lane ends
            * `7` - Right and left
            * `8` - Straight, right and left
        value:
          type: string
          nullable: true
          title: Road Marking value
          description: Numeric value on the marking.
          maxLength: 254
        material:
          type: string
          nullable: true
          description: Describes the material that the device is made of.
          maxLength: 254
        color:
          enum:
          - 1
          - 2
          - null
          type: integer
          description: |-
            * `1` - White
            * `2` - Yellow
          nullable: true
        type_specifier:
          type: string
          nullable: true
          description: Additional device type codes specific to the local public authorities.
          maxLength: 254
        validity_period_start:
          type: string
          format: date
          nullable: true
          description: Date on which this road marking becomes active.
        validity_period_end:
          type: string
          format: date
          nullable: true
          description: Date after which this road marking becomes inactive.
        seasonal_validity_period_start:
          type: string
          format: date
          nullable: true
          description: Date on which this road marking becomes seasonally active.
        seasonal_validity_period_end:
          type: string
          format: date
          nullable: true
          description: Date after which this road marking becomes seasonally inactive.
        symbol:
          type: string
          nullable: true
          description: Symbol on the road marking.
          maxLength: 254
        size:
          type: string
          nullable: true
          description: Size of the road marking.
          maxLength: 254
        length:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: Length of the road marking in centimeters.
        width:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: Width of the road marking in centimeters.
        is_raised:
          type: boolean
          nullable: true
        is_grinded:
          type: boolean
          nullable: true
        additional_info:
          type: string
          nullable: true
        amount:
          type: string
          nullable: true
          maxLength: 254
        owner:
          type: string
          format: uuid
          description: Owner who orders and is responsible for the maintenance of
            the device.
        responsible_entity:
          type: string
          format: uuid
          nullable: true
          description: Organization or project that this device is assigned to.
        traffic_sign_plan:
          type: string
          format: uuid
          nullable: true
          description: Traffic Sign related to this road marking.
        plan:
          type: string
          format: uuid
          nullable: true
          description: Plan which this road marking plan is a part of.
    PatchedRoadMarkingRealOperationRequest:
      type: object
      properties:
        operation_type_id:
          type: integer
        operation_date:
          type: string
          format: date
    PatchedRoadMarkingRealRequest:
      type: object
      properties:
        location:
          type: string
          format: EWKT
          example: SRID=3879;MULTIPOLYGON Z (((25497733.5 6672927.5 0, 25497946.5
            6673032.5 0, 25498653.5 6673034.5 0, 25498987.5 6672708.5 0, 25498314.5
            6672170.5 0, 25497651.5 6672629.5 0, 25497646.5 6672775.5 0, 25497733.5
            6672927.5 0)))
          minLength: 1
        device_type:
          type: string
          format: uuid
          nullable: true
        lifecycle:
          enum:
          - 3
          - 4
          - 5
          - 6
          type: integer
          description: |-
            Lifecycle of the device, which describes the activity status of the device.

            * `3` - Active
            * `4` - Temporarily active
            * `5` - Temporarily inactive
            * `6` - Inactive
        installation_date:
          type: string
          format: date
          nullable: true
          description: Date on which this device was installed on.
        installation_status:
          enum:
          - IN_USE
          - COVERED
          - FALLEN
          - MISSING
          - OTHER
          - ''
          - null
          type: string
          nullable: true
          description: |-
            Describes this devices installation status.

            * `IN_USE` - In use
            * `COVERED` - Covered
            * `FALLEN` - Fallen
            * `MISSING` - Missing
            * `OTHER` - Other
        condition:
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - null
          type: integer
          nullable: true
          description: |-
            Describes the condition of this device.

            * `1` - Very bad
            * `2` - Bad
            * `3` - Average
            * `4` - Good
            * `5` - Very good
        source_id:
          type: string
          nullable: true
          description: ID of the device in the source where this device was imported
            from.
          maxLength: 64
        source_name:
          type: string
          nullable: true
          description: Name of the source for where this device was imported from.
          maxLength: 254
        road_name:
          type: string
          nullable: true
          description: Name of the road this road marking is installed at.
          maxLength: 254
        lane_number:
          enum:
          - '11'
          - '21'
          - '31'
          - X2
          - X3
          - X4
          - X5
          - X6
          - X7
          - X8
          - X9
          - ''
          - null
          type: string
          nullable: true
          description: |-
            Describes which lane of the road this road marking affects.

            * `11` - Main lane
            * `21` - Main lane
            * `31` - Lane allowing traffic to both directions
            * `X2` - First left additional lane
            * `X3` - First right additional lane
            * `X4` - Second left additional lane
            * `X5` - Second right additional lane
            * `X6` - Third left additional lane
            * `X7` - Third right additional lane
            * `X8` - Fourth left additional lane
            * `X9` - Fourth right additional lane
        lane_type:
          enum:
          - '1'
          - '2'
          - '3'
          - '4'
          - '5'
          - '6'
          - '7'
          - '8'
          - '9'
          - '10'
          - '11'
          - '20'
          - '21'
          - '22'
          - ''
          - null
          type: string
          nullable: true
          description: |-
            The type of lane which this road marking affects.

            * `1` - Main lane
            * `2` - Fast lane
            * `3` - Turn right lane
            * `4` - Turn left lane
            * `5` - Auxiliary straight lane
            * `6` - Merge lane
            * `7` - Exit lane
            * `8` - Weaving lane
            * `9` - Public transport lane / taxi lane
            * `10` - Heavy vehicle lane
            * `11` - Reversible lane
            * `20` - Pedestrian and bike lane
            * `21` - Pedestrian lane
            * `22` - Bike lane
        location_specifier:
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - null
          type: integer
          nullable: true
          description: |-
            Specifies where the road marking is in relation to the lane.

            * `1` - Both sides of road
            * `2` - Right side of lane
            * `3` - Left side of lane
            * `4` - Both sides of lane
            * `5` - Middle of lane
            * `6` - Left side of lane or road
        line_direction:
          enum:
          - FORWARD
          - BACKWARD
          - ''
          - null
          type: string
          description: |-
            * `FORWARD` - Forward
            * `BACKWARD` - Backward
          nullable: true
        arrow_direction:
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - null
          type: integer
          nullable: true
          description: |-
            Direction of the arrow on the road.

            * `1` - Straight
            * `2` - Right
            * `3` - Right and straight
            * `4` - Left
            * `5` - Left and straight
            * `6` - Lane ends
            * `7` - Right and left
            * `8` - Straight, right and left
        value:
          type: string
          nullable: true
          title: Road Marking value
          description: Numeric value on the marking.
          maxLength: 254
        material:
          type: string
          nullable: true
          description: Describes the material that the device is made of.
          maxLength: 254
        color:
          enum:
          - 1
          - 2
          - null
          type: integer
          description: |-
            * `1` - White
            * `2` - Yellow
          nullable: true
        type_specifier:
          type: string
          nullable: true
          description: Additional device type codes specific to the local public authorities.
          maxLength: 254
        validity_period_start:
          type: string
          format: date
          nullable: true
          description: Date on which this road marking becomes active.
        validity_period_end:
          type: string
          format: date
          nullable: true
          description: Date after which this road marking becomes inactive.
        seasonal_validity_period_start:
          type: string
          format: date
          nullable: true
          description: Date on which this road marking becomes seasonally active.
        seasonal_validity_period_end:
          type: string
          format: date
          nullable: true
          description: Date after which this road marking becomes seasonally inactive.
        symbol:
          type: string
          nullable: true
          description: Symbol on the road marking.
          maxLength: 254
        size:
          type: string
          nullable: true
          description: Size of the road marking.
          maxLength: 254
        length:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: Length of the road marking in centimeters.
        width:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: Width of the road marking in centimeters.
        is_raised:
          type: boolean
          nullable: true
        is_grinded:
          type: boolean
          nullable: true
        additional_info:
          type: string
          nullable: true
        amount:
          type: string
          nullable: true
          maxLength: 254
        missing_traffic_sign_real_txt:
          type: string
          nullable: true
          description: Free-form text description of the traffic sign the road marking
            is connected to, if the road marking doesn't have a traffic sign real
            id.
          maxLength: 254
        owner:
          type: string
          format: uuid
          description: Owner who orders and is responsible for the maintenance of
            the device.
        responsible_entity:
          type: string
          format: uuid
          nullable: true
          description: Organization or project that this device is assigned to.
        road_marking_plan:
          type: string
          format: uuid
          nullable: true
          description: The plan for this road marking.
        traffic_sign_real:
          type: string
          format: uuid
          nullable: true
          description: Traffic Sign related to this road marking.
    PatchedSignpostPlanInputRequest:
      type: object
      properties:
        replaces:
          type: string
          format: uuid
          nullable: true
          description: ID to the device plan that this device is replacing
        location:
          type: string
          format: EWKT
          example: SRID=3879;POINT Z (25496751.5 6673129.5 1.5)
          minLength: 1
        device_type:
          type: string
          format: uuid
          nullable: true
        lifecycle:
          enum:
          - 3
          - 4
          - 5
          - 6
          type: integer
          description: |-
            Lifecycle of the device, which describes the activity status of the device.

            * `3` - Active
            * `4` - Temporarily active
            * `5` - Temporarily inactive
            * `6` - Inactive
        source_id:
          type: string
          nullable: true
          description: ID of the device in the source where this device was imported
            from.
          maxLength: 64
        source_name:
          type: string
          nullable: true
          description: Name of the source for where this device was imported from.
          maxLength: 254
        road_name:
          type: string
          nullable: true
          description: Name of the road this sign is installed at.
          maxLength: 254
        lane_number:
          enum:
          - '11'
          - '21'
          - '31'
          - X2
          - X3
          - X4
          - X5
          - X6
          - X7
          - X8
          - X9
          - ''
          - null
          type: string
          nullable: true
          description: |-
            Describes which lane of the road this sign affects.

            * `11` - Main lane
            * `21` - Main lane
            * `31` - Lane allowing traffic to both directions
            * `X2` - First left additional lane
            * `X3` - First right additional lane
            * `X4` - Second left additional lane
            * `X5` - Second right additional lane
            * `X6` - Third left additional lane
            * `X7` - Third right additional lane
            * `X8` - Fourth left additional lane
            * `X9` - Fourth right additional lane
        lane_type:
          enum:
          - '1'
          - '2'
          - '3'
          - '4'
          - '5'
          - '6'
          - '7'
          - '8'
          - '9'
          - '10'
          - '11'
          - '20'
          - '21'
          - '22'
          - ''
          - null
          type: string
          nullable: true
          description: |-
            The type of lane which this sign affects.

            * `1` - Main lane
            * `2` - Fast lane
            * `3` - Turn right lane
            * `4` - Turn left lane
            * `5` - Auxiliary straight lane
            * `6` - Merge lane
            * `7` - Exit lane
            * `8` - Weaving lane
            * `9` - Public transport lane / taxi lane
            * `10` - Heavy vehicle lane
            * `11` - Reversible lane
            * `20` - Pedestrian and bike lane
            * `21` - Pedestrian lane
            * `22` - Bike lane
        direction:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: The direction a person is facing when looking perpendicular
            to the sign. The value is in degrees from 0 to 359, where 0 is north,
            90 is east, etc.
        height:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          nullable: true
          description: The height of the sign from the ground, measured from the bottom
            in centimeters.
        value:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
          title: Signpost value
          description: Numeric value on the sign.
        txt:
          type: string
          nullable: true
          title: Signpost txt
          description: Text written on the device.
          maxLength: 254
        size:
          enum:
          - S
          - M
          - L
          - ''
          - null
          type: string
          description: |-
            * `S` - Small
            * `M` - Medium
            * `L` - Large
          nullable: true
        reflection_class:
          enum:
          - R1
          - R2
          - R3
          - ''
          - null
          type: string
          description: |-
            * `R1` - r1
            * `R2` - r2
            * `R3` - r3
          nullable: true
          title: Reflection
        attachment_class:
          type: string
          nullable: true
          description: The attachment class of the sign according to the standard
            SFS-EN 12899-1.The possible values are P1, P2 and P3.
          maxLength: 254
        target_id:
          type: string
          nullable: true
          description: The id number of the target the sign is guiding to (if available).
          maxLength: 254
        target_txt:
          type: string
          nullable: true
          description: Free-form text description of the target the sign is guiding
            to, if the target has no id number.
          maxLength: 254
        electric_maintainer:
          type: string
          nullable: true
          description: Organization in charge of electric maintenance of the device.
          maxLength: 254
        location_specifier:
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - null
          type: integer
          nullable: true
          description: |-
            Specifies where the sign is in relation to the road.

            * `1` - Right side
            * `2` - Left side
            * `3` - Above
            * `4` - Middle
            * `5` - Vertical
            * `6` - Outside
        validity_period_start:
          type: string
          format: date
          nullable: true
          description: Date on which this sign becomes active.
        validity_period_end:
          type: string
          format: date
          nullable: true
          description: Date after which this sign becomes inactive.
        seasonal_validity_period_start:
          type: string
          format: date
          nullable: true
          description: Date on which this sign becomes seasonally active.
        seasonal_validity_period_end:
          type: string
          format: date
          nullable: true
          description: Date after which this sign becomes seasonally inactive.
        owner:
          type: string
          format: uuid
          description: Owner who orders and is responsible for the maintenance of
            the device.
        responsible_entity:
          type: string
          format: uuid
          nullable: true
          description: Organization or project that this device is assigned to.
        mount_plan:
          type: string
          format: uuid
          nullable: true
          description: Mount that this sign is mounted on.
        parent:
          type: string
          format: uuid
          nullable: true
          title: Parent Signpost Plan
          description: Signpost inside which this device is located.
        plan:
          type: string
          format: uuid
          nullable: true
          description: Plan which this signpost plan is a part of.
    PatchedSignpostRealOperationRequest:
      type: object
      properties:
        operation_type_id:
          type: integer
        operation_date:
          type: string
          format: date
    PatchedSignpostRealRequest:
      type: object
      properties:
        location:
          type: string
          format: EWKT
          example: SRID=3879;POINT Z (25496751.5 6673129.5 1.5)
          minLength: 1
        device_type:
          type: string
          format: uuid
          nullable: true
        lifecycle:
          enum:
          - 3
          - 4
          - 5
          - 6
          type: integer
          description: |-
            Lifecycle of the device, which describes the activity status of the device.

            * `3` - Active
            * `4` - Temporarily active
            * `5` - Temporarily inactive
            * `6` - Inactive
        installation_date:
          type: string
          format: date
          nullable: true
          description: Date on which this device was installed on.
        installation_status:
          enum:
          - IN_USE
          - COVERED
          - FALLEN
          - MISSING
          - OTHER
          - ''
          - null
          type: string
          nullable: true
          description: |-
            Describes this devices installation status.

            * `IN_USE` - In use
            * `COVERED` - Covered
            * `FALLEN` - Fallen
            * `MISSING` - Missing
            * `OTHER` - Other
        condition:
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - null
          type: integer
          nullable: true
          description: |-
            Describes the condition of this device.

            * `1` - Very bad
            * `2` - Bad
            * `3` - Average
            * `4` - Good
            * `5` - Very good
        source_id:
          type: string
          nullable: true
          description: ID of the device in the source where this device was imported
            from.
          maxLength: 64
        source_name:
          type: string
          nullable: true
          description: Name of the source for where this device was imported from.
          maxLength: 254
        road_name:
          type: string
          nullable: true
          description: Name of the road this sign is installed at.
          maxLength: 254
        lane_number:
          enum:
          - '11'
          - '21'
          - '31'
          - X2
          - X3
          - X4
          - X5
          - X6
          - X7
          - X8
          - X9
          - ''
          - null
          type: string
          nullable: true
          description: |-
            Describes which lane of the road this sign affects.

            * `11` - Main lane
            * `21` - Main lane
            * `31` - Lane allowing traffic to both directions
            * `X2` - First left additional lane
            * `X3` - First right additional lane
            * `X4` - Second left additional lane
            * `X5` - Second right additional lane
            * `X6` - Third left additional lane
            * `X7` - Third right additional lane
            * `X8` - Fourth left additional lane
            * `X9` - Fourth right additional lane
        lane_type:
          enum:
          - '1'
          - '2'
          - '3'
          - '4'
          - '5'
          - '6'
          - '7'
          - '8'
          - '9'
          - '10'
          - '11'
          - '20'
          - '21'
          - '22'
          - ''
          - null
          type: string
          nullable: true
          description: |-
            The type of lane which this sign affects.

            * `1` - Main lane
            * `2` - Fast lane
            * `3` - Turn right lane
            * `4` - Turn left lane
            * `5` - Auxiliary straight lane
            * `6` - Merge lane
            * `7` - Exit lane
            * `8` - Weaving lane
            * `9` - Public transport lane / taxi lane
            * `10` - Heavy vehicle lane
            * `11` - Reversible lane
            * `20` - Pedestrian and bike lane
            * `21` - Pedestrian lane
            * `22` - Bike lane
        direction:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: The direction a person is facing when looking perpendicular
            to the sign. The value is in degrees from 0 to 359, where 0 is north,
            90 is east, etc.
        height:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          nullable: true
          description: The height of the sign from the ground, measured from the bottom
            in centimeters.
        value:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
          title: Signpost value
          description: Numeric value on the sign.
        txt:
          type: string
          nullable: true
          title: Signpost txt
          description: Text written on the device.
          maxLength: 254
        size:
          enum:
          - S
          - M
          - L
          - ''
          - null
          type: string
          description: |-
            * `S` - Small
            * `M` - Medium
            * `L` - Large
          nullable: true
        reflection_class:
          enum:
          - R1
          - R2
          - R3
          - ''
          - null
          type: string
          description: |-
            * `R1` - r1
            * `R2` - r2
            * `R3` - r3
          nullable: true
          title: Reflection
        attachment_class:
          type: string
          nullable: true
          description: The attachment class of the sign according to the standard
            SFS-EN 12899-1.The possible values are P1, P2 and P3.
          maxLength: 254
        target_id:
          type: string
          nullable: true
          description: The id number of the target the sign is guiding to (if available).
          maxLength: 254
        target_txt:
          type: string
          nullable: true
          description: Free-form text description of the target the sign is guiding
            to, if the target has no id number.
          maxLength: 254
        electric_maintainer:
          type: string
          nullable: true
          description: Organization in charge of electric maintenance of the device.
          maxLength: 254
        location_specifier:
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - null
          type: integer
          nullable: true
          description: |-
            Specifies where the sign is in relation to the road.

            * `1` - Right side
            * `2` - Left side
            * `3` - Above
            * `4` - Middle
            * `5` - Vertical
            * `6` - Outside
        validity_period_start:
          type: string
          format: date
          nullable: true
          description: Date on which this sign becomes active.
        validity_period_end:
          type: string
          format: date
          nullable: true
          description: Date after which this sign becomes inactive.
        seasonal_validity_period_start:
          type: string
          format: date
          nullable: true
          description: Date on which this sign becomes seasonally active.
        seasonal_validity_period_end:
          type: string
          format: date
          nullable: true
          description: Date after which this sign becomes seasonally inactive.
        material:
          type: string
          nullable: true
          description: Describes the material that the device is made of.
          maxLength: 254
        organization:
          type: string
          nullable: true
          description: The organization that installed the signpost.
          maxLength: 254
        manufacturer:
          type: string
          nullable: true
          description: Name of the organization that manufactured this device.
          maxLength: 254
        scanned_at:
          type: string
          format: date-time
          nullable: true
          description: Date and time on which this signpost was last scanned at.
        owner:
          type: string
          format: uuid
          description: Owner who orders and is responsible for the maintenance of
            the device.
        responsible_entity:
          type: string
          format: uuid
          nullable: true
          description: Organization or project that this device is assigned to.
        signpost_plan:
          type: string
          format: uuid
          nullable: true
          description: The plan for this signpost.
        parent:
          type: string
          format: uuid
          nullable: true
          title: Parent Signpost Real
          description: Signpost inside which this device is located.
        mount_real:
          type: string
          format: uuid
          nullable: true
          description: Mount that this sign is mounted on.
    PatchedTrafficControlDeviceTypeRequest:
      type: object
      properties:
        code:
          type: string
          minLength: 1
          description: Standardised code of the device type.
          maxLength: 32
        icon:
          type: string
          maxLength: 100
        description:
          type: string
          nullable: true
          maxLength: 254
        value:
          type: string
          description: Numeric value on the sign.
          maxLength: 50
        unit:
          type: string
          description: Unit, in which the numeric value is in.
          maxLength: 50
        size:
          type: string
          maxLength: 50
        legacy_code:
          type: string
          nullable: true
          maxLength: 32
        legacy_description:
          type: string
          nullable: true
          maxLength: 254
        target_model:
          enum:
          - barrier
          - road_marking
          - signpost
          - traffic_light
          - traffic_sign
          - additional_sign
          - other
          - ''
          - null
          type: string
          nullable: true
          title: Target data model
          description: |-
            Defines which model this device type describes.

            * `barrier` - Barrier
            * `road_marking` - Road marking
            * `signpost` - Signpost
            * `traffic_light` - Traffic light
            * `traffic_sign` - Traffic sign
            * `additional_sign` - Additional sign
            * `other` - Other
        type:
          enum:
          - longitudinal
          - transverse
          - other
          - ''
          - null
          type: string
          description: |-
            * `longitudinal` - Longitudinal
            * `transverse` - Transverse
            * `other` - Other road marking
          nullable: true
        content_schema:
          type: object
          additionalProperties: {}
          nullable: true
    PatchedTrafficLightPlanInputRequest:
      type: object
      properties:
        replaces:
          type: string
          format: uuid
          nullable: true
          description: ID to the device plan that this device is replacing
        location:
          type: string
          format: EWKT
          example: SRID=3879;POINT Z (25496751.5 6673129.5 1.5)
          minLength: 1
        device_type:
          type: string
          format: uuid
          nullable: true
        lifecycle:
          enum:
          - 3
          - 4
          - 5
          - 6
          type: integer
          description: |-
            Lifecycle of the device, which describes the activity status of the device.

            * `3` - Active
            * `4` - Temporarily active
            * `5` - Temporarily inactive
            * `6` - Inactive
        source_id:
          type: string
          nullable: true
          description: ID of the device in the source where this device was imported
            from.
          maxLength: 64
        source_name:
          type: string
          nullable: true
          description: Name of the source for where this device was imported from.
          maxLength: 254
        road_name:
          type: string
          nullable: true
          description: Name of the road this traffic light is installed at.
          maxLength: 254
        lane_number:
          enum:
          - '11'
          - '21'
          - '31'
          - X2
          - X3
          - X4
          - X5
          - X6
          - X7
          - X8
          - X9
          - ''
          - null
          type: string
          nullable: true
          description: |-
            Describes which lane of the road this traffic light affects.

            * `11` - Main lane
            * `21` - Main lane
            * `31` - Lane allowing traffic to both directions
            * `X2` - First left additional lane
            * `X3` - First right additional lane
            * `X4` - Second left additional lane
            * `X5` - Second right additional lane
            * `X6` - Third left additional lane
            * `X7` - Third right additional lane
            * `X8` - Fourth left additional lane
            * `X9` - Fourth right additional lane
        lane_type:
          enum:
          - '1'
          - '2'
          - '3'
          - '4'
          - '5'
          - '6'
          - '7'
          - '8'
          - '9'
          - '10'
          - '11'
          - '20'
          - '21'
          - '22'
          - ''
          - null
          type: string
          nullable: true
          description: |-
            The type of lane which this traffic light affects.

            * `1` - Main lane
            * `2` - Fast lane
            * `3` - Turn right lane
            * `4` - Turn left lane
            * `5` - Auxiliary straight lane
            * `6` - Merge lane
            * `7` - Exit lane
            * `8` - Weaving lane
            * `9` - Public transport lane / taxi lane
            * `10` - Heavy vehicle lane
            * `11` - Reversible lane
            * `20` - Pedestrian and bike lane
            * `21` - Pedestrian lane
            * `22` - Bike lane
        direction:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: The direction a person is facing when looking perpendicular
            to the traffic light. The value is in degrees from 0 to 359, where 0 is
            north, 90 is east, etc.
        height:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          nullable: true
          description: The height of the sign from the ground, measured from the bottom
            in centimeters.
        type:
          enum:
          - '1'
          - '4.1'
          - '4.2'
          - '5'
          - '8'
          - '9.1'
          - '9.2'
          - '10'
          - '11'
          - ''
          - null
          type: string
          nullable: true
          description: |-
            Describes the type of traffic light this device is.

            * `1` - Traffic signal
            * `4.1` - Right-turn arrow signal
            * `4.2` - Left-turn arrow signal
            * `5` - Triangle signal
            * `8` - Public transport signal
            * `9.1` - Bicycle signal
            * `9.2` - Bicycle turn arrow signal
            * `10` - Pedestrian signal
            * `11` - Lane signal
        txt:
          type: string
          nullable: true
          description: Text on the traffic light.
          maxLength: 254
        push_button:
          enum:
          - 1
          - 2
          - null
          type: integer
          nullable: true
          description: |-
            Describes if this traffic light has a push button attached.

            * `1` - No
            * `2` - Yes
        sound_beacon:
          enum:
          - 1
          - 2
          - null
          type: integer
          nullable: true
          description: |-
            Describes if this traffic light has a sound beacon attached.

            * `1` - No
            * `2` - Yes
        vehicle_recognition:
          enum:
          - 1
          - 2
          - 3
          - 4
          - null
          type: integer
          nullable: true
          description: |-
            Describes the type of vehicle recognition this traffic light has.

            * `1` - Loop sensor
            * `2` - Infrared sensor
            * `3` - Radar i.e. microwave sensor
            * `4` - Other
        validity_period_start:
          type: string
          format: date
          nullable: true
          description: Date on which this traffic light becomes active.
        validity_period_end:
          type: string
          format: date
          nullable: true
          description: Date after which this traffic light becomes inactive.
        location_specifier:
          enum:
          - 1
          - 2
          - 3
          - null
          type: integer
          nullable: true
          description: |-
            Specifies where the traffic light is in relation to the road.

            * `1` - Right side of the road (relative to traffic direction)
            * `2` - Above the lanes
            * `3` - Island
        owner:
          type: string
          format: uuid
          description: Owner who orders and is responsible for the maintenance of
            the device.
        responsible_entity:
          type: string
          format: uuid
          nullable: true
          description: Organization or project that this device is assigned to.
        mount_plan:
          type: string
          format: uuid
          nullable: true
          description: Mount that this traffic light is mounted on.
        plan:
          type: string
          format: uuid
          nullable: true
          description: Plan which this traffic light plan is a part of.
    PatchedTrafficLightRealOperationRequest:
      type: object
      properties:
        operation_type_id:
          type: integer
        operation_date:
          type: string
          format: date
    PatchedTrafficLightRealRequest:
      type: object
      properties:
        location:
          type: string
          format: EWKT
          example: SRID=3879;POINT Z (25496751.5 6673129.5 1.5)
          minLength: 1
        device_type:
          type: string
          format: uuid
          nullable: true
        lifecycle:
          enum:
          - 3
          - 4
          - 5
          - 6
          type: integer
          description: |-
            Lifecycle of the device, which describes the activity status of the device.

            * `3` - Active
            * `4` - Temporarily active
            * `5` - Temporarily inactive
            * `6` - Inactive
        installation_date:
          type: string
          format: date
          nullable: true
          description: Date on which this device was installed on.
        installation_status:
          enum:
          - IN_USE
          - COVERED
          - FALLEN
          - MISSING
          - OTHER
          - ''
          - null
          type: string
          nullable: true
          description: |-
            Describes this devices installation status.

            * `IN_USE` - In use
            * `COVERED` - Covered
            * `FALLEN` - Fallen
            * `MISSING` - Missing
            * `OTHER` - Other
        condition:
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - null
          type: integer
          nullable: true
          description: |-
            Describes the condition of this device.

            * `1` - Very bad
            * `2` - Bad
            * `3` - Average
            * `4` - Good
            * `5` - Very good
        source_id:
          type: string
          nullable: true
          description: ID of the device in the source where this device was imported
            from.
          maxLength: 64
        source_name:
          type: string
          nullable: true
          description: Name of the source for where this device was imported from.
          maxLength: 254
        road_name:
          type: string
          nullable: true
          description: Name of the road this traffic light is installed at.
          maxLength: 254
        lane_number:
          enum:
          - '11'
          - '21'
          - '31'
          - X2
          - X3
          - X4
          - X5
          - X6
          - X7
          - X8
          - X9
          - ''
          - null
          type: string
          nullable: true
          description: |-
            Describes which lane of the road this traffic light affects.

            * `11` - Main lane
            * `21` - Main lane
            * `31` - Lane allowing traffic to both directions
            * `X2` - First left additional lane
            * `X3` - First right additional lane
            * `X4` - Second left additional lane
            * `X5` - Second right additional lane
            * `X6` - Third left additional lane
            * `X7` - Third right additional lane
            * `X8` - Fourth left additional lane
            * `X9` - Fourth right additional lane
        lane_type:
          enum:
          - '1'
          - '2'
          - '3'
          - '4'
          - '5'
          - '6'
          - '7'
          - '8'
          - '9'
          - '10'
          - '11'
          - '20'
          - '21'
          - '22'
          - ''
          - null
          type: string
          nullable: true
          description: |-
            The type of lane which this traffic light affects.

            * `1` - Main lane
            * `2` - Fast lane
            * `3` - Turn right lane
            * `4` - Turn left lane
            * `5` - Auxiliary straight lane
            * `6` - Merge lane
            * `7` - Exit lane
            * `8` - Weaving lane
            * `9` - Public transport lane / taxi lane
            * `10` - Heavy vehicle lane
            * `11` - Reversible lane
            * `20` - Pedestrian and bike lane
            * `21` - Pedestrian lane
            * `22` - Bike lane
        direction:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: The direction a person is facing when looking perpendicular
            to the traffic light. The value is in degrees from 0 to 359, where 0 is
            north, 90 is east, etc.
        height:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          nullable: true
          description: The height of the sign from the ground, measured from the bottom
            in centimeters.
        type:
          enum:
          - '1'
          - '4.1'
          - '4.2'
          - '5'
          - '8'
          - '9.1'
          - '9.2'
          - '10'
          - '11'
          - ''
          - null
          type: string
          nullable: true
          description: |-
            Describes the type of traffic light this device is.

            * `1` - Traffic signal
            * `4.1` - Right-turn arrow signal
            * `4.2` - Left-turn arrow signal
            * `5` - Triangle signal
            * `8` - Public transport signal
            * `9.1` - Bicycle signal
            * `9.2` - Bicycle turn arrow signal
            * `10` - Pedestrian signal
            * `11` - Lane signal
        txt:
          type: string
          nullable: true
          description: Text on the traffic light.
          maxLength: 254
        push_button:
          enum:
          - 1
          - 2
          - null
          type: integer
          nullable: true
          description: |-
            Describes if this traffic light has a push button attached.

            * `1` - No
            * `2` - Yes
        sound_beacon:
          enum:
          - 1
          - 2
          - null
          type: integer
          nullable: true
          description: |-
            Describes if this traffic light has a sound beacon attached.

            * `1` - No
            * `2` - Yes
        vehicle_recognition:
          enum:
          - 1
          - 2
          - 3
          - 4
          - null
          type: integer
          nullable: true
          description: |-
            Describes the type of vehicle recognition this traffic light has.

            * `1` - Loop sensor
            * `2` - Infrared sensor
            * `3` - Radar i.e. microwave sensor
            * `4` - Other
        validity_period_start:
          type: string
          format: date
          nullable: true
          description: Date on which this traffic light becomes active.
        validity_period_end:
          type: string
          format: date
          nullable: true
          description: Date after which this traffic light becomes inactive.
        location_specifier:
          enum:
          - 1
          - 2
          - 3
          - null
          type: integer
          nullable: true
          description: |-
            Specifies where the traffic light is in relation to the road.

            * `1` - Right side of the road (relative to traffic direction)
            * `2` - Above the lanes
            * `3` - Island
        owner:
          type: string
          format: uuid
          description: Owner who orders and is responsible for the maintenance of
            the device.
        responsible_entity:
          type: string
          format: uuid
          nullable: true
          description: Organization or project that this device is assigned to.
        traffic_light_plan:
          type: string
          format: uuid
          nullable: true
          description: The plan for this traffic light.
        mount_real:
          type: string
          format: uuid
          nullable: true
          description: Mount that this traffic light is mounted on.
    PatchedTrafficSignPlanInputRequest:
      type: object
      properties:
        replaces:
          type: string
          format: uuid
          nullable: true
          description: ID to the device plan that this device is replacing
        location:
          type: string
          format: EWKT
          example: SRID=3879;POINT Z (25496751.5 6673129.5 1.5)
          minLength: 1
        affect_area:
          type: string
          format: EWKT
          example: SRID=3879;POLYGON Z ((25497733.5 6672927.5 0, 25497946.5 6673032.5
            0, 25498653.5 6673034.5 0, 25498987.5 6672708.5 0, 25498314.5 6672170.5
            0, 25497651.5 6672629.5 0, 25497646.5 6672775.5 0, 25497733.5 6672927.5
            0))
          minLength: 1
        device_type:
          type: string
          format: uuid
          nullable: true
        lifecycle:
          enum:
          - 3
          - 4
          - 5
          - 6
          type: integer
          description: |-
            Lifecycle of the device, which describes the activity status of the device.

            * `3` - Active
            * `4` - Temporarily active
            * `5` - Temporarily inactive
            * `6` - Inactive
        source_id:
          type: string
          nullable: true
          description: ID of the device in the source where this device was imported
            from.
          maxLength: 64
        source_name:
          type: string
          nullable: true
          description: Name of the source for where this device was imported from.
          maxLength: 254
        road_name:
          type: string
          nullable: true
          description: Name of the road this traffic sign is installed at.
          maxLength: 254
        lane_number:
          enum:
          - '11'
          - '21'
          - '31'
          - X2
          - X3
          - X4
          - X5
          - X6
          - X7
          - X8
          - X9
          - ''
          - null
          type: string
          nullable: true
          description: |-
            Describes which lane of the road this sign affects.

            * `11` - Main lane
            * `21` - Main lane
            * `31` - Lane allowing traffic to both directions
            * `X2` - First left additional lane
            * `X3` - First right additional lane
            * `X4` - Second left additional lane
            * `X5` - Second right additional lane
            * `X6` - Third left additional lane
            * `X7` - Third right additional lane
            * `X8` - Fourth left additional lane
            * `X9` - Fourth right additional lane
        lane_type:
          enum:
          - '1'
          - '2'
          - '3'
          - '4'
          - '5'
          - '6'
          - '7'
          - '8'
          - '9'
          - '10'
          - '11'
          - '20'
          - '21'
          - '22'
          - ''
          - null
          type: string
          nullable: true
          description: |-
            The type of lane which this sign affects.

            * `1` - Main lane
            * `2` - Fast lane
            * `3` - Turn right lane
            * `4` - Turn left lane
            * `5` - Auxiliary straight lane
            * `6` - Merge lane
            * `7` - Exit lane
            * `8` - Weaving lane
            * `9` - Public transport lane / taxi lane
            * `10` - Heavy vehicle lane
            * `11` - Reversible lane
            * `20` - Pedestrian and bike lane
            * `21` - Pedestrian lane
            * `22` - Bike lane
        direction:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: The direction a person is facing when looking perpendicular
            to the sign. The value is in degrees from 0 to 359, where 0 is north,
            90 is east, etc.
        height:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: The height of the sign from the ground, measured from the bottom
            in centimeters.
        value:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
          title: Traffic Sign Code value
          description: Numeric value on the sign.
        size:
          enum:
          - S
          - M
          - L
          - ''
          - null
          type: string
          description: |-
            * `S` - Small
            * `M` - Medium
            * `L` - Large
          nullable: true
        reflection_class:
          enum:
          - R1
          - R2
          - R3
          - ''
          - null
          type: string
          description: |-
            * `R1` - r1
            * `R2` - r2
            * `R3` - r3
          nullable: true
          title: Reflection
        surface_class:
          enum:
          - CONVEX
          - FLAT
          - ''
          - null
          type: string
          description: |-
            * `CONVEX` - Convex
            * `FLAT` - Flat
          nullable: true
          title: Surface
        txt:
          type: string
          nullable: true
          description: Text written on the sign.
          maxLength: 254
        location_specifier:
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - null
          type: integer
          nullable: true
          description: |-
            Specifies where the sign is in relation to the road.

            * `1` - Right side
            * `2` - Left side
            * `3` - Above
            * `4` - Middle
            * `5` - Vertical
            * `6` - Outside
        validity_period_start:
          type: string
          format: date
          nullable: true
          description: Date on which this sign becomes active.
        validity_period_end:
          type: string
          format: date
          nullable: true
          description: Date after which this sign becomes inactive.
        seasonal_validity_period_start:
          type: string
          format: date
          nullable: true
          description: Date on which this sign becomes seasonally active.
        seasonal_validity_period_end:
          type: string
          format: date
          nullable: true
          description: Date after which this sign becomes seasonally inactive.
        owner:
          type: string
          format: uuid
          description: Owner who orders and is responsible for the maintenance of
            the device.
        responsible_entity:
          type: string
          format: uuid
          nullable: true
          description: Organization or project that this device is assigned to.
        mount_plan:
          type: string
          format: uuid
          nullable: true
          description: Mount that this sign is mounted on.
        plan:
          type: string
          format: uuid
          nullable: true
          description: Plan which this traffic sign plan is a part of.
    PatchedTrafficSignRealOperationRequest:
      type: object
      properties:
        operation_type_id:
          type: integer
        operation_date:
          type: string
          format: date
    PatchedTrafficSignRealRequest:
      type: object
      properties:
        location:
          type: string
          format: EWKT
          example: SRID=3879;POINT Z (25496751.5 6673129.5 1.5)
          minLength: 1
        device_type:
          type: string
          format: uuid
          nullable: true
        lifecycle:
          enum:
          - 3
          - 4
          - 5
          - 6
          type: integer
          description: |-
            Lifecycle of the device, which describes the activity status of the device.

            * `3` - Active
            * `4` - Temporarily active
            * `5` - Temporarily inactive
            * `6` - Inactive
        installation_date:
          type: string
          format: date
          nullable: true
          description: Date on which this device was installed on.
        installation_status:
          enum:
          - IN_USE
          - COVERED
          - FALLEN
          - MISSING
          - OTHER
          - ''
          - null
          type: string
          nullable: true
          description: |-
            Describes this devices installation status.

            * `IN_USE` - In use
            * `COVERED` - Covered
            * `FALLEN` - Fallen
            * `MISSING` - Missing
            * `OTHER` - Other
        condition:
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - null
          type: integer
          nullable: true
          description: |-
            Describes the condition of this device.

            * `1` - Very bad
            * `2` - Bad
            * `3` - Average
            * `4` - Good
            * `5` - Very good
        source_id:
          type: string
          nullable: true
          description: ID of the device in the source where this device was imported
            from.
          maxLength: 64
        source_name:
          type: string
          nullable: true
          description: Name of the source for where this device was imported from.
          maxLength: 254
        road_name:
          type: string
          nullable: true
          description: Name of the road this traffic sign is installed at.
          maxLength: 254
        lane_number:
          enum:
          - '11'
          - '21'
          - '31'
          - X2
          - X3
          - X4
          - X5
          - X6
          - X7
          - X8
          - X9
          - ''
          - null
          type: string
          nullable: true
          description: |-
            Describes which lane of the road this sign affects.

            * `11` - Main lane
            * `21` - Main lane
            * `31` - Lane allowing traffic to both directions
            * `X2` - First left additional lane
            * `X3` - First right additional lane
            * `X4` - Second left additional lane
            * `X5` - Second right additional lane
            * `X6` - Third left additional lane
            * `X7` - Third right additional lane
            * `X8` - Fourth left additional lane
            * `X9` - Fourth right additional lane
        lane_type:
          enum:
          - '1'
          - '2'
          - '3'
          - '4'
          - '5'
          - '6'
          - '7'
          - '8'
          - '9'
          - '10'
          - '11'
          - '20'
          - '21'
          - '22'
          - ''
          - null
          type: string
          nullable: true
          description: |-
            The type of lane which this sign affects.

            * `1` - Main lane
            * `2` - Fast lane
            * `3` - Turn right lane
            * `4` - Turn left lane
            * `5` - Auxiliary straight lane
            * `6` - Merge lane
            * `7` - Exit lane
            * `8` - Weaving lane
            * `9` - Public transport lane / taxi lane
            * `10` - Heavy vehicle lane
            * `11` - Reversible lane
            * `20` - Pedestrian and bike lane
            * `21` - Pedestrian lane
            * `22` - Bike lane
        direction:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: The direction a person is facing when looking perpendicular
            to the sign. The value is in degrees from 0 to 359, where 0 is north,
            90 is east, etc.
        height:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: The height of the sign from the ground, measured from the bottom
            in centimeters.
        value:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
          title: Traffic Sign Code value
          description: Numeric value on the sign.
        size:
          enum:
          - S
          - M
          - L
          - ''
          - null
          type: string
          description: |-
            * `S` - Small
            * `M` - Medium
            * `L` - Large
          nullable: true
        reflection_class:
          enum:
          - R1
          - R2
          - R3
          - ''
          - null
          type: string
          description: |-
            * `R1` - r1
            * `R2` - r2
            * `R3` - r3
          nullable: true
          title: Reflection
        surface_class:
          enum:
          - CONVEX
          - FLAT
          - ''
          - null
          type: string
          description: |-
            * `CONVEX` - Convex
            * `FLAT` - Flat
          nullable: true
          title: Surface
        txt:
          type: string
          nullable: true
          description: Text written on the sign.
          maxLength: 254
        location_specifier:
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - null
          type: integer
          nullable: true
          description: |-
            Specifies where the sign is in relation to the road.

            * `1` - Right side
            * `2` - Left side
            * `3` - Above
            * `4` - Middle
            * `5` - Vertical
            * `6` - Outside
        validity_period_start:
          type: string
          format: date
          nullable: true
          description: Date on which this sign becomes active.
        validity_period_end:
          type: string
          format: date
          nullable: true
          description: Date after which this sign becomes inactive.
        seasonal_validity_period_start:
          type: string
          format: date
          nullable: true
          description: Date on which this sign becomes seasonally active.
        seasonal_validity_period_end:
          type: string
          format: date
          nullable: true
          description: Date after which this sign becomes seasonally inactive.
        installation_id:
          type: string
          nullable: true
          description: The id number of the installation record.
          maxLength: 254
        installation_details:
          type: string
          nullable: true
          description: Additional details about the installation.
          maxLength: 254
        permit_decision_id:
          type: string
          nullable: true
          description: The id number of the installation permit.
          maxLength: 254
        scanned_at:
          type: string
          format: date-time
          nullable: true
          description: Date and time on which this sign was last scanned at.
        manufacturer:
          type: string
          nullable: true
          description: Name of the organization that manufactured this sign.
          maxLength: 254
        rfid:
          type: string
          nullable: true
          description: RFID tag of the sign (if any).
          maxLength: 254
        operation:
          type: string
          nullable: true
          description: Maintenance operations done to the sign, e.g. washing, straightening
            or painting.
          maxLength: 64
        attachment_url:
          type: string
          format: uri
          nullable: true
          description: URL to a file attachment related to this sign.
          maxLength: 500
        owner:
          type: string
          format: uuid
          description: Owner who orders and is responsible for the maintenance of
            the device.
        responsible_entity:
          type: string
          format: uuid
          nullable: true
          description: Organization or project that this device is assigned to.
        traffic_sign_plan:
          type: string
          format: uuid
          nullable: true
          description: The plan for this traffic sign.
        mount_real:
          type: string
          format: uuid
          nullable: true
          description: Mount that this sign is mounted on.
        coverage_area:
          type: string
          format: uuid
          nullable: true
          description: Coverage area that this traffic sign belongs to.
    Plan:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        location:
          type: string
          format: EWKT
          example: SRID=3879;MULTIPOLYGON Z (((25497733.5 6672927.5 0, 25497946.5
            6673032.5 0, 25498653.5 6673034.5 0, 25498987.5 6672708.5 0, 25498314.5
            6672170.5 0, 25497651.5 6672629.5 0, 25497646.5 6672775.5 0, 25497733.5
            6672927.5 0)))
          nullable: true
        linked_objects:
          allOf:
          - $ref: '#/components/schemas/PlanRelation'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        source_id:
          type: string
          nullable: true
          description: ID of the device in the source where this device was imported
            from.
          maxLength: 64
        source_name:
          type: string
          nullable: true
          description: Name of the source for where this device was imported from.
          maxLength: 254
        name:
          type: string
          maxLength: 512
        decision_id:
          type: string
          description: Year and verdict section separated with a dash
          maxLength: 16
        diary_number:
          type: string
          nullable: true
          maxLength: 20
        drawing_numbers:
          type: array
          items:
            type: string
            pattern: ^[a-zA-Z0-9-_ ]+$
            maxLength: 20
          description: Drawing numbers related to the plan separated with a comma
          maxItems: 100
        derive_location:
          type: boolean
          title: Derive location from devices
          description: Derive the plan location (geometry area) from the locations
            of related devices. Enable this if the plan does not have a predefined
            location.
        created_by:
          type: string
          format: uuid
          readOnly: true
          nullable: true
        updated_by:
          type: string
          format: uuid
          readOnly: true
          nullable: true
      required:
      - created_at
      - created_by
      - decision_id
      - id
      - linked_objects
      - name
      - updated_at
      - updated_by
    PlanRelation:
      type: object
      properties:
        barrier_plan_ids:
          type: array
          items:
            type: string
            format: uuid
          readOnly: true
        mount_plan_ids:
          type: array
          items:
            type: string
            format: uuid
          readOnly: true
        road_marking_plan_ids:
          type: array
          items:
            type: string
            format: uuid
          readOnly: true
        signpost_plan_ids:
          type: array
          items:
            type: string
            format: uuid
          readOnly: true
        traffic_light_plan_ids:
          type: array
          items:
            type: string
            format: uuid
          readOnly: true
        traffic_sign_plan_ids:
          type: array
          items:
            type: string
            format: uuid
          readOnly: true
        additional_sign_plan_ids:
          type: array
          items:
            type: string
            format: uuid
          readOnly: true
        furniture_signpost_plan_ids:
          type: array
          items:
            type: string
            format: uuid
          readOnly: true
      required:
      - additional_sign_plan_ids
      - barrier_plan_ids
      - furniture_signpost_plan_ids
      - mount_plan_ids
      - road_marking_plan_ids
      - signpost_plan_ids
      - traffic_light_plan_ids
      - traffic_sign_plan_ids
    PlanRequest:
      type: object
      properties:
        location:
          type: string
          format: EWKT
          example: SRID=3879;MULTIPOLYGON Z (((25497733.5 6672927.5 0, 25497946.5
            6673032.5 0, 25498653.5 6673034.5 0, 25498987.5 6672708.5 0, 25498314.5
            6672170.5 0, 25497651.5 6672629.5 0, 25497646.5 6672775.5 0, 25497733.5
            6672927.5 0)))
          nullable: true
        source_id:
          type: string
          nullable: true
          description: ID of the device in the source where this device was imported
            from.
          maxLength: 64
        source_name:
          type: string
          nullable: true
          description: Name of the source for where this device was imported from.
          maxLength: 254
        name:
          type: string
          minLength: 1
          maxLength: 512
        decision_id:
          type: string
          minLength: 1
          description: Year and verdict section separated with a dash
          maxLength: 16
        diary_number:
          type: string
          nullable: true
          maxLength: 20
        drawing_numbers:
          type: array
          items:
            type: string
            minLength: 1
            pattern: ^[a-zA-Z0-9-_ ]+$
            maxLength: 20
          description: Drawing numbers related to the plan separated with a comma
          maxItems: 100
        derive_location:
          type: boolean
          title: Derive location from devices
          description: Derive the plan location (geometry area) from the locations
            of related devices. Enable this if the plan does not have a predefined
            location.
      required:
      - decision_id
      - name
    PortalType:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        structure:
          type: string
          title: Portal structure
          maxLength: 64
        build_type:
          type: string
          title: Portal build type
          maxLength: 64
        model:
          type: string
          title: Portal model
          maxLength: 64
      required:
      - build_type
      - id
      - model
      - structure
    PortalTypeRequest:
      type: object
      properties:
        structure:
          type: string
          minLength: 1
          title: Portal structure
          maxLength: 64
        build_type:
          type: string
          minLength: 1
          title: Portal build type
          maxLength: 64
        model:
          type: string
          minLength: 1
          title: Portal model
          maxLength: 64
      required:
      - build_type
      - model
      - structure
    ResponsibleEntity:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 254
        organization_level:
          enum:
          - 10
          - 20
          - 30
          - 50
          type: integer
          description: |-
            Describes the level of organization this is.

            * `10` - division
            * `20` - service
            * `30` - unit
            * `50` - project
        parent:
          type: string
          format: uuid
          nullable: true
          title: Parent Responsible Entity
          description: Organization under which this object belongs to. This objects
            organizational level must be lower than its parents.
      required:
      - id
      - name
    ResponsibleEntityRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 254
        organization_level:
          enum:
          - 10
          - 20
          - 30
          - 50
          type: integer
          description: |-
            Describes the level of organization this is.

            * `10` - division
            * `20` - service
            * `30` - unit
            * `50` - project
        parent:
          type: string
          format: uuid
          nullable: true
          title: Parent Responsible Entity
          description: Organization under which this object belongs to. This objects
            organizational level must be lower than its parents.
      required:
      - name
    RoadMarkingPlanFile:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        file:
          type: string
          format: uri
        road_marking_plan:
          type: string
          format: uuid
      required:
      - file
      - id
      - road_marking_plan
    RoadMarkingPlanFileCreateResponse:
      type: object
      properties:
        files:
          type: array
          items:
            $ref: '#/components/schemas/RoadMarkingPlanFile'
      required:
      - files
    RoadMarkingPlanInput:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        replaces:
          type: string
          format: uuid
          nullable: true
          description: ID to the device plan that this device is replacing
        location:
          type: string
          format: EWKT
          example: SRID=3879;MULTIPOLYGON Z (((25497733.5 6672927.5 0, 25497946.5
            6673032.5 0, 25498653.5 6673034.5 0, 25498987.5 6672708.5 0, 25498314.5
            6672170.5 0, 25497651.5 6672629.5 0, 25497646.5 6672775.5 0, 25497733.5
            6672927.5 0)))
        device_type:
          type: string
          format: uuid
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        lifecycle:
          enum:
          - 3
          - 4
          - 5
          - 6
          type: integer
          description: |-
            Lifecycle of the device, which describes the activity status of the device.

            * `3` - Active
            * `4` - Temporarily active
            * `5` - Temporarily inactive
            * `6` - Inactive
        source_id:
          type: string
          nullable: true
          description: ID of the device in the source where this device was imported
            from.
          maxLength: 64
        source_name:
          type: string
          nullable: true
          description: Name of the source for where this device was imported from.
          maxLength: 254
        road_name:
          type: string
          nullable: true
          description: Name of the road this road marking is installed at.
          maxLength: 254
        lane_number:
          enum:
          - '11'
          - '21'
          - '31'
          - X2
          - X3
          - X4
          - X5
          - X6
          - X7
          - X8
          - X9
          - ''
          - null
          type: string
          nullable: true
          description: |-
            Describes which lane of the road this road marking affects.

            * `11` - Main lane
            * `21` - Main lane
            * `31` - Lane allowing traffic to both directions
            * `X2` - First left additional lane
            * `X3` - First right additional lane
            * `X4` - Second left additional lane
            * `X5` - Second right additional lane
            * `X6` - Third left additional lane
            * `X7` - Third right additional lane
            * `X8` - Fourth left additional lane
            * `X9` - Fourth right additional lane
        lane_type:
          enum:
          - '1'
          - '2'
          - '3'
          - '4'
          - '5'
          - '6'
          - '7'
          - '8'
          - '9'
          - '10'
          - '11'
          - '20'
          - '21'
          - '22'
          - ''
          - null
          type: string
          nullable: true
          description: |-
            The type of lane which this road marking affects.

            * `1` - Main lane
            * `2` - Fast lane
            * `3` - Turn right lane
            * `4` - Turn left lane
            * `5` - Auxiliary straight lane
            * `6` - Merge lane
            * `7` - Exit lane
            * `8` - Weaving lane
            * `9` - Public transport lane / taxi lane
            * `10` - Heavy vehicle lane
            * `11` - Reversible lane
            * `20` - Pedestrian and bike lane
            * `21` - Pedestrian lane
            * `22` - Bike lane
        location_specifier:
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - null
          type: integer
          nullable: true
          description: |-
            Specifies where the road marking is in relation to the lane.

            * `1` - Both sides of road
            * `2` - Right side of lane
            * `3` - Left side of lane
            * `4` - Both sides of lane
            * `5` - Middle of lane
            * `6` - Left side of lane or road
        line_direction:
          enum:
          - FORWARD
          - BACKWARD
          - ''
          - null
          type: string
          description: |-
            * `FORWARD` - Forward
            * `BACKWARD` - Backward
          nullable: true
        arrow_direction:
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - null
          type: integer
          nullable: true
          description: |-
            Direction of the arrow on the road.

            * `1` - Straight
            * `2` - Right
            * `3` - Right and straight
            * `4` - Left
            * `5` - Left and straight
            * `6` - Lane ends
            * `7` - Right and left
            * `8` - Straight, right and left
        value:
          type: string
          nullable: true
          title: Road Marking value
          description: Numeric value on the marking.
          maxLength: 254
        material:
          type: string
          nullable: true
          description: Describes the material that the device is made of.
          maxLength: 254
        color:
          enum:
          - 1
          - 2
          - null
          type: integer
          description: |-
            * `1` - White
            * `2` - Yellow
          nullable: true
        type_specifier:
          type: string
          nullable: true
          description: Additional device type codes specific to the local public authorities.
          maxLength: 254
        validity_period_start:
          type: string
          format: date
          nullable: true
          description: Date on which this road marking becomes active.
        validity_period_end:
          type: string
          format: date
          nullable: true
          description: Date after which this road marking becomes inactive.
        seasonal_validity_period_start:
          type: string
          format: date
          nullable: true
          description: Date on which this road marking becomes seasonally active.
        seasonal_validity_period_end:
          type: string
          format: date
          nullable: true
          description: Date after which this road marking becomes seasonally inactive.
        symbol:
          type: string
          nullable: true
          description: Symbol on the road marking.
          maxLength: 254
        size:
          type: string
          nullable: true
          description: Size of the road marking.
          maxLength: 254
        length:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: Length of the road marking in centimeters.
        width:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: Width of the road marking in centimeters.
        is_raised:
          type: boolean
          nullable: true
        is_grinded:
          type: boolean
          nullable: true
        additional_info:
          type: string
          nullable: true
        amount:
          type: string
          nullable: true
          maxLength: 254
        created_by:
          type: string
          format: uuid
          readOnly: true
          nullable: true
        updated_by:
          type: string
          format: uuid
          readOnly: true
          nullable: true
        owner:
          type: string
          format: uuid
          description: Owner who orders and is responsible for the maintenance of
            the device.
        responsible_entity:
          type: string
          format: uuid
          nullable: true
          description: Organization or project that this device is assigned to.
        traffic_sign_plan:
          type: string
          format: uuid
          nullable: true
          description: Traffic Sign related to this road marking.
        plan:
          type: string
          format: uuid
          nullable: true
          description: Plan which this road marking plan is a part of.
      required:
      - created_at
      - created_by
      - id
      - location
      - owner
      - updated_at
      - updated_by
    RoadMarkingPlanInputRequest:
      type: object
      properties:
        replaces:
          type: string
          format: uuid
          nullable: true
          description: ID to the device plan that this device is replacing
        location:
          type: string
          format: EWKT
          example: SRID=3879;MULTIPOLYGON Z (((25497733.5 6672927.5 0, 25497946.5
            6673032.5 0, 25498653.5 6673034.5 0, 25498987.5 6672708.5 0, 25498314.5
            6672170.5 0, 25497651.5 6672629.5 0, 25497646.5 6672775.5 0, 25497733.5
            6672927.5 0)))
          minLength: 1
        device_type:
          type: string
          format: uuid
          nullable: true
        lifecycle:
          enum:
          - 3
          - 4
          - 5
          - 6
          type: integer
          description: |-
            Lifecycle of the device, which describes the activity status of the device.

            * `3` - Active
            * `4` - Temporarily active
            * `5` - Temporarily inactive
            * `6` - Inactive
        source_id:
          type: string
          nullable: true
          description: ID of the device in the source where this device was imported
            from.
          maxLength: 64
        source_name:
          type: string
          nullable: true
          description: Name of the source for where this device was imported from.
          maxLength: 254
        road_name:
          type: string
          nullable: true
          description: Name of the road this road marking is installed at.
          maxLength: 254
        lane_number:
          enum:
          - '11'
          - '21'
          - '31'
          - X2
          - X3
          - X4
          - X5
          - X6
          - X7
          - X8
          - X9
          - ''
          - null
          type: string
          nullable: true
          description: |-
            Describes which lane of the road this road marking affects.

            * `11` - Main lane
            * `21` - Main lane
            * `31` - Lane allowing traffic to both directions
            * `X2` - First left additional lane
            * `X3` - First right additional lane
            * `X4` - Second left additional lane
            * `X5` - Second right additional lane
            * `X6` - Third left additional lane
            * `X7` - Third right additional lane
            * `X8` - Fourth left additional lane
            * `X9` - Fourth right additional lane
        lane_type:
          enum:
          - '1'
          - '2'
          - '3'
          - '4'
          - '5'
          - '6'
          - '7'
          - '8'
          - '9'
          - '10'
          - '11'
          - '20'
          - '21'
          - '22'
          - ''
          - null
          type: string
          nullable: true
          description: |-
            The type of lane which this road marking affects.

            * `1` - Main lane
            * `2` - Fast lane
            * `3` - Turn right lane
            * `4` - Turn left lane
            * `5` - Auxiliary straight lane
            * `6` - Merge lane
            * `7` - Exit lane
            * `8` - Weaving lane
            * `9` - Public transport lane / taxi lane
            * `10` - Heavy vehicle lane
            * `11` - Reversible lane
            * `20` - Pedestrian and bike lane
            * `21` - Pedestrian lane
            * `22` - Bike lane
        location_specifier:
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - null
          type: integer
          nullable: true
          description: |-
            Specifies where the road marking is in relation to the lane.

            * `1` - Both sides of road
            * `2` - Right side of lane
            * `3` - Left side of lane
            * `4` - Both sides of lane
            * `5` - Middle of lane
            * `6` - Left side of lane or road
        line_direction:
          enum:
          - FORWARD
          - BACKWARD
          - ''
          - null
          type: string
          description: |-
            * `FORWARD` - Forward
            * `BACKWARD` - Backward
          nullable: true
        arrow_direction:
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - null
          type: integer
          nullable: true
          description: |-
            Direction of the arrow on the road.

            * `1` - Straight
            * `2` - Right
            * `3` - Right and straight
            * `4` - Left
            * `5` - Left and straight
            * `6` - Lane ends
            * `7` - Right and left
            * `8` - Straight, right and left
        value:
          type: string
          nullable: true
          title: Road Marking value
          description: Numeric value on the marking.
          maxLength: 254
        material:
          type: string
          nullable: true
          description: Describes the material that the device is made of.
          maxLength: 254
        color:
          enum:
          - 1
          - 2
          - null
          type: integer
          description: |-
            * `1` - White
            * `2` - Yellow
          nullable: true
        type_specifier:
          type: string
          nullable: true
          description: Additional device type codes specific to the local public authorities.
          maxLength: 254
        validity_period_start:
          type: string
          format: date
          nullable: true
          description: Date on which this road marking becomes active.
        validity_period_end:
          type: string
          format: date
          nullable: true
          description: Date after which this road marking becomes inactive.
        seasonal_validity_period_start:
          type: string
          format: date
          nullable: true
          description: Date on which this road marking becomes seasonally active.
        seasonal_validity_period_end:
          type: string
          format: date
          nullable: true
          description: Date after which this road marking becomes seasonally inactive.
        symbol:
          type: string
          nullable: true
          description: Symbol on the road marking.
          maxLength: 254
        size:
          type: string
          nullable: true
          description: Size of the road marking.
          maxLength: 254
        length:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: Length of the road marking in centimeters.
        width:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: Width of the road marking in centimeters.
        is_raised:
          type: boolean
          nullable: true
        is_grinded:
          type: boolean
          nullable: true
        additional_info:
          type: string
          nullable: true
        amount:
          type: string
          nullable: true
          maxLength: 254
        owner:
          type: string
          format: uuid
          description: Owner who orders and is responsible for the maintenance of
            the device.
        responsible_entity:
          type: string
          format: uuid
          nullable: true
          description: Organization or project that this device is assigned to.
        traffic_sign_plan:
          type: string
          format: uuid
          nullable: true
          description: Traffic Sign related to this road marking.
        plan:
          type: string
          format: uuid
          nullable: true
          description: Plan which this road marking plan is a part of.
      required:
      - location
      - owner
    RoadMarkingPlanOutput:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        replaces:
          type: string
          format: uuid
          nullable: true
          description: ID of the device plan that this device plan has replaced
          readOnly: true
        replaced_by:
          type: string
          format: uuid
          nullable: true
          description: ID of the device plan that has replaced this device plan
          readOnly: true
        is_replaced:
          type: boolean
          description: Whether this device plan has been replaced by another device
            plan
          readOnly: true
        location:
          type: string
          format: EWKT
          example: SRID=3879;MULTIPOLYGON Z (((25497733.5 6672927.5 0, 25497946.5
            6673032.5 0, 25498653.5 6673034.5 0, 25498987.5 6672708.5 0, 25498314.5
            6672170.5 0, 25497651.5 6672629.5 0, 25497646.5 6672775.5 0, 25497733.5
            6672927.5 0)))
        files:
          type: array
          items:
            $ref: '#/components/schemas/RoadMarkingPlanFile'
          readOnly: true
        device_type:
          type: string
          format: uuid
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        lifecycle:
          enum:
          - 3
          - 4
          - 5
          - 6
          type: integer
          description: |-
            Lifecycle of the device, which describes the activity status of the device.

            * `3` - Active
            * `4` - Temporarily active
            * `5` - Temporarily inactive
            * `6` - Inactive
        source_id:
          type: string
          nullable: true
          description: ID of the device in the source where this device was imported
            from.
          maxLength: 64
        source_name:
          type: string
          nullable: true
          description: Name of the source for where this device was imported from.
          maxLength: 254
        road_name:
          type: string
          nullable: true
          description: Name of the road this road marking is installed at.
          maxLength: 254
        lane_number:
          enum:
          - '11'
          - '21'
          - '31'
          - X2
          - X3
          - X4
          - X5
          - X6
          - X7
          - X8
          - X9
          - ''
          - null
          type: string
          nullable: true
          description: |-
            Describes which lane of the road this road marking affects.

            * `11` - Main lane
            * `21` - Main lane
            * `31` - Lane allowing traffic to both directions
            * `X2` - First left additional lane
            * `X3` - First right additional lane
            * `X4` - Second left additional lane
            * `X5` - Second right additional lane
            * `X6` - Third left additional lane
            * `X7` - Third right additional lane
            * `X8` - Fourth left additional lane
            * `X9` - Fourth right additional lane
        lane_type:
          enum:
          - '1'
          - '2'
          - '3'
          - '4'
          - '5'
          - '6'
          - '7'
          - '8'
          - '9'
          - '10'
          - '11'
          - '20'
          - '21'
          - '22'
          - ''
          - null
          type: string
          nullable: true
          description: |-
            The type of lane which this road marking affects.

            * `1` - Main lane
            * `2` - Fast lane
            * `3` - Turn right lane
            * `4` - Turn left lane
            * `5` - Auxiliary straight lane
            * `6` - Merge lane
            * `7` - Exit lane
            * `8` - Weaving lane
            * `9` - Public transport lane / taxi lane
            * `10` - Heavy vehicle lane
            * `11` - Reversible lane
            * `20` - Pedestrian and bike lane
            * `21` - Pedestrian lane
            * `22` - Bike lane
        location_specifier:
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - null
          type: integer
          nullable: true
          description: |-
            Specifies where the road marking is in relation to the lane.

            * `1` - Both sides of road
            * `2` - Right side of lane
            * `3` - Left side of lane
            * `4` - Both sides of lane
            * `5` - Middle of lane
            * `6` - Left side of lane or road
        line_direction:
          enum:
          - FORWARD
          - BACKWARD
          - ''
          - null
          type: string
          description: |-
            * `FORWARD` - Forward
            * `BACKWARD` - Backward
          nullable: true
        arrow_direction:
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - null
          type: integer
          nullable: true
          description: |-
            Direction of the arrow on the road.

            * `1` - Straight
            * `2` - Right
            * `3` - Right and straight
            * `4` - Left
            * `5` - Left and straight
            * `6` - Lane ends
            * `7` - Right and left
            * `8` - Straight, right and left
        value:
          type: string
          nullable: true
          title: Road Marking value
          description: Numeric value on the marking.
          maxLength: 254
        material:
          type: string
          nullable: true
          description: Describes the material that the device is made of.
          maxLength: 254
        color:
          enum:
          - 1
          - 2
          - null
          type: integer
          description: |-
            * `1` - White
            * `2` - Yellow
          nullable: true
        type_specifier:
          type: string
          nullable: true
          description: Additional device type codes specific to the local public authorities.
          maxLength: 254
        validity_period_start:
          type: string
          format: date
          nullable: true
          description: Date on which this road marking becomes active.
        validity_period_end:
          type: string
          format: date
          nullable: true
          description: Date after which this road marking becomes inactive.
        seasonal_validity_period_start:
          type: string
          format: date
          nullable: true
          description: Date on which this road marking becomes seasonally active.
        seasonal_validity_period_end:
          type: string
          format: date
          nullable: true
          description: Date after which this road marking becomes seasonally inactive.
        symbol:
          type: string
          nullable: true
          description: Symbol on the road marking.
          maxLength: 254
        size:
          type: string
          nullable: true
          description: Size of the road marking.
          maxLength: 254
        length:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: Length of the road marking in centimeters.
        width:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: Width of the road marking in centimeters.
        is_raised:
          type: boolean
          nullable: true
        is_grinded:
          type: boolean
          nullable: true
        additional_info:
          type: string
          nullable: true
        amount:
          type: string
          nullable: true
          maxLength: 254
        created_by:
          type: string
          format: uuid
          readOnly: true
          nullable: true
        updated_by:
          type: string
          format: uuid
          readOnly: true
          nullable: true
        owner:
          type: string
          format: uuid
          description: Owner who orders and is responsible for the maintenance of
            the device.
        responsible_entity:
          type: string
          format: uuid
          nullable: true
          description: Organization or project that this device is assigned to.
        traffic_sign_plan:
          type: string
          format: uuid
          nullable: true
          description: Traffic Sign related to this road marking.
        plan:
          type: string
          format: uuid
          nullable: true
          description: Plan which this road marking plan is a part of.
      required:
      - created_at
      - created_by
      - files
      - id
      - is_replaced
      - location
      - owner
      - replaced_by
      - replaces
      - updated_at
      - updated_by
    RoadMarkingReal:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        location:
          type: string
          format: EWKT
          example: SRID=3879;MULTIPOLYGON Z (((25497733.5 6672927.5 0, 25497946.5
            6673032.5 0, 25498653.5 6673034.5 0, 25498987.5 6672708.5 0, 25498314.5
            6672170.5 0, 25497651.5 6672629.5 0, 25497646.5 6672775.5 0, 25497733.5
            6672927.5 0)))
        files:
          type: array
          items:
            $ref: '#/components/schemas/RoadMarkingRealFile'
          readOnly: true
        device_type:
          type: string
          format: uuid
          nullable: true
        operations:
          type: array
          items:
            $ref: '#/components/schemas/RoadMarkingRealOperation'
          readOnly: true
        plan_decision_id:
          type: string
          description: Year and verdict section separated with a dash
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        lifecycle:
          enum:
          - 3
          - 4
          - 5
          - 6
          type: integer
          description: |-
            Lifecycle of the device, which describes the activity status of the device.

            * `3` - Active
            * `4` - Temporarily active
            * `5` - Temporarily inactive
            * `6` - Inactive
        installation_date:
          type: string
          format: date
          nullable: true
          description: Date on which this device was installed on.
        installation_status:
          enum:
          - IN_USE
          - COVERED
          - FALLEN
          - MISSING
          - OTHER
          - ''
          - null
          type: string
          nullable: true
          description: |-
            Describes this devices installation status.

            * `IN_USE` - In use
            * `COVERED` - Covered
            * `FALLEN` - Fallen
            * `MISSING` - Missing
            * `OTHER` - Other
        condition:
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - null
          type: integer
          nullable: true
          description: |-
            Describes the condition of this device.

            * `1` - Very bad
            * `2` - Bad
            * `3` - Average
            * `4` - Good
            * `5` - Very good
        source_id:
          type: string
          nullable: true
          description: ID of the device in the source where this device was imported
            from.
          maxLength: 64
        source_name:
          type: string
          nullable: true
          description: Name of the source for where this device was imported from.
          maxLength: 254
        road_name:
          type: string
          nullable: true
          description: Name of the road this road marking is installed at.
          maxLength: 254
        lane_number:
          enum:
          - '11'
          - '21'
          - '31'
          - X2
          - X3
          - X4
          - X5
          - X6
          - X7
          - X8
          - X9
          - ''
          - null
          type: string
          nullable: true
          description: |-
            Describes which lane of the road this road marking affects.

            * `11` - Main lane
            * `21` - Main lane
            * `31` - Lane allowing traffic to both directions
            * `X2` - First left additional lane
            * `X3` - First right additional lane
            * `X4` - Second left additional lane
            * `X5` - Second right additional lane
            * `X6` - Third left additional lane
            * `X7` - Third right additional lane
            * `X8` - Fourth left additional lane
            * `X9` - Fourth right additional lane
        lane_type:
          enum:
          - '1'
          - '2'
          - '3'
          - '4'
          - '5'
          - '6'
          - '7'
          - '8'
          - '9'
          - '10'
          - '11'
          - '20'
          - '21'
          - '22'
          - ''
          - null
          type: string
          nullable: true
          description: |-
            The type of lane which this road marking affects.

            * `1` - Main lane
            * `2` - Fast lane
            * `3` - Turn right lane
            * `4` - Turn left lane
            * `5` - Auxiliary straight lane
            * `6` - Merge lane
            * `7` - Exit lane
            * `8` - Weaving lane
            * `9` - Public transport lane / taxi lane
            * `10` - Heavy vehicle lane
            * `11` - Reversible lane
            * `20` - Pedestrian and bike lane
            * `21` - Pedestrian lane
            * `22` - Bike lane
        location_specifier:
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - null
          type: integer
          nullable: true
          description: |-
            Specifies where the road marking is in relation to the lane.

            * `1` - Both sides of road
            * `2` - Right side of lane
            * `3` - Left side of lane
            * `4` - Both sides of lane
            * `5` - Middle of lane
            * `6` - Left side of lane or road
        line_direction:
          enum:
          - FORWARD
          - BACKWARD
          - ''
          - null
          type: string
          description: |-
            * `FORWARD` - Forward
            * `BACKWARD` - Backward
          nullable: true
        arrow_direction:
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - null
          type: integer
          nullable: true
          description: |-
            Direction of the arrow on the road.

            * `1` - Straight
            * `2` - Right
            * `3` - Right and straight
            * `4` - Left
            * `5` - Left and straight
            * `6` - Lane ends
            * `7` - Right and left
            * `8` - Straight, right and left
        value:
          type: string
          nullable: true
          title: Road Marking value
          description: Numeric value on the marking.
          maxLength: 254
        material:
          type: string
          nullable: true
          description: Describes the material that the device is made of.
          maxLength: 254
        color:
          enum:
          - 1
          - 2
          - null
          type: integer
          description: |-
            * `1` - White
            * `2` - Yellow
          nullable: true
        type_specifier:
          type: string
          nullable: true
          description: Additional device type codes specific to the local public authorities.
          maxLength: 254
        validity_period_start:
          type: string
          format: date
          nullable: true
          description: Date on which this road marking becomes active.
        validity_period_end:
          type: string
          format: date
          nullable: true
          description: Date after which this road marking becomes inactive.
        seasonal_validity_period_start:
          type: string
          format: date
          nullable: true
          description: Date on which this road marking becomes seasonally active.
        seasonal_validity_period_end:
          type: string
          format: date
          nullable: true
          description: Date after which this road marking becomes seasonally inactive.
        symbol:
          type: string
          nullable: true
          description: Symbol on the road marking.
          maxLength: 254
        size:
          type: string
          nullable: true
          description: Size of the road marking.
          maxLength: 254
        length:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: Length of the road marking in centimeters.
        width:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: Width of the road marking in centimeters.
        is_raised:
          type: boolean
          nullable: true
        is_grinded:
          type: boolean
          nullable: true
        additional_info:
          type: string
          nullable: true
        amount:
          type: string
          nullable: true
          maxLength: 254
        missing_traffic_sign_real_txt:
          type: string
          nullable: true
          description: Free-form text description of the traffic sign the road marking
            is connected to, if the road marking doesn't have a traffic sign real
            id.
          maxLength: 254
        created_by:
          type: string
          format: uuid
          readOnly: true
          nullable: true
        updated_by:
          type: string
          format: uuid
          readOnly: true
          nullable: true
        owner:
          type: string
          format: uuid
          description: Owner who orders and is responsible for the maintenance of
            the device.
        responsible_entity:
          type: string
          format: uuid
          nullable: true
          description: Organization or project that this device is assigned to.
        road_marking_plan:
          type: string
          format: uuid
          nullable: true
          description: The plan for this road marking.
        traffic_sign_real:
          type: string
          format: uuid
          nullable: true
          description: Traffic Sign related to this road marking.
      required:
      - created_at
      - created_by
      - files
      - id
      - location
      - operations
      - owner
      - plan_decision_id
      - updated_at
      - updated_by
    RoadMarkingRealFile:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        file:
          type: string
          format: uri
        road_marking_real:
          type: string
          format: uuid
      required:
      - file
      - id
      - road_marking_real
    RoadMarkingRealFileCreateResponse:
      type: object
      properties:
        files:
          type: array
          items:
            $ref: '#/components/schemas/RoadMarkingRealFile'
      required:
      - files
    RoadMarkingRealFileRequest:
      type: object
      properties:
        file:
          type: string
          format: binary
        road_marking_real:
          type: string
          format: uuid
      required:
      - file
      - road_marking_real
    RoadMarkingRealOperation:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        operation_type:
          type: string
          readOnly: true
        operation_type_id:
          type: integer
        operation_date:
          type: string
          format: date
      required:
      - id
      - operation_date
      - operation_type
      - operation_type_id
    RoadMarkingRealOperationRequest:
      type: object
      properties:
        operation_type_id:
          type: integer
        operation_date:
          type: string
          format: date
      required:
      - operation_date
      - operation_type_id
    RoadMarkingRealRequest:
      type: object
      properties:
        location:
          type: string
          format: EWKT
          example: SRID=3879;MULTIPOLYGON Z (((25497733.5 6672927.5 0, 25497946.5
            6673032.5 0, 25498653.5 6673034.5 0, 25498987.5 6672708.5 0, 25498314.5
            6672170.5 0, 25497651.5 6672629.5 0, 25497646.5 6672775.5 0, 25497733.5
            6672927.5 0)))
          minLength: 1
        device_type:
          type: string
          format: uuid
          nullable: true
        lifecycle:
          enum:
          - 3
          - 4
          - 5
          - 6
          type: integer
          description: |-
            Lifecycle of the device, which describes the activity status of the device.

            * `3` - Active
            * `4` - Temporarily active
            * `5` - Temporarily inactive
            * `6` - Inactive
        installation_date:
          type: string
          format: date
          nullable: true
          description: Date on which this device was installed on.
        installation_status:
          enum:
          - IN_USE
          - COVERED
          - FALLEN
          - MISSING
          - OTHER
          - ''
          - null
          type: string
          nullable: true
          description: |-
            Describes this devices installation status.

            * `IN_USE` - In use
            * `COVERED` - Covered
            * `FALLEN` - Fallen
            * `MISSING` - Missing
            * `OTHER` - Other
        condition:
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - null
          type: integer
          nullable: true
          description: |-
            Describes the condition of this device.

            * `1` - Very bad
            * `2` - Bad
            * `3` - Average
            * `4` - Good
            * `5` - Very good
        source_id:
          type: string
          nullable: true
          description: ID of the device in the source where this device was imported
            from.
          maxLength: 64
        source_name:
          type: string
          nullable: true
          description: Name of the source for where this device was imported from.
          maxLength: 254
        road_name:
          type: string
          nullable: true
          description: Name of the road this road marking is installed at.
          maxLength: 254
        lane_number:
          enum:
          - '11'
          - '21'
          - '31'
          - X2
          - X3
          - X4
          - X5
          - X6
          - X7
          - X8
          - X9
          - ''
          - null
          type: string
          nullable: true
          description: |-
            Describes which lane of the road this road marking affects.

            * `11` - Main lane
            * `21` - Main lane
            * `31` - Lane allowing traffic to both directions
            * `X2` - First left additional lane
            * `X3` - First right additional lane
            * `X4` - Second left additional lane
            * `X5` - Second right additional lane
            * `X6` - Third left additional lane
            * `X7` - Third right additional lane
            * `X8` - Fourth left additional lane
            * `X9` - Fourth right additional lane
        lane_type:
          enum:
          - '1'
          - '2'
          - '3'
          - '4'
          - '5'
          - '6'
          - '7'
          - '8'
          - '9'
          - '10'
          - '11'
          - '20'
          - '21'
          - '22'
          - ''
          - null
          type: string
          nullable: true
          description: |-
            The type of lane which this road marking affects.

            * `1` - Main lane
            * `2` - Fast lane
            * `3` - Turn right lane
            * `4` - Turn left lane
            * `5` - Auxiliary straight lane
            * `6` - Merge lane
            * `7` - Exit lane
            * `8` - Weaving lane
            * `9` - Public transport lane / taxi lane
            * `10` - Heavy vehicle lane
            * `11` - Reversible lane
            * `20` - Pedestrian and bike lane
            * `21` - Pedestrian lane
            * `22` - Bike lane
        location_specifier:
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - null
          type: integer
          nullable: true
          description: |-
            Specifies where the road marking is in relation to the lane.

            * `1` - Both sides of road
            * `2` - Right side of lane
            * `3` - Left side of lane
            * `4` - Both sides of lane
            * `5` - Middle of lane
            * `6` - Left side of lane or road
        line_direction:
          enum:
          - FORWARD
          - BACKWARD
          - ''
          - null
          type: string
          description: |-
            * `FORWARD` - Forward
            * `BACKWARD` - Backward
          nullable: true
        arrow_direction:
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - null
          type: integer
          nullable: true
          description: |-
            Direction of the arrow on the road.

            * `1` - Straight
            * `2` - Right
            * `3` - Right and straight
            * `4` - Left
            * `5` - Left and straight
            * `6` - Lane ends
            * `7` - Right and left
            * `8` - Straight, right and left
        value:
          type: string
          nullable: true
          title: Road Marking value
          description: Numeric value on the marking.
          maxLength: 254
        material:
          type: string
          nullable: true
          description: Describes the material that the device is made of.
          maxLength: 254
        color:
          enum:
          - 1
          - 2
          - null
          type: integer
          description: |-
            * `1` - White
            * `2` - Yellow
          nullable: true
        type_specifier:
          type: string
          nullable: true
          description: Additional device type codes specific to the local public authorities.
          maxLength: 254
        validity_period_start:
          type: string
          format: date
          nullable: true
          description: Date on which this road marking becomes active.
        validity_period_end:
          type: string
          format: date
          nullable: true
          description: Date after which this road marking becomes inactive.
        seasonal_validity_period_start:
          type: string
          format: date
          nullable: true
          description: Date on which this road marking becomes seasonally active.
        seasonal_validity_period_end:
          type: string
          format: date
          nullable: true
          description: Date after which this road marking becomes seasonally inactive.
        symbol:
          type: string
          nullable: true
          description: Symbol on the road marking.
          maxLength: 254
        size:
          type: string
          nullable: true
          description: Size of the road marking.
          maxLength: 254
        length:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: Length of the road marking in centimeters.
        width:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: Width of the road marking in centimeters.
        is_raised:
          type: boolean
          nullable: true
        is_grinded:
          type: boolean
          nullable: true
        additional_info:
          type: string
          nullable: true
        amount:
          type: string
          nullable: true
          maxLength: 254
        missing_traffic_sign_real_txt:
          type: string
          nullable: true
          description: Free-form text description of the traffic sign the road marking
            is connected to, if the road marking doesn't have a traffic sign real
            id.
          maxLength: 254
        owner:
          type: string
          format: uuid
          description: Owner who orders and is responsible for the maintenance of
            the device.
        responsible_entity:
          type: string
          format: uuid
          nullable: true
          description: Organization or project that this device is assigned to.
        road_marking_plan:
          type: string
          format: uuid
          nullable: true
          description: The plan for this road marking.
        traffic_sign_real:
          type: string
          format: uuid
          nullable: true
          description: Traffic Sign related to this road marking.
      required:
      - location
      - owner
    SignpostPlanFile:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        file:
          type: string
          format: uri
        signpost_plan:
          type: string
          format: uuid
      required:
      - file
      - id
      - signpost_plan
    SignpostPlanFileCreateResponse:
      type: object
      properties:
        files:
          type: array
          items:
            $ref: '#/components/schemas/SignpostPlanFile'
      required:
      - files
    SignpostPlanInput:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        replaces:
          type: string
          format: uuid
          nullable: true
          description: ID to the device plan that this device is replacing
        location:
          type: string
          format: EWKT
          example: SRID=3879;POINT Z (25496751.5 6673129.5 1.5)
        device_type:
          type: string
          format: uuid
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        lifecycle:
          enum:
          - 3
          - 4
          - 5
          - 6
          type: integer
          description: |-
            Lifecycle of the device, which describes the activity status of the device.

            * `3` - Active
            * `4` - Temporarily active
            * `5` - Temporarily inactive
            * `6` - Inactive
        source_id:
          type: string
          nullable: true
          description: ID of the device in the source where this device was imported
            from.
          maxLength: 64
        source_name:
          type: string
          nullable: true
          description: Name of the source for where this device was imported from.
          maxLength: 254
        road_name:
          type: string
          nullable: true
          description: Name of the road this sign is installed at.
          maxLength: 254
        lane_number:
          enum:
          - '11'
          - '21'
          - '31'
          - X2
          - X3
          - X4
          - X5
          - X6
          - X7
          - X8
          - X9
          - ''
          - null
          type: string
          nullable: true
          description: |-
            Describes which lane of the road this sign affects.

            * `11` - Main lane
            * `21` - Main lane
            * `31` - Lane allowing traffic to both directions
            * `X2` - First left additional lane
            * `X3` - First right additional lane
            * `X4` - Second left additional lane
            * `X5` - Second right additional lane
            * `X6` - Third left additional lane
            * `X7` - Third right additional lane
            * `X8` - Fourth left additional lane
            * `X9` - Fourth right additional lane
        lane_type:
          enum:
          - '1'
          - '2'
          - '3'
          - '4'
          - '5'
          - '6'
          - '7'
          - '8'
          - '9'
          - '10'
          - '11'
          - '20'
          - '21'
          - '22'
          - ''
          - null
          type: string
          nullable: true
          description: |-
            The type of lane which this sign affects.

            * `1` - Main lane
            * `2` - Fast lane
            * `3` - Turn right lane
            * `4` - Turn left lane
            * `5` - Auxiliary straight lane
            * `6` - Merge lane
            * `7` - Exit lane
            * `8` - Weaving lane
            * `9` - Public transport lane / taxi lane
            * `10` - Heavy vehicle lane
            * `11` - Reversible lane
            * `20` - Pedestrian and bike lane
            * `21` - Pedestrian lane
            * `22` - Bike lane
        direction:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: The direction a person is facing when looking perpendicular
            to the sign. The value is in degrees from 0 to 359, where 0 is north,
            90 is east, etc.
        height:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          nullable: true
          description: The height of the sign from the ground, measured from the bottom
            in centimeters.
        value:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
          title: Signpost value
          description: Numeric value on the sign.
        txt:
          type: string
          nullable: true
          title: Signpost txt
          description: Text written on the device.
          maxLength: 254
        size:
          enum:
          - S
          - M
          - L
          - ''
          - null
          type: string
          description: |-
            * `S` - Small
            * `M` - Medium
            * `L` - Large
          nullable: true
        reflection_class:
          enum:
          - R1
          - R2
          - R3
          - ''
          - null
          type: string
          description: |-
            * `R1` - r1
            * `R2` - r2
            * `R3` - r3
          nullable: true
          title: Reflection
        attachment_class:
          type: string
          nullable: true
          description: The attachment class of the sign according to the standard
            SFS-EN 12899-1.The possible values are P1, P2 and P3.
          maxLength: 254
        target_id:
          type: string
          nullable: true
          description: The id number of the target the sign is guiding to (if available).
          maxLength: 254
        target_txt:
          type: string
          nullable: true
          description: Free-form text description of the target the sign is guiding
            to, if the target has no id number.
          maxLength: 254
        electric_maintainer:
          type: string
          nullable: true
          description: Organization in charge of electric maintenance of the device.
          maxLength: 254
        location_specifier:
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - null
          type: integer
          nullable: true
          description: |-
            Specifies where the sign is in relation to the road.

            * `1` - Right side
            * `2` - Left side
            * `3` - Above
            * `4` - Middle
            * `5` - Vertical
            * `6` - Outside
        validity_period_start:
          type: string
          format: date
          nullable: true
          description: Date on which this sign becomes active.
        validity_period_end:
          type: string
          format: date
          nullable: true
          description: Date after which this sign becomes inactive.
        seasonal_validity_period_start:
          type: string
          format: date
          nullable: true
          description: Date on which this sign becomes seasonally active.
        seasonal_validity_period_end:
          type: string
          format: date
          nullable: true
          description: Date after which this sign becomes seasonally inactive.
        created_by:
          type: string
          format: uuid
          readOnly: true
          nullable: true
        updated_by:
          type: string
          format: uuid
          readOnly: true
          nullable: true
        owner:
          type: string
          format: uuid
          description: Owner who orders and is responsible for the maintenance of
            the device.
        responsible_entity:
          type: string
          format: uuid
          nullable: true
          description: Organization or project that this device is assigned to.
        mount_plan:
          type: string
          format: uuid
          nullable: true
          description: Mount that this sign is mounted on.
        parent:
          type: string
          format: uuid
          nullable: true
          title: Parent Signpost Plan
          description: Signpost inside which this device is located.
        plan:
          type: string
          format: uuid
          nullable: true
          description: Plan which this signpost plan is a part of.
      required:
      - created_at
      - created_by
      - id
      - location
      - owner
      - updated_at
      - updated_by
    SignpostPlanInputRequest:
      type: object
      properties:
        replaces:
          type: string
          format: uuid
          nullable: true
          description: ID to the device plan that this device is replacing
        location:
          type: string
          format: EWKT
          example: SRID=3879;POINT Z (25496751.5 6673129.5 1.5)
          minLength: 1
        device_type:
          type: string
          format: uuid
          nullable: true
        lifecycle:
          enum:
          - 3
          - 4
          - 5
          - 6
          type: integer
          description: |-
            Lifecycle of the device, which describes the activity status of the device.

            * `3` - Active
            * `4` - Temporarily active
            * `5` - Temporarily inactive
            * `6` - Inactive
        source_id:
          type: string
          nullable: true
          description: ID of the device in the source where this device was imported
            from.
          maxLength: 64
        source_name:
          type: string
          nullable: true
          description: Name of the source for where this device was imported from.
          maxLength: 254
        road_name:
          type: string
          nullable: true
          description: Name of the road this sign is installed at.
          maxLength: 254
        lane_number:
          enum:
          - '11'
          - '21'
          - '31'
          - X2
          - X3
          - X4
          - X5
          - X6
          - X7
          - X8
          - X9
          - ''
          - null
          type: string
          nullable: true
          description: |-
            Describes which lane of the road this sign affects.

            * `11` - Main lane
            * `21` - Main lane
            * `31` - Lane allowing traffic to both directions
            * `X2` - First left additional lane
            * `X3` - First right additional lane
            * `X4` - Second left additional lane
            * `X5` - Second right additional lane
            * `X6` - Third left additional lane
            * `X7` - Third right additional lane
            * `X8` - Fourth left additional lane
            * `X9` - Fourth right additional lane
        lane_type:
          enum:
          - '1'
          - '2'
          - '3'
          - '4'
          - '5'
          - '6'
          - '7'
          - '8'
          - '9'
          - '10'
          - '11'
          - '20'
          - '21'
          - '22'
          - ''
          - null
          type: string
          nullable: true
          description: |-
            The type of lane which this sign affects.

            * `1` - Main lane
            * `2` - Fast lane
            * `3` - Turn right lane
            * `4` - Turn left lane
            * `5` - Auxiliary straight lane
            * `6` - Merge lane
            * `7` - Exit lane
            * `8` - Weaving lane
            * `9` - Public transport lane / taxi lane
            * `10` - Heavy vehicle lane
            * `11` - Reversible lane
            * `20` - Pedestrian and bike lane
            * `21` - Pedestrian lane
            * `22` - Bike lane
        direction:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: The direction a person is facing when looking perpendicular
            to the sign. The value is in degrees from 0 to 359, where 0 is north,
            90 is east, etc.
        height:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          nullable: true
          description: The height of the sign from the ground, measured from the bottom
            in centimeters.
        value:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
          title: Signpost value
          description: Numeric value on the sign.
        txt:
          type: string
          nullable: true
          title: Signpost txt
          description: Text written on the device.
          maxLength: 254
        size:
          enum:
          - S
          - M
          - L
          - ''
          - null
          type: string
          description: |-
            * `S` - Small
            * `M` - Medium
            * `L` - Large
          nullable: true
        reflection_class:
          enum:
          - R1
          - R2
          - R3
          - ''
          - null
          type: string
          description: |-
            * `R1` - r1
            * `R2` - r2
            * `R3` - r3
          nullable: true
          title: Reflection
        attachment_class:
          type: string
          nullable: true
          description: The attachment class of the sign according to the standard
            SFS-EN 12899-1.The possible values are P1, P2 and P3.
          maxLength: 254
        target_id:
          type: string
          nullable: true
          description: The id number of the target the sign is guiding to (if available).
          maxLength: 254
        target_txt:
          type: string
          nullable: true
          description: Free-form text description of the target the sign is guiding
            to, if the target has no id number.
          maxLength: 254
        electric_maintainer:
          type: string
          nullable: true
          description: Organization in charge of electric maintenance of the device.
          maxLength: 254
        location_specifier:
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - null
          type: integer
          nullable: true
          description: |-
            Specifies where the sign is in relation to the road.

            * `1` - Right side
            * `2` - Left side
            * `3` - Above
            * `4` - Middle
            * `5` - Vertical
            * `6` - Outside
        validity_period_start:
          type: string
          format: date
          nullable: true
          description: Date on which this sign becomes active.
        validity_period_end:
          type: string
          format: date
          nullable: true
          description: Date after which this sign becomes inactive.
        seasonal_validity_period_start:
          type: string
          format: date
          nullable: true
          description: Date on which this sign becomes seasonally active.
        seasonal_validity_period_end:
          type: string
          format: date
          nullable: true
          description: Date after which this sign becomes seasonally inactive.
        owner:
          type: string
          format: uuid
          description: Owner who orders and is responsible for the maintenance of
            the device.
        responsible_entity:
          type: string
          format: uuid
          nullable: true
          description: Organization or project that this device is assigned to.
        mount_plan:
          type: string
          format: uuid
          nullable: true
          description: Mount that this sign is mounted on.
        parent:
          type: string
          format: uuid
          nullable: true
          title: Parent Signpost Plan
          description: Signpost inside which this device is located.
        plan:
          type: string
          format: uuid
          nullable: true
          description: Plan which this signpost plan is a part of.
      required:
      - location
      - owner
    SignpostPlanOutput:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        replaces:
          type: string
          format: uuid
          nullable: true
          description: ID of the device plan that this device plan has replaced
          readOnly: true
        replaced_by:
          type: string
          format: uuid
          nullable: true
          description: ID of the device plan that has replaced this device plan
          readOnly: true
        is_replaced:
          type: boolean
          description: Whether this device plan has been replaced by another device
            plan
          readOnly: true
        location:
          type: string
          format: EWKT
          example: SRID=3879;POINT Z (25496751.5 6673129.5 1.5)
        files:
          type: array
          items:
            $ref: '#/components/schemas/SignpostPlanFile'
          readOnly: true
        device_type:
          type: string
          format: uuid
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        lifecycle:
          enum:
          - 3
          - 4
          - 5
          - 6
          type: integer
          description: |-
            Lifecycle of the device, which describes the activity status of the device.

            * `3` - Active
            * `4` - Temporarily active
            * `5` - Temporarily inactive
            * `6` - Inactive
        source_id:
          type: string
          nullable: true
          description: ID of the device in the source where this device was imported
            from.
          maxLength: 64
        source_name:
          type: string
          nullable: true
          description: Name of the source for where this device was imported from.
          maxLength: 254
        road_name:
          type: string
          nullable: true
          description: Name of the road this sign is installed at.
          maxLength: 254
        lane_number:
          enum:
          - '11'
          - '21'
          - '31'
          - X2
          - X3
          - X4
          - X5
          - X6
          - X7
          - X8
          - X9
          - ''
          - null
          type: string
          nullable: true
          description: |-
            Describes which lane of the road this sign affects.

            * `11` - Main lane
            * `21` - Main lane
            * `31` - Lane allowing traffic to both directions
            * `X2` - First left additional lane
            * `X3` - First right additional lane
            * `X4` - Second left additional lane
            * `X5` - Second right additional lane
            * `X6` - Third left additional lane
            * `X7` - Third right additional lane
            * `X8` - Fourth left additional lane
            * `X9` - Fourth right additional lane
        lane_type:
          enum:
          - '1'
          - '2'
          - '3'
          - '4'
          - '5'
          - '6'
          - '7'
          - '8'
          - '9'
          - '10'
          - '11'
          - '20'
          - '21'
          - '22'
          - ''
          - null
          type: string
          nullable: true
          description: |-
            The type of lane which this sign affects.

            * `1` - Main lane
            * `2` - Fast lane
            * `3` - Turn right lane
            * `4` - Turn left lane
            * `5` - Auxiliary straight lane
            * `6` - Merge lane
            * `7` - Exit lane
            * `8` - Weaving lane
            * `9` - Public transport lane / taxi lane
            * `10` - Heavy vehicle lane
            * `11` - Reversible lane
            * `20` - Pedestrian and bike lane
            * `21` - Pedestrian lane
            * `22` - Bike lane
        direction:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: The direction a person is facing when looking perpendicular
            to the sign. The value is in degrees from 0 to 359, where 0 is north,
            90 is east, etc.
        height:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          nullable: true
          description: The height of the sign from the ground, measured from the bottom
            in centimeters.
        value:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
          title: Signpost value
          description: Numeric value on the sign.
        txt:
          type: string
          nullable: true
          title: Signpost txt
          description: Text written on the device.
          maxLength: 254
        size:
          enum:
          - S
          - M
          - L
          - ''
          - null
          type: string
          description: |-
            * `S` - Small
            * `M` - Medium
            * `L` - Large
          nullable: true
        reflection_class:
          enum:
          - R1
          - R2
          - R3
          - ''
          - null
          type: string
          description: |-
            * `R1` - r1
            * `R2` - r2
            * `R3` - r3
          nullable: true
          title: Reflection
        attachment_class:
          type: string
          nullable: true
          description: The attachment class of the sign according to the standard
            SFS-EN 12899-1.The possible values are P1, P2 and P3.
          maxLength: 254
        target_id:
          type: string
          nullable: true
          description: The id number of the target the sign is guiding to (if available).
          maxLength: 254
        target_txt:
          type: string
          nullable: true
          description: Free-form text description of the target the sign is guiding
            to, if the target has no id number.
          maxLength: 254
        electric_maintainer:
          type: string
          nullable: true
          description: Organization in charge of electric maintenance of the device.
          maxLength: 254
        location_specifier:
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - null
          type: integer
          nullable: true
          description: |-
            Specifies where the sign is in relation to the road.

            * `1` - Right side
            * `2` - Left side
            * `3` - Above
            * `4` - Middle
            * `5` - Vertical
            * `6` - Outside
        validity_period_start:
          type: string
          format: date
          nullable: true
          description: Date on which this sign becomes active.
        validity_period_end:
          type: string
          format: date
          nullable: true
          description: Date after which this sign becomes inactive.
        seasonal_validity_period_start:
          type: string
          format: date
          nullable: true
          description: Date on which this sign becomes seasonally active.
        seasonal_validity_period_end:
          type: string
          format: date
          nullable: true
          description: Date after which this sign becomes seasonally inactive.
        created_by:
          type: string
          format: uuid
          readOnly: true
          nullable: true
        updated_by:
          type: string
          format: uuid
          readOnly: true
          nullable: true
        owner:
          type: string
          format: uuid
          description: Owner who orders and is responsible for the maintenance of
            the device.
        responsible_entity:
          type: string
          format: uuid
          nullable: true
          description: Organization or project that this device is assigned to.
        mount_plan:
          type: string
          format: uuid
          nullable: true
          description: Mount that this sign is mounted on.
        parent:
          type: string
          format: uuid
          nullable: true
          title: Parent Signpost Plan
          description: Signpost inside which this device is located.
        plan:
          type: string
          format: uuid
          nullable: true
          description: Plan which this signpost plan is a part of.
      required:
      - created_at
      - created_by
      - files
      - id
      - is_replaced
      - location
      - owner
      - replaced_by
      - replaces
      - updated_at
      - updated_by
    SignpostReal:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        location:
          type: string
          format: EWKT
          example: SRID=3879;POINT Z (25496751.5 6673129.5 1.5)
        files:
          type: array
          items:
            $ref: '#/components/schemas/SignpostRealFile'
          readOnly: true
        device_type:
          type: string
          format: uuid
          nullable: true
        operations:
          type: array
          items:
            $ref: '#/components/schemas/SignpostRealOperation'
          readOnly: true
        plan_decision_id:
          type: string
          description: Year and verdict section separated with a dash
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        lifecycle:
          enum:
          - 3
          - 4
          - 5
          - 6
          type: integer
          description: |-
            Lifecycle of the device, which describes the activity status of the device.

            * `3` - Active
            * `4` - Temporarily active
            * `5` - Temporarily inactive
            * `6` - Inactive
        installation_date:
          type: string
          format: date
          nullable: true
          description: Date on which this device was installed on.
        installation_status:
          enum:
          - IN_USE
          - COVERED
          - FALLEN
          - MISSING
          - OTHER
          - ''
          - null
          type: string
          nullable: true
          description: |-
            Describes this devices installation status.

            * `IN_USE` - In use
            * `COVERED` - Covered
            * `FALLEN` - Fallen
            * `MISSING` - Missing
            * `OTHER` - Other
        condition:
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - null
          type: integer
          nullable: true
          description: |-
            Describes the condition of this device.

            * `1` - Very bad
            * `2` - Bad
            * `3` - Average
            * `4` - Good
            * `5` - Very good
        source_id:
          type: string
          nullable: true
          description: ID of the device in the source where this device was imported
            from.
          maxLength: 64
        source_name:
          type: string
          nullable: true
          description: Name of the source for where this device was imported from.
          maxLength: 254
        road_name:
          type: string
          nullable: true
          description: Name of the road this sign is installed at.
          maxLength: 254
        lane_number:
          enum:
          - '11'
          - '21'
          - '31'
          - X2
          - X3
          - X4
          - X5
          - X6
          - X7
          - X8
          - X9
          - ''
          - null
          type: string
          nullable: true
          description: |-
            Describes which lane of the road this sign affects.

            * `11` - Main lane
            * `21` - Main lane
            * `31` - Lane allowing traffic to both directions
            * `X2` - First left additional lane
            * `X3` - First right additional lane
            * `X4` - Second left additional lane
            * `X5` - Second right additional lane
            * `X6` - Third left additional lane
            * `X7` - Third right additional lane
            * `X8` - Fourth left additional lane
            * `X9` - Fourth right additional lane
        lane_type:
          enum:
          - '1'
          - '2'
          - '3'
          - '4'
          - '5'
          - '6'
          - '7'
          - '8'
          - '9'
          - '10'
          - '11'
          - '20'
          - '21'
          - '22'
          - ''
          - null
          type: string
          nullable: true
          description: |-
            The type of lane which this sign affects.

            * `1` - Main lane
            * `2` - Fast lane
            * `3` - Turn right lane
            * `4` - Turn left lane
            * `5` - Auxiliary straight lane
            * `6` - Merge lane
            * `7` - Exit lane
            * `8` - Weaving lane
            * `9` - Public transport lane / taxi lane
            * `10` - Heavy vehicle lane
            * `11` - Reversible lane
            * `20` - Pedestrian and bike lane
            * `21` - Pedestrian lane
            * `22` - Bike lane
        direction:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: The direction a person is facing when looking perpendicular
            to the sign. The value is in degrees from 0 to 359, where 0 is north,
            90 is east, etc.
        height:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          nullable: true
          description: The height of the sign from the ground, measured from the bottom
            in centimeters.
        value:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
          title: Signpost value
          description: Numeric value on the sign.
        txt:
          type: string
          nullable: true
          title: Signpost txt
          description: Text written on the device.
          maxLength: 254
        size:
          enum:
          - S
          - M
          - L
          - ''
          - null
          type: string
          description: |-
            * `S` - Small
            * `M` - Medium
            * `L` - Large
          nullable: true
        reflection_class:
          enum:
          - R1
          - R2
          - R3
          - ''
          - null
          type: string
          description: |-
            * `R1` - r1
            * `R2` - r2
            * `R3` - r3
          nullable: true
          title: Reflection
        attachment_class:
          type: string
          nullable: true
          description: The attachment class of the sign according to the standard
            SFS-EN 12899-1.The possible values are P1, P2 and P3.
          maxLength: 254
        target_id:
          type: string
          nullable: true
          description: The id number of the target the sign is guiding to (if available).
          maxLength: 254
        target_txt:
          type: string
          nullable: true
          description: Free-form text description of the target the sign is guiding
            to, if the target has no id number.
          maxLength: 254
        electric_maintainer:
          type: string
          nullable: true
          description: Organization in charge of electric maintenance of the device.
          maxLength: 254
        location_specifier:
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - null
          type: integer
          nullable: true
          description: |-
            Specifies where the sign is in relation to the road.

            * `1` - Right side
            * `2` - Left side
            * `3` - Above
            * `4` - Middle
            * `5` - Vertical
            * `6` - Outside
        validity_period_start:
          type: string
          format: date
          nullable: true
          description: Date on which this sign becomes active.
        validity_period_end:
          type: string
          format: date
          nullable: true
          description: Date after which this sign becomes inactive.
        seasonal_validity_period_start:
          type: string
          format: date
          nullable: true
          description: Date on which this sign becomes seasonally active.
        seasonal_validity_period_end:
          type: string
          format: date
          nullable: true
          description: Date after which this sign becomes seasonally inactive.
        material:
          type: string
          nullable: true
          description: Describes the material that the device is made of.
          maxLength: 254
        organization:
          type: string
          nullable: true
          description: The organization that installed the signpost.
          maxLength: 254
        manufacturer:
          type: string
          nullable: true
          description: Name of the organization that manufactured this device.
          maxLength: 254
        scanned_at:
          type: string
          format: date-time
          nullable: true
          description: Date and time on which this signpost was last scanned at.
        created_by:
          type: string
          format: uuid
          readOnly: true
          nullable: true
        updated_by:
          type: string
          format: uuid
          readOnly: true
          nullable: true
        owner:
          type: string
          format: uuid
          description: Owner who orders and is responsible for the maintenance of
            the device.
        responsible_entity:
          type: string
          format: uuid
          nullable: true
          description: Organization or project that this device is assigned to.
        signpost_plan:
          type: string
          format: uuid
          nullable: true
          description: The plan for this signpost.
        parent:
          type: string
          format: uuid
          nullable: true
          title: Parent Signpost Real
          description: Signpost inside which this device is located.
        mount_real:
          type: string
          format: uuid
          nullable: true
          description: Mount that this sign is mounted on.
      required:
      - created_at
      - created_by
      - files
      - id
      - location
      - operations
      - owner
      - plan_decision_id
      - updated_at
      - updated_by
    SignpostRealFile:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        file:
          type: string
          format: uri
        signpost_real:
          type: string
          format: uuid
      required:
      - file
      - id
      - signpost_real
    SignpostRealFileCreateResponse:
      type: object
      properties:
        files:
          type: array
          items:
            $ref: '#/components/schemas/SignpostRealFile'
      required:
      - files
    SignpostRealFileRequest:
      type: object
      properties:
        file:
          type: string
          format: binary
        signpost_real:
          type: string
          format: uuid
      required:
      - file
      - signpost_real
    SignpostRealOperation:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        operation_type:
          type: string
          readOnly: true
        operation_type_id:
          type: integer
        operation_date:
          type: string
          format: date
      required:
      - id
      - operation_date
      - operation_type
      - operation_type_id
    SignpostRealOperationRequest:
      type: object
      properties:
        operation_type_id:
          type: integer
        operation_date:
          type: string
          format: date
      required:
      - operation_date
      - operation_type_id
    SignpostRealRequest:
      type: object
      properties:
        location:
          type: string
          format: EWKT
          example: SRID=3879;POINT Z (25496751.5 6673129.5 1.5)
          minLength: 1
        device_type:
          type: string
          format: uuid
          nullable: true
        lifecycle:
          enum:
          - 3
          - 4
          - 5
          - 6
          type: integer
          description: |-
            Lifecycle of the device, which describes the activity status of the device.

            * `3` - Active
            * `4` - Temporarily active
            * `5` - Temporarily inactive
            * `6` - Inactive
        installation_date:
          type: string
          format: date
          nullable: true
          description: Date on which this device was installed on.
        installation_status:
          enum:
          - IN_USE
          - COVERED
          - FALLEN
          - MISSING
          - OTHER
          - ''
          - null
          type: string
          nullable: true
          description: |-
            Describes this devices installation status.

            * `IN_USE` - In use
            * `COVERED` - Covered
            * `FALLEN` - Fallen
            * `MISSING` - Missing
            * `OTHER` - Other
        condition:
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - null
          type: integer
          nullable: true
          description: |-
            Describes the condition of this device.

            * `1` - Very bad
            * `2` - Bad
            * `3` - Average
            * `4` - Good
            * `5` - Very good
        source_id:
          type: string
          nullable: true
          description: ID of the device in the source where this device was imported
            from.
          maxLength: 64
        source_name:
          type: string
          nullable: true
          description: Name of the source for where this device was imported from.
          maxLength: 254
        road_name:
          type: string
          nullable: true
          description: Name of the road this sign is installed at.
          maxLength: 254
        lane_number:
          enum:
          - '11'
          - '21'
          - '31'
          - X2
          - X3
          - X4
          - X5
          - X6
          - X7
          - X8
          - X9
          - ''
          - null
          type: string
          nullable: true
          description: |-
            Describes which lane of the road this sign affects.

            * `11` - Main lane
            * `21` - Main lane
            * `31` - Lane allowing traffic to both directions
            * `X2` - First left additional lane
            * `X3` - First right additional lane
            * `X4` - Second left additional lane
            * `X5` - Second right additional lane
            * `X6` - Third left additional lane
            * `X7` - Third right additional lane
            * `X8` - Fourth left additional lane
            * `X9` - Fourth right additional lane
        lane_type:
          enum:
          - '1'
          - '2'
          - '3'
          - '4'
          - '5'
          - '6'
          - '7'
          - '8'
          - '9'
          - '10'
          - '11'
          - '20'
          - '21'
          - '22'
          - ''
          - null
          type: string
          nullable: true
          description: |-
            The type of lane which this sign affects.

            * `1` - Main lane
            * `2` - Fast lane
            * `3` - Turn right lane
            * `4` - Turn left lane
            * `5` - Auxiliary straight lane
            * `6` - Merge lane
            * `7` - Exit lane
            * `8` - Weaving lane
            * `9` - Public transport lane / taxi lane
            * `10` - Heavy vehicle lane
            * `11` - Reversible lane
            * `20` - Pedestrian and bike lane
            * `21` - Pedestrian lane
            * `22` - Bike lane
        direction:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: The direction a person is facing when looking perpendicular
            to the sign. The value is in degrees from 0 to 359, where 0 is north,
            90 is east, etc.
        height:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          nullable: true
          description: The height of the sign from the ground, measured from the bottom
            in centimeters.
        value:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
          title: Signpost value
          description: Numeric value on the sign.
        txt:
          type: string
          nullable: true
          title: Signpost txt
          description: Text written on the device.
          maxLength: 254
        size:
          enum:
          - S
          - M
          - L
          - ''
          - null
          type: string
          description: |-
            * `S` - Small
            * `M` - Medium
            * `L` - Large
          nullable: true
        reflection_class:
          enum:
          - R1
          - R2
          - R3
          - ''
          - null
          type: string
          description: |-
            * `R1` - r1
            * `R2` - r2
            * `R3` - r3
          nullable: true
          title: Reflection
        attachment_class:
          type: string
          nullable: true
          description: The attachment class of the sign according to the standard
            SFS-EN 12899-1.The possible values are P1, P2 and P3.
          maxLength: 254
        target_id:
          type: string
          nullable: true
          description: The id number of the target the sign is guiding to (if available).
          maxLength: 254
        target_txt:
          type: string
          nullable: true
          description: Free-form text description of the target the sign is guiding
            to, if the target has no id number.
          maxLength: 254
        electric_maintainer:
          type: string
          nullable: true
          description: Organization in charge of electric maintenance of the device.
          maxLength: 254
        location_specifier:
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - null
          type: integer
          nullable: true
          description: |-
            Specifies where the sign is in relation to the road.

            * `1` - Right side
            * `2` - Left side
            * `3` - Above
            * `4` - Middle
            * `5` - Vertical
            * `6` - Outside
        validity_period_start:
          type: string
          format: date
          nullable: true
          description: Date on which this sign becomes active.
        validity_period_end:
          type: string
          format: date
          nullable: true
          description: Date after which this sign becomes inactive.
        seasonal_validity_period_start:
          type: string
          format: date
          nullable: true
          description: Date on which this sign becomes seasonally active.
        seasonal_validity_period_end:
          type: string
          format: date
          nullable: true
          description: Date after which this sign becomes seasonally inactive.
        material:
          type: string
          nullable: true
          description: Describes the material that the device is made of.
          maxLength: 254
        organization:
          type: string
          nullable: true
          description: The organization that installed the signpost.
          maxLength: 254
        manufacturer:
          type: string
          nullable: true
          description: Name of the organization that manufactured this device.
          maxLength: 254
        scanned_at:
          type: string
          format: date-time
          nullable: true
          description: Date and time on which this signpost was last scanned at.
        owner:
          type: string
          format: uuid
          description: Owner who orders and is responsible for the maintenance of
            the device.
        responsible_entity:
          type: string
          format: uuid
          nullable: true
          description: Organization or project that this device is assigned to.
        signpost_plan:
          type: string
          format: uuid
          nullable: true
          description: The plan for this signpost.
        parent:
          type: string
          format: uuid
          nullable: true
          title: Parent Signpost Real
          description: Signpost inside which this device is located.
        mount_real:
          type: string
          format: uuid
          nullable: true
          description: Mount that this sign is mounted on.
      required:
      - location
      - owner
    TrafficControlDeviceType:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        traffic_sign_type:
          allOf:
          - $ref: '#/components/schemas/TrafficSignType'
          readOnly: true
        icons:
          allOf:
          - $ref: '#/components/schemas/IconsType'
          readOnly: true
        code:
          type: string
          description: Standardised code of the device type.
          maxLength: 32
        icon:
          type: string
          maxLength: 100
        description:
          type: string
          nullable: true
          maxLength: 254
        value:
          type: string
          description: Numeric value on the sign.
          maxLength: 50
        unit:
          type: string
          description: Unit, in which the numeric value is in.
          maxLength: 50
        size:
          type: string
          maxLength: 50
        legacy_code:
          type: string
          nullable: true
          maxLength: 32
        legacy_description:
          type: string
          nullable: true
          maxLength: 254
        target_model:
          enum:
          - barrier
          - road_marking
          - signpost
          - traffic_light
          - traffic_sign
          - additional_sign
          - other
          - ''
          - null
          type: string
          nullable: true
          title: Target data model
          description: |-
            Defines which model this device type describes.

            * `barrier` - Barrier
            * `road_marking` - Road marking
            * `signpost` - Signpost
            * `traffic_light` - Traffic light
            * `traffic_sign` - Traffic sign
            * `additional_sign` - Additional sign
            * `other` - Other
        type:
          enum:
          - longitudinal
          - transverse
          - other
          - ''
          - null
          type: string
          description: |-
            * `longitudinal` - Longitudinal
            * `transverse` - Transverse
            * `other` - Other road marking
          nullable: true
        content_schema:
          type: object
          additionalProperties: {}
          nullable: true
      required:
      - code
      - icons
      - id
      - traffic_sign_type
    TrafficControlDeviceTypeRequest:
      type: object
      properties:
        code:
          type: string
          minLength: 1
          description: Standardised code of the device type.
          maxLength: 32
        icon:
          type: string
          maxLength: 100
        description:
          type: string
          nullable: true
          maxLength: 254
        value:
          type: string
          description: Numeric value on the sign.
          maxLength: 50
        unit:
          type: string
          description: Unit, in which the numeric value is in.
          maxLength: 50
        size:
          type: string
          maxLength: 50
        legacy_code:
          type: string
          nullable: true
          maxLength: 32
        legacy_description:
          type: string
          nullable: true
          maxLength: 254
        target_model:
          enum:
          - barrier
          - road_marking
          - signpost
          - traffic_light
          - traffic_sign
          - additional_sign
          - other
          - ''
          - null
          type: string
          nullable: true
          title: Target data model
          description: |-
            Defines which model this device type describes.

            * `barrier` - Barrier
            * `road_marking` - Road marking
            * `signpost` - Signpost
            * `traffic_light` - Traffic light
            * `traffic_sign` - Traffic sign
            * `additional_sign` - Additional sign
            * `other` - Other
        type:
          enum:
          - longitudinal
          - transverse
          - other
          - ''
          - null
          type: string
          description: |-
            * `longitudinal` - Longitudinal
            * `transverse` - Transverse
            * `other` - Other road marking
          nullable: true
        content_schema:
          type: object
          additionalProperties: {}
          nullable: true
      required:
      - code
    TrafficLightPlanFile:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        file:
          type: string
          format: uri
        traffic_light_plan:
          type: string
          format: uuid
      required:
      - file
      - id
      - traffic_light_plan
    TrafficLightPlanFileCreateResponse:
      type: object
      properties:
        files:
          type: array
          items:
            $ref: '#/components/schemas/TrafficLightPlanFile'
      required:
      - files
    TrafficLightPlanInput:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        replaces:
          type: string
          format: uuid
          nullable: true
          description: ID to the device plan that this device is replacing
        location:
          type: string
          format: EWKT
          example: SRID=3879;POINT Z (25496751.5 6673129.5 1.5)
        device_type:
          type: string
          format: uuid
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        lifecycle:
          enum:
          - 3
          - 4
          - 5
          - 6
          type: integer
          description: |-
            Lifecycle of the device, which describes the activity status of the device.

            * `3` - Active
            * `4` - Temporarily active
            * `5` - Temporarily inactive
            * `6` - Inactive
        source_id:
          type: string
          nullable: true
          description: ID of the device in the source where this device was imported
            from.
          maxLength: 64
        source_name:
          type: string
          nullable: true
          description: Name of the source for where this device was imported from.
          maxLength: 254
        road_name:
          type: string
          nullable: true
          description: Name of the road this traffic light is installed at.
          maxLength: 254
        lane_number:
          enum:
          - '11'
          - '21'
          - '31'
          - X2
          - X3
          - X4
          - X5
          - X6
          - X7
          - X8
          - X9
          - ''
          - null
          type: string
          nullable: true
          description: |-
            Describes which lane of the road this traffic light affects.

            * `11` - Main lane
            * `21` - Main lane
            * `31` - Lane allowing traffic to both directions
            * `X2` - First left additional lane
            * `X3` - First right additional lane
            * `X4` - Second left additional lane
            * `X5` - Second right additional lane
            * `X6` - Third left additional lane
            * `X7` - Third right additional lane
            * `X8` - Fourth left additional lane
            * `X9` - Fourth right additional lane
        lane_type:
          enum:
          - '1'
          - '2'
          - '3'
          - '4'
          - '5'
          - '6'
          - '7'
          - '8'
          - '9'
          - '10'
          - '11'
          - '20'
          - '21'
          - '22'
          - ''
          - null
          type: string
          nullable: true
          description: |-
            The type of lane which this traffic light affects.

            * `1` - Main lane
            * `2` - Fast lane
            * `3` - Turn right lane
            * `4` - Turn left lane
            * `5` - Auxiliary straight lane
            * `6` - Merge lane
            * `7` - Exit lane
            * `8` - Weaving lane
            * `9` - Public transport lane / taxi lane
            * `10` - Heavy vehicle lane
            * `11` - Reversible lane
            * `20` - Pedestrian and bike lane
            * `21` - Pedestrian lane
            * `22` - Bike lane
        direction:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: The direction a person is facing when looking perpendicular
            to the traffic light. The value is in degrees from 0 to 359, where 0 is
            north, 90 is east, etc.
        height:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          nullable: true
          description: The height of the sign from the ground, measured from the bottom
            in centimeters.
        type:
          enum:
          - '1'
          - '4.1'
          - '4.2'
          - '5'
          - '8'
          - '9.1'
          - '9.2'
          - '10'
          - '11'
          - ''
          - null
          type: string
          nullable: true
          description: |-
            Describes the type of traffic light this device is.

            * `1` - Traffic signal
            * `4.1` - Right-turn arrow signal
            * `4.2` - Left-turn arrow signal
            * `5` - Triangle signal
            * `8` - Public transport signal
            * `9.1` - Bicycle signal
            * `9.2` - Bicycle turn arrow signal
            * `10` - Pedestrian signal
            * `11` - Lane signal
        txt:
          type: string
          nullable: true
          description: Text on the traffic light.
          maxLength: 254
        push_button:
          enum:
          - 1
          - 2
          - null
          type: integer
          nullable: true
          description: |-
            Describes if this traffic light has a push button attached.

            * `1` - No
            * `2` - Yes
        sound_beacon:
          enum:
          - 1
          - 2
          - null
          type: integer
          nullable: true
          description: |-
            Describes if this traffic light has a sound beacon attached.

            * `1` - No
            * `2` - Yes
        vehicle_recognition:
          enum:
          - 1
          - 2
          - 3
          - 4
          - null
          type: integer
          nullable: true
          description: |-
            Describes the type of vehicle recognition this traffic light has.

            * `1` - Loop sensor
            * `2` - Infrared sensor
            * `3` - Radar i.e. microwave sensor
            * `4` - Other
        validity_period_start:
          type: string
          format: date
          nullable: true
          description: Date on which this traffic light becomes active.
        validity_period_end:
          type: string
          format: date
          nullable: true
          description: Date after which this traffic light becomes inactive.
        location_specifier:
          enum:
          - 1
          - 2
          - 3
          - null
          type: integer
          nullable: true
          description: |-
            Specifies where the traffic light is in relation to the road.

            * `1` - Right side of the road (relative to traffic direction)
            * `2` - Above the lanes
            * `3` - Island
        created_by:
          type: string
          format: uuid
          readOnly: true
          nullable: true
        updated_by:
          type: string
          format: uuid
          readOnly: true
          nullable: true
        owner:
          type: string
          format: uuid
          description: Owner who orders and is responsible for the maintenance of
            the device.
        responsible_entity:
          type: string
          format: uuid
          nullable: true
          description: Organization or project that this device is assigned to.
        mount_plan:
          type: string
          format: uuid
          nullable: true
          description: Mount that this traffic light is mounted on.
        plan:
          type: string
          format: uuid
          nullable: true
          description: Plan which this traffic light plan is a part of.
      required:
      - created_at
      - created_by
      - id
      - location
      - owner
      - updated_at
      - updated_by
    TrafficLightPlanInputRequest:
      type: object
      properties:
        replaces:
          type: string
          format: uuid
          nullable: true
          description: ID to the device plan that this device is replacing
        location:
          type: string
          format: EWKT
          example: SRID=3879;POINT Z (25496751.5 6673129.5 1.5)
          minLength: 1
        device_type:
          type: string
          format: uuid
          nullable: true
        lifecycle:
          enum:
          - 3
          - 4
          - 5
          - 6
          type: integer
          description: |-
            Lifecycle of the device, which describes the activity status of the device.

            * `3` - Active
            * `4` - Temporarily active
            * `5` - Temporarily inactive
            * `6` - Inactive
        source_id:
          type: string
          nullable: true
          description: ID of the device in the source where this device was imported
            from.
          maxLength: 64
        source_name:
          type: string
          nullable: true
          description: Name of the source for where this device was imported from.
          maxLength: 254
        road_name:
          type: string
          nullable: true
          description: Name of the road this traffic light is installed at.
          maxLength: 254
        lane_number:
          enum:
          - '11'
          - '21'
          - '31'
          - X2
          - X3
          - X4
          - X5
          - X6
          - X7
          - X8
          - X9
          - ''
          - null
          type: string
          nullable: true
          description: |-
            Describes which lane of the road this traffic light affects.

            * `11` - Main lane
            * `21` - Main lane
            * `31` - Lane allowing traffic to both directions
            * `X2` - First left additional lane
            * `X3` - First right additional lane
            * `X4` - Second left additional lane
            * `X5` - Second right additional lane
            * `X6` - Third left additional lane
            * `X7` - Third right additional lane
            * `X8` - Fourth left additional lane
            * `X9` - Fourth right additional lane
        lane_type:
          enum:
          - '1'
          - '2'
          - '3'
          - '4'
          - '5'
          - '6'
          - '7'
          - '8'
          - '9'
          - '10'
          - '11'
          - '20'
          - '21'
          - '22'
          - ''
          - null
          type: string
          nullable: true
          description: |-
            The type of lane which this traffic light affects.

            * `1` - Main lane
            * `2` - Fast lane
            * `3` - Turn right lane
            * `4` - Turn left lane
            * `5` - Auxiliary straight lane
            * `6` - Merge lane
            * `7` - Exit lane
            * `8` - Weaving lane
            * `9` - Public transport lane / taxi lane
            * `10` - Heavy vehicle lane
            * `11` - Reversible lane
            * `20` - Pedestrian and bike lane
            * `21` - Pedestrian lane
            * `22` - Bike lane
        direction:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: The direction a person is facing when looking perpendicular
            to the traffic light. The value is in degrees from 0 to 359, where 0 is
            north, 90 is east, etc.
        height:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          nullable: true
          description: The height of the sign from the ground, measured from the bottom
            in centimeters.
        type:
          enum:
          - '1'
          - '4.1'
          - '4.2'
          - '5'
          - '8'
          - '9.1'
          - '9.2'
          - '10'
          - '11'
          - ''
          - null
          type: string
          nullable: true
          description: |-
            Describes the type of traffic light this device is.

            * `1` - Traffic signal
            * `4.1` - Right-turn arrow signal
            * `4.2` - Left-turn arrow signal
            * `5` - Triangle signal
            * `8` - Public transport signal
            * `9.1` - Bicycle signal
            * `9.2` - Bicycle turn arrow signal
            * `10` - Pedestrian signal
            * `11` - Lane signal
        txt:
          type: string
          nullable: true
          description: Text on the traffic light.
          maxLength: 254
        push_button:
          enum:
          - 1
          - 2
          - null
          type: integer
          nullable: true
          description: |-
            Describes if this traffic light has a push button attached.

            * `1` - No
            * `2` - Yes
        sound_beacon:
          enum:
          - 1
          - 2
          - null
          type: integer
          nullable: true
          description: |-
            Describes if this traffic light has a sound beacon attached.

            * `1` - No
            * `2` - Yes
        vehicle_recognition:
          enum:
          - 1
          - 2
          - 3
          - 4
          - null
          type: integer
          nullable: true
          description: |-
            Describes the type of vehicle recognition this traffic light has.

            * `1` - Loop sensor
            * `2` - Infrared sensor
            * `3` - Radar i.e. microwave sensor
            * `4` - Other
        validity_period_start:
          type: string
          format: date
          nullable: true
          description: Date on which this traffic light becomes active.
        validity_period_end:
          type: string
          format: date
          nullable: true
          description: Date after which this traffic light becomes inactive.
        location_specifier:
          enum:
          - 1
          - 2
          - 3
          - null
          type: integer
          nullable: true
          description: |-
            Specifies where the traffic light is in relation to the road.

            * `1` - Right side of the road (relative to traffic direction)
            * `2` - Above the lanes
            * `3` - Island
        owner:
          type: string
          format: uuid
          description: Owner who orders and is responsible for the maintenance of
            the device.
        responsible_entity:
          type: string
          format: uuid
          nullable: true
          description: Organization or project that this device is assigned to.
        mount_plan:
          type: string
          format: uuid
          nullable: true
          description: Mount that this traffic light is mounted on.
        plan:
          type: string
          format: uuid
          nullable: true
          description: Plan which this traffic light plan is a part of.
      required:
      - location
      - owner
    TrafficLightPlanOutput:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        replaces:
          type: string
          format: uuid
          nullable: true
          description: ID of the device plan that this device plan has replaced
          readOnly: true
        replaced_by:
          type: string
          format: uuid
          nullable: true
          description: ID of the device plan that has replaced this device plan
          readOnly: true
        is_replaced:
          type: boolean
          description: Whether this device plan has been replaced by another device
            plan
          readOnly: true
        location:
          type: string
          format: EWKT
          example: SRID=3879;POINT Z (25496751.5 6673129.5 1.5)
        files:
          type: array
          items:
            $ref: '#/components/schemas/TrafficLightPlanFile'
          readOnly: true
        device_type:
          type: string
          format: uuid
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        lifecycle:
          enum:
          - 3
          - 4
          - 5
          - 6
          type: integer
          description: |-
            Lifecycle of the device, which describes the activity status of the device.

            * `3` - Active
            * `4` - Temporarily active
            * `5` - Temporarily inactive
            * `6` - Inactive
        source_id:
          type: string
          nullable: true
          description: ID of the device in the source where this device was imported
            from.
          maxLength: 64
        source_name:
          type: string
          nullable: true
          description: Name of the source for where this device was imported from.
          maxLength: 254
        road_name:
          type: string
          nullable: true
          description: Name of the road this traffic light is installed at.
          maxLength: 254
        lane_number:
          enum:
          - '11'
          - '21'
          - '31'
          - X2
          - X3
          - X4
          - X5
          - X6
          - X7
          - X8
          - X9
          - ''
          - null
          type: string
          nullable: true
          description: |-
            Describes which lane of the road this traffic light affects.

            * `11` - Main lane
            * `21` - Main lane
            * `31` - Lane allowing traffic to both directions
            * `X2` - First left additional lane
            * `X3` - First right additional lane
            * `X4` - Second left additional lane
            * `X5` - Second right additional lane
            * `X6` - Third left additional lane
            * `X7` - Third right additional lane
            * `X8` - Fourth left additional lane
            * `X9` - Fourth right additional lane
        lane_type:
          enum:
          - '1'
          - '2'
          - '3'
          - '4'
          - '5'
          - '6'
          - '7'
          - '8'
          - '9'
          - '10'
          - '11'
          - '20'
          - '21'
          - '22'
          - ''
          - null
          type: string
          nullable: true
          description: |-
            The type of lane which this traffic light affects.

            * `1` - Main lane
            * `2` - Fast lane
            * `3` - Turn right lane
            * `4` - Turn left lane
            * `5` - Auxiliary straight lane
            * `6` - Merge lane
            * `7` - Exit lane
            * `8` - Weaving lane
            * `9` - Public transport lane / taxi lane
            * `10` - Heavy vehicle lane
            * `11` - Reversible lane
            * `20` - Pedestrian and bike lane
            * `21` - Pedestrian lane
            * `22` - Bike lane
        direction:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: The direction a person is facing when looking perpendicular
            to the traffic light. The value is in degrees from 0 to 359, where 0 is
            north, 90 is east, etc.
        height:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          nullable: true
          description: The height of the sign from the ground, measured from the bottom
            in centimeters.
        type:
          enum:
          - '1'
          - '4.1'
          - '4.2'
          - '5'
          - '8'
          - '9.1'
          - '9.2'
          - '10'
          - '11'
          - ''
          - null
          type: string
          nullable: true
          description: |-
            Describes the type of traffic light this device is.

            * `1` - Traffic signal
            * `4.1` - Right-turn arrow signal
            * `4.2` - Left-turn arrow signal
            * `5` - Triangle signal
            * `8` - Public transport signal
            * `9.1` - Bicycle signal
            * `9.2` - Bicycle turn arrow signal
            * `10` - Pedestrian signal
            * `11` - Lane signal
        txt:
          type: string
          nullable: true
          description: Text on the traffic light.
          maxLength: 254
        push_button:
          enum:
          - 1
          - 2
          - null
          type: integer
          nullable: true
          description: |-
            Describes if this traffic light has a push button attached.

            * `1` - No
            * `2` - Yes
        sound_beacon:
          enum:
          - 1
          - 2
          - null
          type: integer
          nullable: true
          description: |-
            Describes if this traffic light has a sound beacon attached.

            * `1` - No
            * `2` - Yes
        vehicle_recognition:
          enum:
          - 1
          - 2
          - 3
          - 4
          - null
          type: integer
          nullable: true
          description: |-
            Describes the type of vehicle recognition this traffic light has.

            * `1` - Loop sensor
            * `2` - Infrared sensor
            * `3` - Radar i.e. microwave sensor
            * `4` - Other
        validity_period_start:
          type: string
          format: date
          nullable: true
          description: Date on which this traffic light becomes active.
        validity_period_end:
          type: string
          format: date
          nullable: true
          description: Date after which this traffic light becomes inactive.
        location_specifier:
          enum:
          - 1
          - 2
          - 3
          - null
          type: integer
          nullable: true
          description: |-
            Specifies where the traffic light is in relation to the road.

            * `1` - Right side of the road (relative to traffic direction)
            * `2` - Above the lanes
            * `3` - Island
        created_by:
          type: string
          format: uuid
          readOnly: true
          nullable: true
        updated_by:
          type: string
          format: uuid
          readOnly: true
          nullable: true
        owner:
          type: string
          format: uuid
          description: Owner who orders and is responsible for the maintenance of
            the device.
        responsible_entity:
          type: string
          format: uuid
          nullable: true
          description: Organization or project that this device is assigned to.
        mount_plan:
          type: string
          format: uuid
          nullable: true
          description: Mount that this traffic light is mounted on.
        plan:
          type: string
          format: uuid
          nullable: true
          description: Plan which this traffic light plan is a part of.
      required:
      - created_at
      - created_by
      - files
      - id
      - is_replaced
      - location
      - owner
      - replaced_by
      - replaces
      - updated_at
      - updated_by
    TrafficLightReal:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        location:
          type: string
          format: EWKT
          example: SRID=3879;POINT Z (25496751.5 6673129.5 1.5)
        files:
          type: array
          items:
            $ref: '#/components/schemas/TrafficLightRealFile'
          readOnly: true
        device_type:
          type: string
          format: uuid
          nullable: true
        operations:
          type: array
          items:
            $ref: '#/components/schemas/TrafficLightRealOperation'
          readOnly: true
        plan_decision_id:
          type: string
          description: Year and verdict section separated with a dash
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        lifecycle:
          enum:
          - 3
          - 4
          - 5
          - 6
          type: integer
          description: |-
            Lifecycle of the device, which describes the activity status of the device.

            * `3` - Active
            * `4` - Temporarily active
            * `5` - Temporarily inactive
            * `6` - Inactive
        installation_date:
          type: string
          format: date
          nullable: true
          description: Date on which this device was installed on.
        installation_status:
          enum:
          - IN_USE
          - COVERED
          - FALLEN
          - MISSING
          - OTHER
          - ''
          - null
          type: string
          nullable: true
          description: |-
            Describes this devices installation status.

            * `IN_USE` - In use
            * `COVERED` - Covered
            * `FALLEN` - Fallen
            * `MISSING` - Missing
            * `OTHER` - Other
        condition:
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - null
          type: integer
          nullable: true
          description: |-
            Describes the condition of this device.

            * `1` - Very bad
            * `2` - Bad
            * `3` - Average
            * `4` - Good
            * `5` - Very good
        source_id:
          type: string
          nullable: true
          description: ID of the device in the source where this device was imported
            from.
          maxLength: 64
        source_name:
          type: string
          nullable: true
          description: Name of the source for where this device was imported from.
          maxLength: 254
        road_name:
          type: string
          nullable: true
          description: Name of the road this traffic light is installed at.
          maxLength: 254
        lane_number:
          enum:
          - '11'
          - '21'
          - '31'
          - X2
          - X3
          - X4
          - X5
          - X6
          - X7
          - X8
          - X9
          - ''
          - null
          type: string
          nullable: true
          description: |-
            Describes which lane of the road this traffic light affects.

            * `11` - Main lane
            * `21` - Main lane
            * `31` - Lane allowing traffic to both directions
            * `X2` - First left additional lane
            * `X3` - First right additional lane
            * `X4` - Second left additional lane
            * `X5` - Second right additional lane
            * `X6` - Third left additional lane
            * `X7` - Third right additional lane
            * `X8` - Fourth left additional lane
            * `X9` - Fourth right additional lane
        lane_type:
          enum:
          - '1'
          - '2'
          - '3'
          - '4'
          - '5'
          - '6'
          - '7'
          - '8'
          - '9'
          - '10'
          - '11'
          - '20'
          - '21'
          - '22'
          - ''
          - null
          type: string
          nullable: true
          description: |-
            The type of lane which this traffic light affects.

            * `1` - Main lane
            * `2` - Fast lane
            * `3` - Turn right lane
            * `4` - Turn left lane
            * `5` - Auxiliary straight lane
            * `6` - Merge lane
            * `7` - Exit lane
            * `8` - Weaving lane
            * `9` - Public transport lane / taxi lane
            * `10` - Heavy vehicle lane
            * `11` - Reversible lane
            * `20` - Pedestrian and bike lane
            * `21` - Pedestrian lane
            * `22` - Bike lane
        direction:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: The direction a person is facing when looking perpendicular
            to the traffic light. The value is in degrees from 0 to 359, where 0 is
            north, 90 is east, etc.
        height:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          nullable: true
          description: The height of the sign from the ground, measured from the bottom
            in centimeters.
        type:
          enum:
          - '1'
          - '4.1'
          - '4.2'
          - '5'
          - '8'
          - '9.1'
          - '9.2'
          - '10'
          - '11'
          - ''
          - null
          type: string
          nullable: true
          description: |-
            Describes the type of traffic light this device is.

            * `1` - Traffic signal
            * `4.1` - Right-turn arrow signal
            * `4.2` - Left-turn arrow signal
            * `5` - Triangle signal
            * `8` - Public transport signal
            * `9.1` - Bicycle signal
            * `9.2` - Bicycle turn arrow signal
            * `10` - Pedestrian signal
            * `11` - Lane signal
        txt:
          type: string
          nullable: true
          description: Text on the traffic light.
          maxLength: 254
        push_button:
          enum:
          - 1
          - 2
          - null
          type: integer
          nullable: true
          description: |-
            Describes if this traffic light has a push button attached.

            * `1` - No
            * `2` - Yes
        sound_beacon:
          enum:
          - 1
          - 2
          - null
          type: integer
          nullable: true
          description: |-
            Describes if this traffic light has a sound beacon attached.

            * `1` - No
            * `2` - Yes
        vehicle_recognition:
          enum:
          - 1
          - 2
          - 3
          - 4
          - null
          type: integer
          nullable: true
          description: |-
            Describes the type of vehicle recognition this traffic light has.

            * `1` - Loop sensor
            * `2` - Infrared sensor
            * `3` - Radar i.e. microwave sensor
            * `4` - Other
        validity_period_start:
          type: string
          format: date
          nullable: true
          description: Date on which this traffic light becomes active.
        validity_period_end:
          type: string
          format: date
          nullable: true
          description: Date after which this traffic light becomes inactive.
        location_specifier:
          enum:
          - 1
          - 2
          - 3
          - null
          type: integer
          nullable: true
          description: |-
            Specifies where the traffic light is in relation to the road.

            * `1` - Right side of the road (relative to traffic direction)
            * `2` - Above the lanes
            * `3` - Island
        created_by:
          type: string
          format: uuid
          readOnly: true
          nullable: true
        updated_by:
          type: string
          format: uuid
          readOnly: true
          nullable: true
        owner:
          type: string
          format: uuid
          description: Owner who orders and is responsible for the maintenance of
            the device.
        responsible_entity:
          type: string
          format: uuid
          nullable: true
          description: Organization or project that this device is assigned to.
        traffic_light_plan:
          type: string
          format: uuid
          nullable: true
          description: The plan for this traffic light.
        mount_real:
          type: string
          format: uuid
          nullable: true
          description: Mount that this traffic light is mounted on.
      required:
      - created_at
      - created_by
      - files
      - id
      - location
      - operations
      - owner
      - plan_decision_id
      - updated_at
      - updated_by
    TrafficLightRealFile:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        file:
          type: string
          format: uri
        traffic_light_real:
          type: string
          format: uuid
      required:
      - file
      - id
      - traffic_light_real
    TrafficLightRealFileCreateResponse:
      type: object
      properties:
        files:
          type: array
          items:
            $ref: '#/components/schemas/TrafficLightRealFile'
      required:
      - files
    TrafficLightRealFileRequest:
      type: object
      properties:
        file:
          type: string
          format: binary
        traffic_light_real:
          type: string
          format: uuid
      required:
      - file
      - traffic_light_real
    TrafficLightRealOperation:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        operation_type:
          type: string
          readOnly: true
        operation_type_id:
          type: integer
        operation_date:
          type: string
          format: date
      required:
      - id
      - operation_date
      - operation_type
      - operation_type_id
    TrafficLightRealOperationRequest:
      type: object
      properties:
        operation_type_id:
          type: integer
        operation_date:
          type: string
          format: date
      required:
      - operation_date
      - operation_type_id
    TrafficLightRealRequest:
      type: object
      properties:
        location:
          type: string
          format: EWKT
          example: SRID=3879;POINT Z (25496751.5 6673129.5 1.5)
          minLength: 1
        device_type:
          type: string
          format: uuid
          nullable: true
        lifecycle:
          enum:
          - 3
          - 4
          - 5
          - 6
          type: integer
          description: |-
            Lifecycle of the device, which describes the activity status of the device.

            * `3` - Active
            * `4` - Temporarily active
            * `5` - Temporarily inactive
            * `6` - Inactive
        installation_date:
          type: string
          format: date
          nullable: true
          description: Date on which this device was installed on.
        installation_status:
          enum:
          - IN_USE
          - COVERED
          - FALLEN
          - MISSING
          - OTHER
          - ''
          - null
          type: string
          nullable: true
          description: |-
            Describes this devices installation status.

            * `IN_USE` - In use
            * `COVERED` - Covered
            * `FALLEN` - Fallen
            * `MISSING` - Missing
            * `OTHER` - Other
        condition:
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - null
          type: integer
          nullable: true
          description: |-
            Describes the condition of this device.

            * `1` - Very bad
            * `2` - Bad
            * `3` - Average
            * `4` - Good
            * `5` - Very good
        source_id:
          type: string
          nullable: true
          description: ID of the device in the source where this device was imported
            from.
          maxLength: 64
        source_name:
          type: string
          nullable: true
          description: Name of the source for where this device was imported from.
          maxLength: 254
        road_name:
          type: string
          nullable: true
          description: Name of the road this traffic light is installed at.
          maxLength: 254
        lane_number:
          enum:
          - '11'
          - '21'
          - '31'
          - X2
          - X3
          - X4
          - X5
          - X6
          - X7
          - X8
          - X9
          - ''
          - null
          type: string
          nullable: true
          description: |-
            Describes which lane of the road this traffic light affects.

            * `11` - Main lane
            * `21` - Main lane
            * `31` - Lane allowing traffic to both directions
            * `X2` - First left additional lane
            * `X3` - First right additional lane
            * `X4` - Second left additional lane
            * `X5` - Second right additional lane
            * `X6` - Third left additional lane
            * `X7` - Third right additional lane
            * `X8` - Fourth left additional lane
            * `X9` - Fourth right additional lane
        lane_type:
          enum:
          - '1'
          - '2'
          - '3'
          - '4'
          - '5'
          - '6'
          - '7'
          - '8'
          - '9'
          - '10'
          - '11'
          - '20'
          - '21'
          - '22'
          - ''
          - null
          type: string
          nullable: true
          description: |-
            The type of lane which this traffic light affects.

            * `1` - Main lane
            * `2` - Fast lane
            * `3` - Turn right lane
            * `4` - Turn left lane
            * `5` - Auxiliary straight lane
            * `6` - Merge lane
            * `7` - Exit lane
            * `8` - Weaving lane
            * `9` - Public transport lane / taxi lane
            * `10` - Heavy vehicle lane
            * `11` - Reversible lane
            * `20` - Pedestrian and bike lane
            * `21` - Pedestrian lane
            * `22` - Bike lane
        direction:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: The direction a person is facing when looking perpendicular
            to the traffic light. The value is in degrees from 0 to 359, where 0 is
            north, 90 is east, etc.
        height:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          nullable: true
          description: The height of the sign from the ground, measured from the bottom
            in centimeters.
        type:
          enum:
          - '1'
          - '4.1'
          - '4.2'
          - '5'
          - '8'
          - '9.1'
          - '9.2'
          - '10'
          - '11'
          - ''
          - null
          type: string
          nullable: true
          description: |-
            Describes the type of traffic light this device is.

            * `1` - Traffic signal
            * `4.1` - Right-turn arrow signal
            * `4.2` - Left-turn arrow signal
            * `5` - Triangle signal
            * `8` - Public transport signal
            * `9.1` - Bicycle signal
            * `9.2` - Bicycle turn arrow signal
            * `10` - Pedestrian signal
            * `11` - Lane signal
        txt:
          type: string
          nullable: true
          description: Text on the traffic light.
          maxLength: 254
        push_button:
          enum:
          - 1
          - 2
          - null
          type: integer
          nullable: true
          description: |-
            Describes if this traffic light has a push button attached.

            * `1` - No
            * `2` - Yes
        sound_beacon:
          enum:
          - 1
          - 2
          - null
          type: integer
          nullable: true
          description: |-
            Describes if this traffic light has a sound beacon attached.

            * `1` - No
            * `2` - Yes
        vehicle_recognition:
          enum:
          - 1
          - 2
          - 3
          - 4
          - null
          type: integer
          nullable: true
          description: |-
            Describes the type of vehicle recognition this traffic light has.

            * `1` - Loop sensor
            * `2` - Infrared sensor
            * `3` - Radar i.e. microwave sensor
            * `4` - Other
        validity_period_start:
          type: string
          format: date
          nullable: true
          description: Date on which this traffic light becomes active.
        validity_period_end:
          type: string
          format: date
          nullable: true
          description: Date after which this traffic light becomes inactive.
        location_specifier:
          enum:
          - 1
          - 2
          - 3
          - null
          type: integer
          nullable: true
          description: |-
            Specifies where the traffic light is in relation to the road.

            * `1` - Right side of the road (relative to traffic direction)
            * `2` - Above the lanes
            * `3` - Island
        owner:
          type: string
          format: uuid
          description: Owner who orders and is responsible for the maintenance of
            the device.
        responsible_entity:
          type: string
          format: uuid
          nullable: true
          description: Organization or project that this device is assigned to.
        traffic_light_plan:
          type: string
          format: uuid
          nullable: true
          description: The plan for this traffic light.
        mount_real:
          type: string
          format: uuid
          nullable: true
          description: Mount that this traffic light is mounted on.
      required:
      - location
      - owner
    TrafficSignPlanFile:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        file:
          type: string
          format: uri
        traffic_sign_plan:
          type: string
          format: uuid
      required:
      - file
      - id
      - traffic_sign_plan
    TrafficSignPlanFileCreateResponse:
      type: object
      properties:
        files:
          type: array
          items:
            $ref: '#/components/schemas/TrafficSignPlanFile'
      required:
      - files
    TrafficSignPlanInput:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        replaces:
          type: string
          format: uuid
          nullable: true
          description: ID to the device plan that this device is replacing
        location:
          type: string
          format: EWKT
          example: SRID=3879;POINT Z (25496751.5 6673129.5 1.5)
        affect_area:
          type: string
          format: EWKT
          example: SRID=3879;POLYGON Z ((25497733.5 6672927.5 0, 25497946.5 6673032.5
            0, 25498653.5 6673034.5 0, 25498987.5 6672708.5 0, 25498314.5 6672170.5
            0, 25497651.5 6672629.5 0, 25497646.5 6672775.5 0, 25497733.5 6672927.5
            0))
        device_type:
          type: string
          format: uuid
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        lifecycle:
          enum:
          - 3
          - 4
          - 5
          - 6
          type: integer
          description: |-
            Lifecycle of the device, which describes the activity status of the device.

            * `3` - Active
            * `4` - Temporarily active
            * `5` - Temporarily inactive
            * `6` - Inactive
        source_id:
          type: string
          nullable: true
          description: ID of the device in the source where this device was imported
            from.
          maxLength: 64
        source_name:
          type: string
          nullable: true
          description: Name of the source for where this device was imported from.
          maxLength: 254
        road_name:
          type: string
          nullable: true
          description: Name of the road this traffic sign is installed at.
          maxLength: 254
        lane_number:
          enum:
          - '11'
          - '21'
          - '31'
          - X2
          - X3
          - X4
          - X5
          - X6
          - X7
          - X8
          - X9
          - ''
          - null
          type: string
          nullable: true
          description: |-
            Describes which lane of the road this sign affects.

            * `11` - Main lane
            * `21` - Main lane
            * `31` - Lane allowing traffic to both directions
            * `X2` - First left additional lane
            * `X3` - First right additional lane
            * `X4` - Second left additional lane
            * `X5` - Second right additional lane
            * `X6` - Third left additional lane
            * `X7` - Third right additional lane
            * `X8` - Fourth left additional lane
            * `X9` - Fourth right additional lane
        lane_type:
          enum:
          - '1'
          - '2'
          - '3'
          - '4'
          - '5'
          - '6'
          - '7'
          - '8'
          - '9'
          - '10'
          - '11'
          - '20'
          - '21'
          - '22'
          - ''
          - null
          type: string
          nullable: true
          description: |-
            The type of lane which this sign affects.

            * `1` - Main lane
            * `2` - Fast lane
            * `3` - Turn right lane
            * `4` - Turn left lane
            * `5` - Auxiliary straight lane
            * `6` - Merge lane
            * `7` - Exit lane
            * `8` - Weaving lane
            * `9` - Public transport lane / taxi lane
            * `10` - Heavy vehicle lane
            * `11` - Reversible lane
            * `20` - Pedestrian and bike lane
            * `21` - Pedestrian lane
            * `22` - Bike lane
        direction:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: The direction a person is facing when looking perpendicular
            to the sign. The value is in degrees from 0 to 359, where 0 is north,
            90 is east, etc.
        height:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: The height of the sign from the ground, measured from the bottom
            in centimeters.
        value:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
          title: Traffic Sign Code value
          description: Numeric value on the sign.
        size:
          enum:
          - S
          - M
          - L
          - ''
          - null
          type: string
          description: |-
            * `S` - Small
            * `M` - Medium
            * `L` - Large
          nullable: true
        reflection_class:
          enum:
          - R1
          - R2
          - R3
          - ''
          - null
          type: string
          description: |-
            * `R1` - r1
            * `R2` - r2
            * `R3` - r3
          nullable: true
          title: Reflection
        surface_class:
          enum:
          - CONVEX
          - FLAT
          - ''
          - null
          type: string
          description: |-
            * `CONVEX` - Convex
            * `FLAT` - Flat
          nullable: true
          title: Surface
        txt:
          type: string
          nullable: true
          description: Text written on the sign.
          maxLength: 254
        location_specifier:
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - null
          type: integer
          nullable: true
          description: |-
            Specifies where the sign is in relation to the road.

            * `1` - Right side
            * `2` - Left side
            * `3` - Above
            * `4` - Middle
            * `5` - Vertical
            * `6` - Outside
        validity_period_start:
          type: string
          format: date
          nullable: true
          description: Date on which this sign becomes active.
        validity_period_end:
          type: string
          format: date
          nullable: true
          description: Date after which this sign becomes inactive.
        seasonal_validity_period_start:
          type: string
          format: date
          nullable: true
          description: Date on which this sign becomes seasonally active.
        seasonal_validity_period_end:
          type: string
          format: date
          nullable: true
          description: Date after which this sign becomes seasonally inactive.
        created_by:
          type: string
          format: uuid
          readOnly: true
          nullable: true
        updated_by:
          type: string
          format: uuid
          readOnly: true
          nullable: true
        owner:
          type: string
          format: uuid
          description: Owner who orders and is responsible for the maintenance of
            the device.
        responsible_entity:
          type: string
          format: uuid
          nullable: true
          description: Organization or project that this device is assigned to.
        mount_plan:
          type: string
          format: uuid
          nullable: true
          description: Mount that this sign is mounted on.
        plan:
          type: string
          format: uuid
          nullable: true
          description: Plan which this traffic sign plan is a part of.
      required:
      - created_at
      - created_by
      - id
      - location
      - owner
      - updated_at
      - updated_by
    TrafficSignPlanInputRequest:
      type: object
      properties:
        replaces:
          type: string
          format: uuid
          nullable: true
          description: ID to the device plan that this device is replacing
        location:
          type: string
          format: EWKT
          example: SRID=3879;POINT Z (25496751.5 6673129.5 1.5)
          minLength: 1
        affect_area:
          type: string
          format: EWKT
          example: SRID=3879;POLYGON Z ((25497733.5 6672927.5 0, 25497946.5 6673032.5
            0, 25498653.5 6673034.5 0, 25498987.5 6672708.5 0, 25498314.5 6672170.5
            0, 25497651.5 6672629.5 0, 25497646.5 6672775.5 0, 25497733.5 6672927.5
            0))
          minLength: 1
        device_type:
          type: string
          format: uuid
          nullable: true
        lifecycle:
          enum:
          - 3
          - 4
          - 5
          - 6
          type: integer
          description: |-
            Lifecycle of the device, which describes the activity status of the device.

            * `3` - Active
            * `4` - Temporarily active
            * `5` - Temporarily inactive
            * `6` - Inactive
        source_id:
          type: string
          nullable: true
          description: ID of the device in the source where this device was imported
            from.
          maxLength: 64
        source_name:
          type: string
          nullable: true
          description: Name of the source for where this device was imported from.
          maxLength: 254
        road_name:
          type: string
          nullable: true
          description: Name of the road this traffic sign is installed at.
          maxLength: 254
        lane_number:
          enum:
          - '11'
          - '21'
          - '31'
          - X2
          - X3
          - X4
          - X5
          - X6
          - X7
          - X8
          - X9
          - ''
          - null
          type: string
          nullable: true
          description: |-
            Describes which lane of the road this sign affects.

            * `11` - Main lane
            * `21` - Main lane
            * `31` - Lane allowing traffic to both directions
            * `X2` - First left additional lane
            * `X3` - First right additional lane
            * `X4` - Second left additional lane
            * `X5` - Second right additional lane
            * `X6` - Third left additional lane
            * `X7` - Third right additional lane
            * `X8` - Fourth left additional lane
            * `X9` - Fourth right additional lane
        lane_type:
          enum:
          - '1'
          - '2'
          - '3'
          - '4'
          - '5'
          - '6'
          - '7'
          - '8'
          - '9'
          - '10'
          - '11'
          - '20'
          - '21'
          - '22'
          - ''
          - null
          type: string
          nullable: true
          description: |-
            The type of lane which this sign affects.

            * `1` - Main lane
            * `2` - Fast lane
            * `3` - Turn right lane
            * `4` - Turn left lane
            * `5` - Auxiliary straight lane
            * `6` - Merge lane
            * `7` - Exit lane
            * `8` - Weaving lane
            * `9` - Public transport lane / taxi lane
            * `10` - Heavy vehicle lane
            * `11` - Reversible lane
            * `20` - Pedestrian and bike lane
            * `21` - Pedestrian lane
            * `22` - Bike lane
        direction:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: The direction a person is facing when looking perpendicular
            to the sign. The value is in degrees from 0 to 359, where 0 is north,
            90 is east, etc.
        height:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: The height of the sign from the ground, measured from the bottom
            in centimeters.
        value:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
          title: Traffic Sign Code value
          description: Numeric value on the sign.
        size:
          enum:
          - S
          - M
          - L
          - ''
          - null
          type: string
          description: |-
            * `S` - Small
            * `M` - Medium
            * `L` - Large
          nullable: true
        reflection_class:
          enum:
          - R1
          - R2
          - R3
          - ''
          - null
          type: string
          description: |-
            * `R1` - r1
            * `R2` - r2
            * `R3` - r3
          nullable: true
          title: Reflection
        surface_class:
          enum:
          - CONVEX
          - FLAT
          - ''
          - null
          type: string
          description: |-
            * `CONVEX` - Convex
            * `FLAT` - Flat
          nullable: true
          title: Surface
        txt:
          type: string
          nullable: true
          description: Text written on the sign.
          maxLength: 254
        location_specifier:
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - null
          type: integer
          nullable: true
          description: |-
            Specifies where the sign is in relation to the road.

            * `1` - Right side
            * `2` - Left side
            * `3` - Above
            * `4` - Middle
            * `5` - Vertical
            * `6` - Outside
        validity_period_start:
          type: string
          format: date
          nullable: true
          description: Date on which this sign becomes active.
        validity_period_end:
          type: string
          format: date
          nullable: true
          description: Date after which this sign becomes inactive.
        seasonal_validity_period_start:
          type: string
          format: date
          nullable: true
          description: Date on which this sign becomes seasonally active.
        seasonal_validity_period_end:
          type: string
          format: date
          nullable: true
          description: Date after which this sign becomes seasonally inactive.
        owner:
          type: string
          format: uuid
          description: Owner who orders and is responsible for the maintenance of
            the device.
        responsible_entity:
          type: string
          format: uuid
          nullable: true
          description: Organization or project that this device is assigned to.
        mount_plan:
          type: string
          format: uuid
          nullable: true
          description: Mount that this sign is mounted on.
        plan:
          type: string
          format: uuid
          nullable: true
          description: Plan which this traffic sign plan is a part of.
      required:
      - location
      - owner
    TrafficSignPlanOutput:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        replaces:
          type: string
          format: uuid
          nullable: true
          description: ID of the device plan that this device plan has replaced
          readOnly: true
        replaced_by:
          type: string
          format: uuid
          nullable: true
          description: ID of the device plan that has replaced this device plan
          readOnly: true
        is_replaced:
          type: boolean
          description: Whether this device plan has been replaced by another device
            plan
          readOnly: true
        location:
          type: string
          format: EWKT
          example: SRID=3879;POINT Z (25496751.5 6673129.5 1.5)
        affect_area:
          type: string
          format: EWKT
          example: SRID=3879;POLYGON Z ((25497733.5 6672927.5 0, 25497946.5 6673032.5
            0, 25498653.5 6673034.5 0, 25498987.5 6672708.5 0, 25498314.5 6672170.5
            0, 25497651.5 6672629.5 0, 25497646.5 6672775.5 0, 25497733.5 6672927.5
            0))
        files:
          type: array
          items:
            $ref: '#/components/schemas/TrafficSignPlanFile'
          readOnly: true
        device_type:
          type: string
          format: uuid
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        lifecycle:
          enum:
          - 3
          - 4
          - 5
          - 6
          type: integer
          description: |-
            Lifecycle of the device, which describes the activity status of the device.

            * `3` - Active
            * `4` - Temporarily active
            * `5` - Temporarily inactive
            * `6` - Inactive
        source_id:
          type: string
          nullable: true
          description: ID of the device in the source where this device was imported
            from.
          maxLength: 64
        source_name:
          type: string
          nullable: true
          description: Name of the source for where this device was imported from.
          maxLength: 254
        road_name:
          type: string
          nullable: true
          description: Name of the road this traffic sign is installed at.
          maxLength: 254
        lane_number:
          enum:
          - '11'
          - '21'
          - '31'
          - X2
          - X3
          - X4
          - X5
          - X6
          - X7
          - X8
          - X9
          - ''
          - null
          type: string
          nullable: true
          description: |-
            Describes which lane of the road this sign affects.

            * `11` - Main lane
            * `21` - Main lane
            * `31` - Lane allowing traffic to both directions
            * `X2` - First left additional lane
            * `X3` - First right additional lane
            * `X4` - Second left additional lane
            * `X5` - Second right additional lane
            * `X6` - Third left additional lane
            * `X7` - Third right additional lane
            * `X8` - Fourth left additional lane
            * `X9` - Fourth right additional lane
        lane_type:
          enum:
          - '1'
          - '2'
          - '3'
          - '4'
          - '5'
          - '6'
          - '7'
          - '8'
          - '9'
          - '10'
          - '11'
          - '20'
          - '21'
          - '22'
          - ''
          - null
          type: string
          nullable: true
          description: |-
            The type of lane which this sign affects.

            * `1` - Main lane
            * `2` - Fast lane
            * `3` - Turn right lane
            * `4` - Turn left lane
            * `5` - Auxiliary straight lane
            * `6` - Merge lane
            * `7` - Exit lane
            * `8` - Weaving lane
            * `9` - Public transport lane / taxi lane
            * `10` - Heavy vehicle lane
            * `11` - Reversible lane
            * `20` - Pedestrian and bike lane
            * `21` - Pedestrian lane
            * `22` - Bike lane
        direction:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: The direction a person is facing when looking perpendicular
            to the sign. The value is in degrees from 0 to 359, where 0 is north,
            90 is east, etc.
        height:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: The height of the sign from the ground, measured from the bottom
            in centimeters.
        value:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
          title: Traffic Sign Code value
          description: Numeric value on the sign.
        size:
          enum:
          - S
          - M
          - L
          - ''
          - null
          type: string
          description: |-
            * `S` - Small
            * `M` - Medium
            * `L` - Large
          nullable: true
        reflection_class:
          enum:
          - R1
          - R2
          - R3
          - ''
          - null
          type: string
          description: |-
            * `R1` - r1
            * `R2` - r2
            * `R3` - r3
          nullable: true
          title: Reflection
        surface_class:
          enum:
          - CONVEX
          - FLAT
          - ''
          - null
          type: string
          description: |-
            * `CONVEX` - Convex
            * `FLAT` - Flat
          nullable: true
          title: Surface
        txt:
          type: string
          nullable: true
          description: Text written on the sign.
          maxLength: 254
        location_specifier:
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - null
          type: integer
          nullable: true
          description: |-
            Specifies where the sign is in relation to the road.

            * `1` - Right side
            * `2` - Left side
            * `3` - Above
            * `4` - Middle
            * `5` - Vertical
            * `6` - Outside
        validity_period_start:
          type: string
          format: date
          nullable: true
          description: Date on which this sign becomes active.
        validity_period_end:
          type: string
          format: date
          nullable: true
          description: Date after which this sign becomes inactive.
        seasonal_validity_period_start:
          type: string
          format: date
          nullable: true
          description: Date on which this sign becomes seasonally active.
        seasonal_validity_period_end:
          type: string
          format: date
          nullable: true
          description: Date after which this sign becomes seasonally inactive.
        created_by:
          type: string
          format: uuid
          readOnly: true
          nullable: true
        updated_by:
          type: string
          format: uuid
          readOnly: true
          nullable: true
        owner:
          type: string
          format: uuid
          description: Owner who orders and is responsible for the maintenance of
            the device.
        responsible_entity:
          type: string
          format: uuid
          nullable: true
          description: Organization or project that this device is assigned to.
        mount_plan:
          type: string
          format: uuid
          nullable: true
          description: Mount that this sign is mounted on.
        plan:
          type: string
          format: uuid
          nullable: true
          description: Plan which this traffic sign plan is a part of.
      required:
      - created_at
      - created_by
      - files
      - id
      - is_replaced
      - location
      - owner
      - replaced_by
      - replaces
      - updated_at
      - updated_by
    TrafficSignReal:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        location:
          type: string
          format: EWKT
          example: SRID=3879;POINT Z (25496751.5 6673129.5 1.5)
        files:
          type: array
          items:
            $ref: '#/components/schemas/TrafficSignRealFile'
          readOnly: true
        device_type:
          type: string
          format: uuid
          nullable: true
        operations:
          type: array
          items:
            $ref: '#/components/schemas/TrafficSignRealOperation'
          readOnly: true
        plan_decision_id:
          type: string
          description: Year and verdict section separated with a dash
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        lifecycle:
          enum:
          - 3
          - 4
          - 5
          - 6
          type: integer
          description: |-
            Lifecycle of the device, which describes the activity status of the device.

            * `3` - Active
            * `4` - Temporarily active
            * `5` - Temporarily inactive
            * `6` - Inactive
        installation_date:
          type: string
          format: date
          nullable: true
          description: Date on which this device was installed on.
        installation_status:
          enum:
          - IN_USE
          - COVERED
          - FALLEN
          - MISSING
          - OTHER
          - ''
          - null
          type: string
          nullable: true
          description: |-
            Describes this devices installation status.

            * `IN_USE` - In use
            * `COVERED` - Covered
            * `FALLEN` - Fallen
            * `MISSING` - Missing
            * `OTHER` - Other
        condition:
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - null
          type: integer
          nullable: true
          description: |-
            Describes the condition of this device.

            * `1` - Very bad
            * `2` - Bad
            * `3` - Average
            * `4` - Good
            * `5` - Very good
        source_id:
          type: string
          nullable: true
          description: ID of the device in the source where this device was imported
            from.
          maxLength: 64
        source_name:
          type: string
          nullable: true
          description: Name of the source for where this device was imported from.
          maxLength: 254
        road_name:
          type: string
          nullable: true
          description: Name of the road this traffic sign is installed at.
          maxLength: 254
        lane_number:
          enum:
          - '11'
          - '21'
          - '31'
          - X2
          - X3
          - X4
          - X5
          - X6
          - X7
          - X8
          - X9
          - ''
          - null
          type: string
          nullable: true
          description: |-
            Describes which lane of the road this sign affects.

            * `11` - Main lane
            * `21` - Main lane
            * `31` - Lane allowing traffic to both directions
            * `X2` - First left additional lane
            * `X3` - First right additional lane
            * `X4` - Second left additional lane
            * `X5` - Second right additional lane
            * `X6` - Third left additional lane
            * `X7` - Third right additional lane
            * `X8` - Fourth left additional lane
            * `X9` - Fourth right additional lane
        lane_type:
          enum:
          - '1'
          - '2'
          - '3'
          - '4'
          - '5'
          - '6'
          - '7'
          - '8'
          - '9'
          - '10'
          - '11'
          - '20'
          - '21'
          - '22'
          - ''
          - null
          type: string
          nullable: true
          description: |-
            The type of lane which this sign affects.

            * `1` - Main lane
            * `2` - Fast lane
            * `3` - Turn right lane
            * `4` - Turn left lane
            * `5` - Auxiliary straight lane
            * `6` - Merge lane
            * `7` - Exit lane
            * `8` - Weaving lane
            * `9` - Public transport lane / taxi lane
            * `10` - Heavy vehicle lane
            * `11` - Reversible lane
            * `20` - Pedestrian and bike lane
            * `21` - Pedestrian lane
            * `22` - Bike lane
        direction:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: The direction a person is facing when looking perpendicular
            to the sign. The value is in degrees from 0 to 359, where 0 is north,
            90 is east, etc.
        height:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: The height of the sign from the ground, measured from the bottom
            in centimeters.
        value:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
          title: Traffic Sign Code value
          description: Numeric value on the sign.
        size:
          enum:
          - S
          - M
          - L
          - ''
          - null
          type: string
          description: |-
            * `S` - Small
            * `M` - Medium
            * `L` - Large
          nullable: true
        reflection_class:
          enum:
          - R1
          - R2
          - R3
          - ''
          - null
          type: string
          description: |-
            * `R1` - r1
            * `R2` - r2
            * `R3` - r3
          nullable: true
          title: Reflection
        surface_class:
          enum:
          - CONVEX
          - FLAT
          - ''
          - null
          type: string
          description: |-
            * `CONVEX` - Convex
            * `FLAT` - Flat
          nullable: true
          title: Surface
        txt:
          type: string
          nullable: true
          description: Text written on the sign.
          maxLength: 254
        location_specifier:
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - null
          type: integer
          nullable: true
          description: |-
            Specifies where the sign is in relation to the road.

            * `1` - Right side
            * `2` - Left side
            * `3` - Above
            * `4` - Middle
            * `5` - Vertical
            * `6` - Outside
        validity_period_start:
          type: string
          format: date
          nullable: true
          description: Date on which this sign becomes active.
        validity_period_end:
          type: string
          format: date
          nullable: true
          description: Date after which this sign becomes inactive.
        seasonal_validity_period_start:
          type: string
          format: date
          nullable: true
          description: Date on which this sign becomes seasonally active.
        seasonal_validity_period_end:
          type: string
          format: date
          nullable: true
          description: Date after which this sign becomes seasonally inactive.
        installation_id:
          type: string
          nullable: true
          description: The id number of the installation record.
          maxLength: 254
        installation_details:
          type: string
          nullable: true
          description: Additional details about the installation.
          maxLength: 254
        permit_decision_id:
          type: string
          nullable: true
          description: The id number of the installation permit.
          maxLength: 254
        scanned_at:
          type: string
          format: date-time
          nullable: true
          description: Date and time on which this sign was last scanned at.
        manufacturer:
          type: string
          nullable: true
          description: Name of the organization that manufactured this sign.
          maxLength: 254
        rfid:
          type: string
          nullable: true
          description: RFID tag of the sign (if any).
          maxLength: 254
        operation:
          type: string
          nullable: true
          description: Maintenance operations done to the sign, e.g. washing, straightening
            or painting.
          maxLength: 64
        attachment_url:
          type: string
          format: uri
          nullable: true
          description: URL to a file attachment related to this sign.
          maxLength: 500
        created_by:
          type: string
          format: uuid
          readOnly: true
          nullable: true
        updated_by:
          type: string
          format: uuid
          readOnly: true
          nullable: true
        owner:
          type: string
          format: uuid
          description: Owner who orders and is responsible for the maintenance of
            the device.
        responsible_entity:
          type: string
          format: uuid
          nullable: true
          description: Organization or project that this device is assigned to.
        traffic_sign_plan:
          type: string
          format: uuid
          nullable: true
          description: The plan for this traffic sign.
        mount_real:
          type: string
          format: uuid
          nullable: true
          description: Mount that this sign is mounted on.
        coverage_area:
          type: string
          format: uuid
          nullable: true
          description: Coverage area that this traffic sign belongs to.
      required:
      - created_at
      - created_by
      - files
      - id
      - location
      - operations
      - owner
      - plan_decision_id
      - updated_at
      - updated_by
    TrafficSignRealFile:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        file:
          type: string
          format: uri
        traffic_sign_real:
          type: string
          format: uuid
      required:
      - file
      - id
      - traffic_sign_real
    TrafficSignRealFileCreateResponse:
      type: object
      properties:
        files:
          type: array
          items:
            $ref: '#/components/schemas/TrafficSignRealFile'
      required:
      - files
    TrafficSignRealFileRequest:
      type: object
      properties:
        file:
          type: string
          format: binary
        traffic_sign_real:
          type: string
          format: uuid
      required:
      - file
      - traffic_sign_real
    TrafficSignRealOperation:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        operation_type:
          type: string
          readOnly: true
        operation_type_id:
          type: integer
        operation_date:
          type: string
          format: date
      required:
      - id
      - operation_date
      - operation_type
      - operation_type_id
    TrafficSignRealOperationRequest:
      type: object
      properties:
        operation_type_id:
          type: integer
        operation_date:
          type: string
          format: date
      required:
      - operation_date
      - operation_type_id
    TrafficSignRealRequest:
      type: object
      properties:
        location:
          type: string
          format: EWKT
          example: SRID=3879;POINT Z (25496751.5 6673129.5 1.5)
          minLength: 1
        device_type:
          type: string
          format: uuid
          nullable: true
        lifecycle:
          enum:
          - 3
          - 4
          - 5
          - 6
          type: integer
          description: |-
            Lifecycle of the device, which describes the activity status of the device.

            * `3` - Active
            * `4` - Temporarily active
            * `5` - Temporarily inactive
            * `6` - Inactive
        installation_date:
          type: string
          format: date
          nullable: true
          description: Date on which this device was installed on.
        installation_status:
          enum:
          - IN_USE
          - COVERED
          - FALLEN
          - MISSING
          - OTHER
          - ''
          - null
          type: string
          nullable: true
          description: |-
            Describes this devices installation status.

            * `IN_USE` - In use
            * `COVERED` - Covered
            * `FALLEN` - Fallen
            * `MISSING` - Missing
            * `OTHER` - Other
        condition:
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - null
          type: integer
          nullable: true
          description: |-
            Describes the condition of this device.

            * `1` - Very bad
            * `2` - Bad
            * `3` - Average
            * `4` - Good
            * `5` - Very good
        source_id:
          type: string
          nullable: true
          description: ID of the device in the source where this device was imported
            from.
          maxLength: 64
        source_name:
          type: string
          nullable: true
          description: Name of the source for where this device was imported from.
          maxLength: 254
        road_name:
          type: string
          nullable: true
          description: Name of the road this traffic sign is installed at.
          maxLength: 254
        lane_number:
          enum:
          - '11'
          - '21'
          - '31'
          - X2
          - X3
          - X4
          - X5
          - X6
          - X7
          - X8
          - X9
          - ''
          - null
          type: string
          nullable: true
          description: |-
            Describes which lane of the road this sign affects.

            * `11` - Main lane
            * `21` - Main lane
            * `31` - Lane allowing traffic to both directions
            * `X2` - First left additional lane
            * `X3` - First right additional lane
            * `X4` - Second left additional lane
            * `X5` - Second right additional lane
            * `X6` - Third left additional lane
            * `X7` - Third right additional lane
            * `X8` - Fourth left additional lane
            * `X9` - Fourth right additional lane
        lane_type:
          enum:
          - '1'
          - '2'
          - '3'
          - '4'
          - '5'
          - '6'
          - '7'
          - '8'
          - '9'
          - '10'
          - '11'
          - '20'
          - '21'
          - '22'
          - ''
          - null
          type: string
          nullable: true
          description: |-
            The type of lane which this sign affects.

            * `1` - Main lane
            * `2` - Fast lane
            * `3` - Turn right lane
            * `4` - Turn left lane
            * `5` - Auxiliary straight lane
            * `6` - Merge lane
            * `7` - Exit lane
            * `8` - Weaving lane
            * `9` - Public transport lane / taxi lane
            * `10` - Heavy vehicle lane
            * `11` - Reversible lane
            * `20` - Pedestrian and bike lane
            * `21` - Pedestrian lane
            * `22` - Bike lane
        direction:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: The direction a person is facing when looking perpendicular
            to the sign. The value is in degrees from 0 to 359, where 0 is north,
            90 is east, etc.
        height:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: The height of the sign from the ground, measured from the bottom
            in centimeters.
        value:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
          title: Traffic Sign Code value
          description: Numeric value on the sign.
        size:
          enum:
          - S
          - M
          - L
          - ''
          - null
          type: string
          description: |-
            * `S` - Small
            * `M` - Medium
            * `L` - Large
          nullable: true
        reflection_class:
          enum:
          - R1
          - R2
          - R3
          - ''
          - null
          type: string
          description: |-
            * `R1` - r1
            * `R2` - r2
            * `R3` - r3
          nullable: true
          title: Reflection
        surface_class:
          enum:
          - CONVEX
          - FLAT
          - ''
          - null
          type: string
          description: |-
            * `CONVEX` - Convex
            * `FLAT` - Flat
          nullable: true
          title: Surface
        txt:
          type: string
          nullable: true
          description: Text written on the sign.
          maxLength: 254
        location_specifier:
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - null
          type: integer
          nullable: true
          description: |-
            Specifies where the sign is in relation to the road.

            * `1` - Right side
            * `2` - Left side
            * `3` - Above
            * `4` - Middle
            * `5` - Vertical
            * `6` - Outside
        validity_period_start:
          type: string
          format: date
          nullable: true
          description: Date on which this sign becomes active.
        validity_period_end:
          type: string
          format: date
          nullable: true
          description: Date after which this sign becomes inactive.
        seasonal_validity_period_start:
          type: string
          format: date
          nullable: true
          description: Date on which this sign becomes seasonally active.
        seasonal_validity_period_end:
          type: string
          format: date
          nullable: true
          description: Date after which this sign becomes seasonally inactive.
        installation_id:
          type: string
          nullable: true
          description: The id number of the installation record.
          maxLength: 254
        installation_details:
          type: string
          nullable: true
          description: Additional details about the installation.
          maxLength: 254
        permit_decision_id:
          type: string
          nullable: true
          description: The id number of the installation permit.
          maxLength: 254
        scanned_at:
          type: string
          format: date-time
          nullable: true
          description: Date and time on which this sign was last scanned at.
        manufacturer:
          type: string
          nullable: true
          description: Name of the organization that manufactured this sign.
          maxLength: 254
        rfid:
          type: string
          nullable: true
          description: RFID tag of the sign (if any).
          maxLength: 254
        operation:
          type: string
          nullable: true
          description: Maintenance operations done to the sign, e.g. washing, straightening
            or painting.
          maxLength: 64
        attachment_url:
          type: string
          format: uri
          nullable: true
          description: URL to a file attachment related to this sign.
          maxLength: 500
        owner:
          type: string
          format: uuid
          description: Owner who orders and is responsible for the maintenance of
            the device.
        responsible_entity:
          type: string
          format: uuid
          nullable: true
          description: Organization or project that this device is assigned to.
        traffic_sign_plan:
          type: string
          format: uuid
          nullable: true
          description: The plan for this traffic sign.
        mount_real:
          type: string
          format: uuid
          nullable: true
          description: Mount that this sign is mounted on.
        coverage_area:
          type: string
          format: uuid
          nullable: true
          description: Coverage area that this traffic sign belongs to.
      required:
      - location
      - owner
    TrafficSignType:
      type: object
      description: |-
        Serializer that is used to generate OpenAPI documentation for
        TrafficControlDeviceType model's traffic_sign_type attribute.
      properties:
        code:
          type: string
          readOnly: true
        text:
          type: string
          readOnly: true
      required:
      - code
      - text
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
