# Generated by Django 2.2.26 on 2022-02-01 16:18

import uuid

import colorfield.fields
import django.contrib.gis.db.models.fields
import django.db.models.deletion
import enumfields.fields
from django.conf import settings
from django.db import migrations, models

import city_furniture.enums
import city_furniture.models.furniture_signpost
import traffic_control.enums
import traffic_control.mixins.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('traffic_control', '0047_city_furniture'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CityFurnitureColor',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=64, verbose_name='Name', unique=True)),
                ('rgb', colorfield.fields.ColorField(default='#FFFFFF', image_field=None, max_length=18, samples=None)),
            ],
            options={
                'verbose_name': 'City Furniture Color',
                'verbose_name_plural': 'City Furniture Colors',
                'db_table': 'city_furniture_color',
            },
        ),
        migrations.CreateModel(
            name='CityFurnitureDeviceType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('code', models.CharField(max_length=32, unique=True, verbose_name='Code')),
                ('class_type', enumfields.fields.EnumIntegerField(enum=city_furniture.enums.CityFurnitureClassType, verbose_name='City Furniture Class type')),
                ('function_type', enumfields.fields.EnumIntegerField(enum=city_furniture.enums.CityFurnitureFunctionType, verbose_name='City Furniture Function or Usage type')),
                ('icon', models.CharField(blank=True, max_length=100, verbose_name='Icon')),
                ('description', models.CharField(blank=True, max_length=254, null=True, verbose_name='Description')),
                ('size', models.CharField(blank=True, max_length=50, verbose_name='Size')),
                ('target_model', enumfields.fields.EnumField(blank=True, enum=city_furniture.enums.CityFurnitureDeviceTypeTargetModel, max_length=32, null=True, verbose_name='Target data model')),
            ],
            options={
                'verbose_name': 'City Furniture Device Type',
                'verbose_name_plural': 'City Furniture Device Types',
                'db_table': 'city_furniture_device_type',
            },
        ),
        migrations.CreateModel(
            name='CityFurnitureTarget',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('name_fi', models.CharField(max_length=254, verbose_name='Finnish name')),
                ('name_sw', models.CharField(blank=True, max_length=254, null=True, verbose_name='Swedish name')),
                ('name_en', models.CharField(blank=True, max_length=254, null=True, verbose_name='English name')),
                ('description', models.CharField(blank=True, max_length=254, null=True, verbose_name='Description')),
                ('source_id', models.CharField(blank=True, default=None, max_length=64, null=True, verbose_name='Source id')),
                ('source_name', models.CharField(blank=True, default=None, max_length=254, null=True, verbose_name='Source name')),
            ],
            options={
                'verbose_name': 'City Furniture Target',
                'verbose_name_plural': 'City Furniture Targets',
                'db_table': 'city_furniture_target',
            },
        ),
        migrations.CreateModel(
            name='FurnitureSignpostPlan',
            fields=[
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Deleted at')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('source_id', models.CharField(blank=True, default=None, max_length=64, null=True, verbose_name='Source id')),
                ('source_name', models.CharField(blank=True, default=None, max_length=254, null=True, verbose_name='Source name')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('lifecycle', enumfields.fields.EnumIntegerField(default=3, enum=traffic_control.enums.Lifecycle, verbose_name='Lifecycle')),
                ('location', django.contrib.gis.db.models.fields.PointField(dim=3, srid=3879, verbose_name='Location (3D)')),
                ('location_name', models.CharField(blank=True, max_length=254, null=True, verbose_name='Road name')),
                ('direction', models.IntegerField(default=0, help_text='The direction in which the person is standing, when looking directly at the sign.', verbose_name='Direction')),
                ('location_additional_info', models.CharField(blank=True, help_text='Additional information about the install location.', max_length=254, null=True, verbose_name='Additional location info')),
                ('size', models.CharField(blank=True, max_length=254, null=True, verbose_name='Size')),
                ('height', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Height')),
                ('order', models.SmallIntegerField(default=1, verbose_name='Order')),
                ('arrow_direction', enumfields.fields.EnumIntegerField(blank=True, enum=city_furniture.models.furniture_signpost.ArrowDirection, null=True, verbose_name='Arrow direction')),
                ('pictogram', models.CharField(blank=True, max_length=254, null=True, verbose_name='Pictogram')),
                ('value', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Furniture signpost value')),
                ('text_content_fi', models.TextField(blank=True, null=True, verbose_name='Finnish text content')),
                ('text_content_sw', models.TextField(blank=True, null=True, verbose_name='Swedish text content')),
                ('text_content_en', models.TextField(blank=True, null=True, verbose_name='English text content')),
                ('content_responsible_entity', models.CharField(blank=True, max_length=254, null=True, verbose_name="Content's responsible entity")),
                ('validity_period_start', models.DateField(blank=True, null=True, verbose_name='Validity period start')),
                ('validity_period_end', models.DateField(blank=True, null=True, verbose_name='Validity period end')),
                ('additional_material_url', models.CharField(blank=True, max_length=254, null=True, verbose_name='Additional material URL')),
                ('color', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='city_furniture.CityFurnitureColor', verbose_name='Color')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_by_furnituresignpostplan_set', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='deleted_by_furnituresignpostplan_set', to=settings.AUTH_USER_MODEL, verbose_name='Deleted by')),
                ('device_type', models.ForeignKey(limit_choices_to=models.Q(models.Q(('target_model', None), ('target_model', city_furniture.enums.CityFurnitureDeviceTypeTargetModel('furniture_signpost')), _connector='OR')), on_delete=django.db.models.deletion.PROTECT, to='city_furniture.CityFurnitureDeviceType', verbose_name='City Furniture Device type')),
                ('mount_plan', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='traffic_control.MountPlan', verbose_name='Mount Plan')),
                ('mount_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='traffic_control.MountType', verbose_name='Mount type')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='traffic_control.Owner', verbose_name='Owner')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='city_furniture.FurnitureSignpostPlan', verbose_name='Parent Furniture Signpost Plan')),
                ('plan', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='furniture_signpost_plans', to='traffic_control.Plan', verbose_name='Plan')),
                ('target', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='city_furniture.CityFurnitureTarget', verbose_name='Target')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='updated_by_furnituresignpostplan_set', to=settings.AUTH_USER_MODEL, verbose_name='Updated by')),
                ('project_id', models.CharField(blank=True, max_length=254, null=True, verbose_name='External project ID')),
            ],
            options={
                'verbose_name': 'Furniture Signpost Plan',
                'verbose_name_plural': 'Furniture Signpost Plans',
                'db_table': 'furniture_signpost_plan',
                'unique_together': {('source_name', 'source_id')},
            },
            bases=(traffic_control.mixins.models.UpdatePlanLocationMixin, models.Model),
        ),
        migrations.CreateModel(
            name='FurnitureSignpostReal',
            fields=[
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Deleted at')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('source_id', models.CharField(blank=True, default=None, max_length=64, null=True, verbose_name='Source id')),
                ('source_name', models.CharField(blank=True, default=None, max_length=254, null=True, verbose_name='Source name')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('lifecycle', enumfields.fields.EnumIntegerField(default=3, enum=traffic_control.enums.Lifecycle, verbose_name='Lifecycle')),
                ('location', django.contrib.gis.db.models.fields.PointField(dim=3, srid=3879, verbose_name='Location (3D)')),
                ('location_name', models.CharField(blank=True, max_length=254, null=True, verbose_name='Road name')),
                ('direction', models.IntegerField(default=0, help_text='The direction in which the person is standing, when looking directly at the sign.', verbose_name='Direction')),
                ('location_additional_info', models.CharField(blank=True, help_text='Additional information about the install location.', max_length=254, null=True, verbose_name='Additional location info')),
                ('size', models.CharField(blank=True, max_length=254, null=True, verbose_name='Size')),
                ('height', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Height')),
                ('order', models.SmallIntegerField(default=1, verbose_name='Order')),
                ('arrow_direction', enumfields.fields.EnumIntegerField(blank=True, enum=city_furniture.models.furniture_signpost.ArrowDirection, null=True, verbose_name='Arrow direction')),
                ('pictogram', models.CharField(blank=True, max_length=254, null=True, verbose_name='Pictogram')),
                ('value', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Furniture signpost value')),
                ('text_content_fi', models.TextField(blank=True, null=True, verbose_name='Finnish text content')),
                ('text_content_sw', models.TextField(blank=True, null=True, verbose_name='Swedish text content')),
                ('text_content_en', models.TextField(blank=True, null=True, verbose_name='English text content')),
                ('content_responsible_entity', models.CharField(blank=True, max_length=254, null=True, verbose_name="Content's responsible entity")),
                ('validity_period_start', models.DateField(blank=True, null=True, verbose_name='Validity period start')),
                ('validity_period_end', models.DateField(blank=True, null=True, verbose_name='Validity period end')),
                ('additional_material_url', models.CharField(blank=True, max_length=254, null=True, verbose_name='Additional material URL')),
                ('installation_date', models.DateField(blank=True, null=True, verbose_name='Installation date')),
                ('installation_status', enumfields.fields.EnumField(blank=True, default='IN_USE', enum=traffic_control.enums.InstallationStatus, max_length=10, null=True, verbose_name='Installation status')),
                ('condition', enumfields.fields.EnumIntegerField(blank=True, default=5, enum=traffic_control.enums.Condition, null=True, verbose_name='Condition')),
                ('color', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='city_furniture.CityFurnitureColor', verbose_name='Color')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_by_furnituresignpostreal_set', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='deleted_by_furnituresignpostreal_set', to=settings.AUTH_USER_MODEL, verbose_name='Deleted by')),
                ('device_type', models.ForeignKey(limit_choices_to=models.Q(models.Q(('target_model', None), ('target_model', city_furniture.enums.CityFurnitureDeviceTypeTargetModel('furniture_signpost')), _connector='OR')), on_delete=django.db.models.deletion.PROTECT, to='city_furniture.CityFurnitureDeviceType', verbose_name='City Furniture Device type')),
                ('furniture_signpost_plan', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='city_furniture.FurnitureSignpostPlan', verbose_name='Furniture Signpost Plan')),
                ('mount_real', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='traffic_control.MountReal', verbose_name='Mount Real')),
                ('mount_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='traffic_control.MountType', verbose_name='Mount type')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='traffic_control.Owner', verbose_name='Owner')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='city_furniture.FurnitureSignpostReal', verbose_name='Parent Furniture Signpost Real')),
                ('target', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='city_furniture.CityFurnitureTarget', verbose_name='Target')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='updated_by_furnituresignpostreal_set', to=settings.AUTH_USER_MODEL, verbose_name='Updated by')),
                ('project_id', models.CharField(blank=True, max_length=254, null=True, verbose_name='External project ID')),
            ],
            options={
                'verbose_name': 'Furniture Signpost Real',
                'verbose_name_plural': 'Furniture Signpost Reals',
                'db_table': 'furniture_signpost_real',
                'unique_together': {('source_name', 'source_id')},
            },
        ),
        migrations.CreateModel(
            name='FurnitureSignpostRealOperation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('operation_date', models.DateField(verbose_name='Operation date')),
                ('straightness_value', models.FloatField(blank=True, null=True, verbose_name='Straightness value')),
                ('quality_requirements_fulfilled', models.BooleanField(default=False, verbose_name='Quality requirements fulfilled')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_by_furnituresignpostrealoperation_set', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('furniture_signpost_real', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='operations', to='city_furniture.FurnitureSignpostReal', verbose_name='Furniture Signpost Real')),
                ('operation_type', models.ForeignKey(limit_choices_to={'furniture_signpost': True}, on_delete=django.db.models.deletion.PROTECT, to='traffic_control.OperationType', verbose_name='operation type')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='updated_by_furnituresignpostrealoperation_set', to=settings.AUTH_USER_MODEL, verbose_name='Updated by')),
            ],
            options={
                'verbose_name': 'Furniture Signpost Real operation',
                'verbose_name_plural': 'Furniture Signpost Real operations',
                'db_table': 'furniture_signpost_real_operation',
                'ordering': ['operation_date'],
            },
        ),
        migrations.CreateModel(
            name='FurnitureSignpostRealFile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('file', models.FileField(upload_to='realfiles/furniture_signpost/', verbose_name='File')),
                ('furniture_signpost_real', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to='city_furniture.FurnitureSignpostReal')),
            ],
            options={
                'verbose_name': 'Furniture Signpost Real File',
                'verbose_name_plural': 'Furniture Signpost Real Files',
                'db_table': 'furniture_signpost_real_file',
            },
        ),
        migrations.CreateModel(
            name='FurnitureSignpostPlanFile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('file', models.FileField(upload_to='planfiles/furniture_signpost/', verbose_name='File')),
                ('furniture_signpost_plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to='city_furniture.FurnitureSignpostPlan')),
            ],
            options={
                'verbose_name': 'Furniture Signpost Plan File',
                'verbose_name_plural': 'Furniture Signpost Plan Files',
                'db_table': 'furniture_signpost_plan_file',
            },
        ),
    ]
