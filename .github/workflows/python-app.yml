name: City Infrastructure Platform tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    # Ubuntu latests is Ubuntu 18.04 as of 2020/12
    runs-on: ubuntu-latest

    env:
      DEBUG: 1
      # Disabled OIDC to allow for minimal test configuration
      OIDC_AUTHENTICATION_ENABLED: 0
      # Database for tests
      DATABASE_URL: postgis://postgres:postgres@localhost/city-infrastructure-platform
      POETRY_HOME: /opt/poetry
      POETRY_VIRTUALENVS_CREATE: 0

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.8"

    - name: Set up NodeJS 16
      uses: actions/setup-node@v3
      with:
        node-version: 16

    - name: Install required Ubuntu packages
      run: |
        sudo apt-get install gdal-bin

    - name: Install Poetry
      run: |
        curl --silent --show-error https://install.python-poetry.org --output install-poetry.py
        python3 install-poetry.py --version 1.5.1
        rm install-poetry.py
        $POETRY_HOME/bin/poetry --version

    - name: "Check Poetry lockfile consistency"
      run: $POETRY_HOME/bin/poetry -v lock --check

    - name: "Install test dependencies"
      run: $POETRY_HOME/bin/poetry -v install --no-root

    - name: Run Python side code neatness tests
      run: |
        flake8
        black --check .
        isort . -c

    - name: Run pytest code functionality tests
      run: |
        pytest -ra -vvv --cov=. --cov-report=xml --junitxml=test-results.xml

    - name: Install NodeJS dependencies
      run: |
        yarn --cwd map-view install --frozen-lockfile

    - name: Run NodeJS code neatness tests
      run: |
        yarn --cwd map-view prettier
        yarn --cwd map-view lint
        yarn --cwd map-view validate-ts

    - name: Run NodeJS build
      run: |
        yarn --cwd map-view build

    - name: Run NodeJS code functionality tests
      run: |
        yarn --cwd map-view test --ci --coverage --watchAll=false

    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@v1.9.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        args: >
          -Dsonar.projectKey=City-of-Helsinki_city-infrastructure-platform
          -Dsonar.organization=city-of-helsinki
          -Dsonar.python.version=3.8

    # Majority of the tests require database
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgis/postgis:10-2.5
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
